%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: FieldTrueEstimationError.pdf
%%Creator: Adobe Acrobat 8.0
%%For: andrew
%%CreationDate: 1/7/10, 15:05:38
%%BoundingBox: 0 0 492 148
%%HiResBoundingBox: 0 0 492 148
%%CropBox: 0 0 492 148
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 3374 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c321 44.398116, Tue Aug 04 2009 14:24:30">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xap="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
   xap:CreateDate="2010-06-24T22:17:18+01:00"
   xap:CreatorTool="matplotlib 0.91.2, http://matplotlib.sf.net"
   xap:ModifyDate="2010-07-01T15:05:01+01:00"
   xap:MetadataDate="2010-07-01T15:05:01+01:00"
   pdf:Producer="matplotlib pdf backend"
   dc:format="application/pdf"
   xapMM:DocumentID="uuid:e603628f-ebb8-4946-9cd8-a0a5684ef649"
   xapMM:InstanceID="uuid:cbd116d2-02e4-1245-af02-4f03e5e4ceac"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -148 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 148 li
492 148 li
492 0 li
cp
clp
[1 0 0 1 0 0 ]ct
2 146 mo
489.757 146 li
489.757 2 li
2 2 li
cp
false sop
/0 
[/DeviceGray] /CSA add_res
1 gry
f
1 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
2 146 mo
489.757 146 li
489.757 2 li
2 2 li
cp
@
38.582 120.028 mo
127.758 120.028 li
127.758 30.852 li
38.582 30.852 li
cp
f
38.582 120.028 mo
127.758 120.028 li
127.758 30.852 li
38.582 30.852 li
cp
0 gry
@
38.5818 120.028 mo
127.718 120.028 li
127.718 30.8919 li
38.5818 30.8919 li
cp
gsave
/1 
[/DeviceRGB] /CSA add_res
/1 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 148 ]ct
[89.136 0 0 89.136 38.5818 27.9721 ]ct
snap_to_device
<<
/T 1
/W 372 
/H 372 
/M[372 0 0 -372 0 372 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [cf /ASCII85Decode fl dup/DCTDecode fl]
/O 2
>>
%%BeginBinary: 1
img
s4IA0!"_al8O`[\!WW7C!H\;As6]js6"FnCAH67k!!!!"s4[O,!!WQ/"9\i3"9\o7"pP8;$4$kA#RUtI
$47+I$k<[S$k*OQ%L`gY&.f<[',2,p'GDB)*#ok=+!2RH+!2RH*ruTN"pbG>'+PKc)ANi!)BTk9)B'\>
+!2RH+!2RH+!2RH+!2RO-71&d+"Sro/1`>'/1`>'/1`>'/1`>'/1gh:!"fJ;F9-Ic!>,;5&HMtG!WU(=
U&Y/n#6=i+!<E0#!!!!!!!!-*!s/Z-!!`c9$4?k7!WiH)!<E3%!!!!!!!!!"!!36*"U52;#mq%O!!30'
!s/T,"pY55!X8^I!<N?8"98TK&hu[L"qtDhEIefZOeE!pYsK\O;UOGZ(1QbYEe<g-6Sq`)U9\9M_DO_/
PG>HB(K=pe_p[NM-A)U3(`A!k77O)[<mt%s)Y2q[`73l?AT`]lV7":mjn35/L6e^F`n';G2b-q^GDDN_
\&[+`pGb]GBR#?#W49q$kkHSe8QfbQM4(?Rak>qS.QU1*C3kc+Wk-@,lM;(m!WiB(!sJi2"U5)8!s<B@
!!3`7"<eC45m:+!@3PnqJWV^]Z1&IDdGZ<:'iJL]nM;FI6\6):;^J/JZGHifdP^#PK,7LN#RLhT)(%71
)CK';<B'KDZbn1?e)U%QPbb\)eE$75FbQ*W[Dg\XogVtoG(u<[[`6n\p.&1sGDDN_\&[+`pGb]GBR#?#
W49q$kkI/0=_W/<RAma=g$/;^3_ERjHA\/k]#ralqZ#7L$j-M1!YGMH!'^JLPCd:)bNU?9;#/D2-\/JH
<>`aJ*OF/*(F3ZVQEhmW%kmN3]VV'L^3?-=Ou2U=3a`.2H"Cr17Es[OZ$3^!^an&OpKN#*?>T*O=D,k_
CZXk4L#Z1X*kP@3^!Q)$QRAKkE6&c/1Q1X[:,4i@h(C-r1+6+X`H-X\A;SB5p,GT3X-*TT\NLp(b)GN1
`O2,/&ND.$$aK6EK?iS03J5G$eLD>L*r4Z9FA4n_A]3'CF`Iq*Rs5#->""*AF&1L$41dJNEQpECCpcgR
B'A5kN0=Vl94pPKPDboo/C5VO32#cYWK7tQ-Ff'PXSH`?$7Vm-E]pCj+sl9W7e/\U8;Y1jNnNRnZ)EBJ
Cr;,uVbn[O)m.V"^2Eg>Jon!.]JBZ])#N+G!bsKcB%obQa56-)QmS$^0fc??G!2+j`[c7!W51A<X4kc`
T[):^X2I9Z`PIR3QL$8'[%0i&\\?PUJI_!A0ZJ!-Q<j)rN^/A8N.Vo(O]FbHN56ZM&jn+rB8fc:e`n8_
2Q?qIl'F+3DjjBq3BB;u3@74/gS)i"!ZXB*&q+%Yf8fZtVDRK#%5=nfc?A;<c/+p@6dTOf`%f6[DTp=L
GKkuo6\h/>r5:R?Vcl9VFL-R#0XWs#Hp$0n?>,_>,=Ar*@MKq%b\OQ#om)Nf->]F0(e/sWb3H:QN=^Z:
T2UTfC(/pAG$+*_.(mmN2Y*GdB4KWj,I>bjAAG&^D<:93aI%1h,[!?r+HSAGh_e]=37FemB`]?nUIN*W
gT]!_mJN*@oD/`b'XG>II5.<hg2e;YH^tR@!(NX93UH;V:@ATc0,]Zl*/K<d.P7>go.(30Q"FP`=r(+9
LH5kqjt_pe*hj58cKR4b]!AbgrK4%?!TUTW!c0YpdR:0[n)9h`BBn\<j3D%s+"aPd?bg:"oAFb/)YjNb
:@bc=<.4p,HHt$CX=(0=AC_f/MAfBbE6_Ch]4++][*gtFVmc:+J5\G`GAG?Eme#3EMeKu)C%1DJ9TFR=
3.qph:&%%hSQBB4ig=gkM/Q0Oo+%G9(_$'9`m]qa%QHkR*ae%KVfk-C\_1Z$J0(&`nGjDSn9;%U2K4Ir
fE_dgO?*9'Ql<U[\T+!60KB#pR]1"j35]GDp`-V9L5HDVAZ%l]rr?Tlb\S8)7)06"b8)_ZX]5#]QsHDQ
7ha3anq%q9jc(sB>tH(Tk2!T%*$F\?ZP&RCbj90](HeV(qc&D8De8Wfa>kS%`u+),c7<,QP:p.8m&dfJ
H?#S2)2TE_S!>VMY)6+DVkMA,PI2YVAui6kU(62)?TLmtD&Dqf>+Wq.9!:'oO<)(ElT7&7m.5=F]`bT^
@bUO+WsN/mhltDhZMRa![riPN399/l%<B<VAniLdZb+TIN8`%;l*>mXbjnC@^i;MYCB5;Ag-RNY;d0\t
7&O;/c%Hl@5+EB]Vs;PVR`tV9>u%.e)&8G.b=pN!_BS9O@1c3Hh6&f!\VHA"EV4<fa-1Q>I:X@Y^h"at
iuY=beDuZZ)#U-HC=DYhBA5-CRs4&$f-JAfb4.qeT_jIZoc:;IRKff<cQqZ)9h7\WBXM-AAD7N?B]O[n
Od^[/ZRInr^aTS4B!)V\oK'i/*CMkh+.4snDL6#5fm9r<aO950@PVWtG5O.i)OG"U>(,L\1a=X/r%h.&
qPk#`Y:gjE1s9:3Voq3K[rlj%:M/V!M>Rt57X9c&C+g`Wh$sr\7&oXC4LqUiiuTZZd[;.#=`AoVN$:#*
15JeN*]^I@MI"L;I$*l#aEZiKKeDO-`K,=If-$*ah;R_CT-oWAY9kYXS2SpCP=;D-%YIcRMF\&T7,-(#
dMe=/VD;jBU#7]=SYSW8#hgm=+WkOOl8@]un\]("#u'N/6VpF`d,4pCMa<lQUELrIn7)GW2qZ:F7e/@c
m>WCAcgD`6m`(:GjRk;,j350T;X>fYkGS#Ccpg38$WXVfa):_%C%>)EH<dfiM);qrZhS-7cVAS)</5l@
r1CkM3Uo"e@NJ5fT<n<(IMaZAeZ;Iqr1CkP0aP(NWAi5sE700+rYZ-ni=6@$=$c&a>L<M`[h7B'F+(<p
iP]&P-EG(U4^URaoW>p+GmC\sU27A$4WfNF'^6,33T])!XYQC1?&RBgKeL$ebU/T8Wo3Cg]1^hm#2n#L
l++l.'f3t)!A_-Sa\7JH_!<ir!)Z3HjcJj3(Kls."I,al"D6CSgEn;;WRpht,Ec',Bu3u.VK[HDgSDo.
n\(XLILV`R3qnrX#(@fbcWfaRe`),8k,#(;o$blAN>p<8m.^"pb=SboO#M3Xe_F'k7)VREbe>\W-]a*=
Z]Kc"ju,Kajc-TP!\[W8fqI$Yi,i/YRC/<89s]cF:=AY#G-)f-'fSiH&2kEIk3_aQGB_]O,D^AH1uQ!m
AiTL;aRa;A@o27De[Y=sM"\;"<t]qN_Ke#UR:+@\e8Xn=TYq3e-A$o_K:>RfcFZrc(Y3H@o')]pAn7oT
'B*HgVh<W6r+9Ou$,21(&Vf-58)$(aMf^>dcE&7bY'GM6l?U"EbJEI=+]!c(S*RDEOM0e;%6uH6TZpi"
9\ka0&Q*_KCioHrS.,3Q:sr'5q7P/>3;P[q7^n/Q)G?-=hJ'STajXud8'Oiq)4UPi4.K+.,Mp=&:"T*F
e"bS1Gs)#$@<-+qfF$a#6,=?J,V5hDF*aT=>-*)[.Zpd#]V3He=)t090_%%@]IW$.R>Irk>Eu)9dOI8X
RLN#DS_fuCC9I57_83&-aQ@*\`<<dK02aP]WU/EQ"?HucGIA`rke=#DNd&1+Y,JqbC3V#Boc4.oq`g*_
RVcns1Ch!ZkKp4*3L2O?8CjK1dAd"'A9BK/ef^m=BjJ%.C)i%Ed.-@)oZI`<[T]Ke8(-WL:AKUDe84&X
oemkDU0-pn[W5Z]W;YCkpp4sPB,Z/F+jV7tm'e24?'-(f=*C=.o?P_>DlE@\C'c3Wno(EV`+eK*)@4SK
f:=hBF(D0f;3mEUD>7ZEf'0R\RRA1%1WN6S/DP"]WIkWS$[tc5+@=:4MIukgZ[5'WS"o@7b2\7&Y5:rd
UH<+_G!E>r1bJ=UdHl;gh(\5#b9!?/a77JFm&o.'*8NMEpa2AgUZMLU9tnr'*:%^8r\2JU`@,i"1tsc3
W4!AigG8?mLE8Ni,MQDi$YYcP<c_hf8o:/&gYJu5]>*]=c/Pjh#pT#kB*1?KifW'cFPW!cCnQj2LrLI/
8"5d9Z0E<obV`#Tb=UDh.^u##p3-L&9Y=,C\fA@kj`S)C$5-G"%Wja;59$BIB&P1Uc/0H.S,F[gg^KUQ
O(pV=Y5-IZ1u&Cfi^#pZ4O01*1Q<cn6>eTKmC@%;oXhEp0h#@<rn',%e95N"RRYe(S1^]M(..^5I(V-B
]X1pu*>]FCjjhjW;d<88FP75K]%Q8S]qIt'm_/4pcur3Kb\MQ$IV;fnYC,/8m+reDX!YH8Dq6]4aL-J6
k3G50F3tD$P6>1(^C\P.7qS1.OQlL%5i4De]f-U_1J%%a:AM)ZK)-fS.7.lIO*nDQB6c;I,ri;Yrn$1n
bLr60S4<opBrLVdF%`_'\f@6a)<dsFbKWLt)75tTMmUO'iY8qeONO8h_inW8n\kl!T.kH5^6c8&3kF[k
RqCn3][Ag4ZhS0!V!YoTM.q2Iq/fF'Igk(?m9VEJ4O4@;GGT8^_t[iq#.'.rSs##&5*ak\0[/V<c@]=N
*gp`bhK(#)Fh\1GR+dDLEHN-M1@6['J2<\^=E.hi0H/*V/EEmScS4aW--3c\ASS_G7>SL5i&a;!;LK4a
]2+/Dd*l_,c"WPb`D5hAY="a&g-7oqfmJ-2`TZVFS[IU;qT$<]A*eO*kqdLt(KK]Q4JQ'4g`7?@4ep!H
WQu<^BdJLle*1up@03c968Efa"jbMMNuBL<UWoro>JZC`VeUC!'Mcbmh7k6tB;0Q.BiT'HheMk7%(S*`
7nWFnVr=5&fq"tK2k8/U14rjNT<n<)b$Ck+dDhdB<Z[SJZ]4A/d(A,hkV;V5#g]E??/%BP97-ZUda]dR
hf2u9Z]TtmPN[<e5/A_$;QRf<^1I'r*;oY+Jo_Ca35D[m9eIEH1"oeA8_L'ZR'(U<RB*=uTD#FJM+d7M
Y'3$uW3Geqr"N%E\>rm#1g-A5;+VeiY:Aq/]K'1NA>\^pCJD)qNCO@:jL.FRg3Rkq3F:=enH.e8[jh4s
#T:EnLD_aBUHBs.<f<D"a`1&1rbmMu'&:iVc'FR!mTc<3VmLX0QeYj=h`BQuB$fW1>0V2]Bl*N*p!01$
V;VoN5#*lE,O/d->RVhb<qN^?o*i8Y$G&g4:Y2/"eV?!H;/kcrGG\4h<OGIWULHS%b)Ejc=dr<Xn'g`k
6PZn].n]7&"2=StNrX6@?p[A_(%:qZZG6iq[.]sQ]!oU:n!`']O,.gkn9>gNNhsucY&XE8fsPF]Y[j^\
:eT&KS;+@D@4-2qc!aiaN7H'_&p*(F.&fcL4gSRpeIg?Kc_n-$OH0h-Bm%.-QW'_QY:RTCD!86PqJ[a9
KdaIZ\Q<V&j6[OKn=WuVj4j(I\Eg8bcJ2H,Om/&ipk)iBg1+nGVSHdZY9+`&?tr`6=l.L+>i^6%ZM<m$
CSfU$'].^A;`MI??u\i'dV1dYJ9+cfkfaS03cC4N4+GKa4nocL2VLB.l_CW4p=C*\,eW6r1Zd:0*?60_
/*`)$R^C<ECZm/eS]>=-D"C*?qo'X.i\`\T,[U)K2)e&_[f,/FXdlkuW#>U8FqMleA#<D)`_KT4g)?*h
:j3@@kC;.Z%aU^>`c+LAmKb2;H3\%l+tjDZ)(_b;%q1m4Yi/)oIB<Z/PO3lp]f0LpW>iaHH1u#BXn5B/
bQT,3)^<JtAqM)g:O/_c$4/l0Sj^W^n!PuVl#q>0"+`YEZmpUg4tN%_d<:Oh@#:crVKCXdbWH,Fb/lp(
/T\Gggq4fiHUAS]9;]/Z?*gBVC\V0^D(VEWe%'YHSj(cblIR$o<OC6M;f'G'G/a,k)A5tN@,jtfT%<6&
h#/RXKb=V&RNjF?mR2:$a_'PCOepKGaeM%sU6aS@naE#<MmITfkqtN&.;[W/1p1q(D''%+R;PGdqpGsc
I0$!u9^Lc81IKk7MRPZCMhr>9k,7fG?fdH5A1Q+i;q__f^ln]tWdq!`Lt:6F_EnIh)?W[dl*G@`,+.Mg
`@JZ?0Q-(<j(ro0jGNDq*-g;:*,01qnaDkj%Cq)pX4Z_^2Ve&Lo4`H%?>Ui/Pj(AA?9hT]bpR2uG8,<`
o:qNrCsu,0dR4/OL2_R=fb1SpnArDCf%3PE<+d/Om.j+Gis)RbXiML#n>-3DiX(;d>3<^uON#&^!@0bF
%rC"YePiQoVmR;L?OYUtf/OX)V%#;fph%DJ[bOI=jV5/k&K%W+EMq.&eJK5sjh)0cc)`Yi`OK>&Ut8X*
lhG%:1]g%.0r14-6fs3SFWYdB1Nka?jP:h76.K4cSI^4f.K2dWb&Cn[;NkEgn+^Ki0$Fpkdl]GT79SnA
l+U#pd#R5g8dXUEaD,?,gNkH0]'QNZ;KEh.JY$f63\t@9q_MASX9sM`k5PE-,E_7%BE<o@Q>dDtj0SV@
7UaYeLM752P[3)G>kD@Dm*Z!Pp7AW`8PR2#K:STl6pQ%28`MF\nQRQfV(GP,.@%$N1sT=51l$:%g%iR#
2Reof>i9s16;>.cB'V^Y>Cs"=B.S-["MK8J["LaQ30daV1.+>Vm-Jcd`'b2LjWfh`Aa'"!,dKH?GA]m5
q=QRC9^Oo'g$G4^,HgEIaIqEf7PrDO:Y>8hF?0#VO^=5&R5sN0NQ:Qu<E0dGAenX7LK>i;7$WoYiL9\u
WHYo*[,@s;"#-RAaif\V's_X2h'h9H<i9>l?9K)cY0FfiH2Uc54*`jI7<>rc@2ocD-(-((,8g^ao4/sH
=b3ks?n4q$lAZ")o1n[RPg2e+M)Obn</SpYm`T/O$/q?sP&:Sb>'+'u/]X#TeMrFZDW.NSd-,M]gu=5%
f$ThMFW)]5S"sKEjb7c"L7R0.81s"D?1U9#6aXfD;U]t<AGfSoi<&*L,"Ts7>*1/frr=%6;5B/Gaer"3
*%^tQfD-.Z_sblh[!Oh\-YGfFe&jFl7Z44HO`gSCchgeMB_$-?BgPdj5q$`CL:7BgG5?$06!BPt/j:(!
K8F;9[Mjl5^p/u56o>+Wo=tDKIOj#.g*od.f4qS/,Wa3";9!op>M6M5?#DWA8UtR0b\6>D++AAo9dqe,
dnc_o@lI_%Umj(8o4a7SA!==>T\GWco)t<mJ&LE.L-<eRP-0VqI;2f\a7u1%H8lCo))S!5G5?lq:Q$s*
Vhf<_?icDS=&*I.Rb^^U\t)eLQg'\I:%OD4]E$Z-'/;&$hG8f;S+_T(=aJm>TSc.(piAlb83BCb4^>W`
BKMVX'>ARZS"u)Vg!FNB;BYCihT4I?Sq5R@GR3kc%;&`\Uc33>0"pkPe)Q5nE&PGeB,%>c/h!$rVcGVG
h`8F!dYV1nVoiJ>5sJ''4%DY^Zd@oYP`$1V2pQ/dT>)bHa0-V,;kA)jCR=7s1Q$RIl?c,m4ORM&=cOah
NP4qkm(U=>NLk2iX33<DMI61Z)!%B!pZHanlpuqQFjn7,RHB/DCpu#\+kOaj:Leqs9Ksnq51=nuD'_+_
IWN2rfeO@0P]5]E2FD2W6T$;dj?#`8Z:<Z1T.#IO`?dmAhP3Z,4,b)ZAPgIYM%)X=-@1Ir9&PZ^BX!S(
G-<SC/\M=PJXp^lOU%K'8Wt1,[$d_gY'%<]AiRWF3:*?)_JWcMQV4\?n?Nmj-[$9LJ6+TH]ke'Mn48et
'I,W/G'M-^kqP^ZnN!]@"/!A*_IYn%FEI'`X2POt&Wks+/;^U)1jjl!SsqYHJXQ_--*>k4EhL^QZh4p`
^B*;%>+LnP]4XX3bnBG$q-q>sXX+_:2OLd=ggJ;@5C4*d>%W447(YQ;M+_6Fi?gRK35ieZS02:`1`\p@
>UUsWHHZpTFSb>8iHkfq0-k4":PNjPX/1LdNn%BTZ^j-DlbA1"Vek?)PI8e2AB?9j^3^@U%2HpD<t7"2
Hm(sK;4A"Y4HaZic2fBDmc06Ho;V))/BJ[lohlF`_*#uCU;fO/D]JCebgC5H>o!`>,K[@,Aj\Y1a7%<g
8YuPB@AD6\&B:WtXr^l0j-r#9L^r,WBF(YCgg)uKA1%W__^7KR1*&AmR[LA'?l`RH^bT1ZhVck!f&iJ)
W6^V-Q>'CkN\q]QeE)=[e<)(dVFMc*F-H!=YVt%/M.CRGT[!dJ^e&b(:,GQ(a#)-SnK"^Tp^jn8MO`Pe
B8fABI9^AN:NmJ@k@N?CN++G#WPq%HU?:.Nl'pHHW%a/U'LY]aPN#&*84QiS<gCl<:*DMX6mic%'r;C]
HMnt-FID2%_Ga.kjeIgIM!BsB[7T1`gVYiE01QNbN_N3'H2dl3[0qXWi_FeaAS?(&L5Z@u-LWP;oukjp
TOZlnG$7T]4pS"6B^s4aV/,3$d3AKYYE!07*]e>eK,$0/%puk0Gqo3f9s!^ZB;;BUBk&2[9(MDQ?]R,C
F,oWOb_H!Wri"*^R=$sWh%"HdcH@6P1tnphBVBGWI+04_iTTWX3_PF%Z;B#+2:":O_]M(QOu&&*UV`8<
_l'Q(dhCI;".O*`3@3(XVC,Pr)2g]8*UZlg2^.CdQ@(_%U0Y#AF_1K=536@+NnK&S?Q"!,EG20`rfP>f
2\uDnb/oT4F@uY+VjBjU?5bh8BpH=$>g[;kn<Z'JX^?cO@3#1Ka;B/`(KLnqCR^;![[^%=PSh]JUbB\Q
SN_s9Cp<)a@QK7-9'r,73h(;]I8^m2FO7GM2S+;0mW?%0@o$gY;mpLs9+Kf=DCLU-]Pa&jod8VVlHR01
hH?'Ke9nTbm7?#*a(lpsf:cn6!l%3MT5A$a:0sAu.C-J/@lBoKUUA(4+\l6p?DfF)kbTnkH*ms$ebi'I
M`O!+As6F[NE2cZ(n[2'FB*31gH.UBm+rY#oXoGZmk42AZL1fsS[OGK+p66VFFY<UrUnC?cJ)t.$j:&3
pbBcB;1dY=AKMCd.E"Z\Gp=03N@RPg:+(hWR_;1j1$\#r>,[I_cUlL@C9D8.3p7'VLK1<$P:b7j8lD^Y
>t8SDF`c>r\IV/&A#+gUg!Au2;?Nsf,EdHgb?HS5gGqIFm3p-OG+(!6O$q8AL`+;!omi7<dHS$6.scPS
W+s"`aQ^Af;F=<N*B(KeK:bYB#;rG?d-3V_JEZYe*RJiZWQjk#[#&pn[,rf[`LpD`2u66U'<KFl'GQgn
2NXoFNR9X?P=jsA^JA_AjhdN5J:X6Y>s/uR)3C;\X?T0]g">U8BusfHraSi'WLa%hAo/+6V3gWl;6JZr
DDkiAlh$A\04CQr&HnKU>^D!Yh_R7P:;CCoF(?1gGAG3TqQjP-PRghsW]8=*H(iQ-S:2R1SGof2jjiO:
OF_"E2g5Ik)5,LDYnp,rn8_;Vk)e#d1tmpA0[_c!15(sjBf2$3".Q-OVGY]/?Fe5PL9lCn*f!>,;:4-r
*96_*Y;jYi1gQ:_"[N9?3N('T3GmS]lr\50(@$3WR/:56EV"?I,-de<RCN,\Ec?&4@hua(bJ-%aYKFiH
OBd8(DkBX6`TV]26CA:9MH?s$qYXp:)5<P;!?'*rk$hWARK>dQL`D]i;2ZFJE)PH&+XM3(d-FHPY<4p*
2lc+m=)@/DHE1J,1CMbb.EcPkFLdsfP<08d[,WBJRuDVD45<tV.X"J%jCGQcK0703cZBPf]L>?JSGp,B
&2-&Ea6L..kdO/_m1,^J_Y0jcaRXKEb[?ogBn)Luq5?HGI1eE5,^QVn,-;]1q74jq5W,laFTuYH<V%)#
dD$?c7ZXhX>c_%T7NJN)M5I5Tlct,WTFc:8D#fJ.]XiCA[QEX/(,6BgE8hE7-nJ\=rlO'P/tPoW\J*13
(/puRFNYkkL[NDfY?W:c];O1pkWL:YnsZic=1<_*8$mVILA,u<:;01kY05!\PhY[Fa7b:,E:n.uM.KF6
oOUeTX#Z_XZp]%[=M$ENka4_FX-t&)Zj'fAQ4Cn)7E95>\BQ(m[LA_0%`mVmLffmc)6(a3##<JdB@fT-
(7fJsX#AaTRk/6l1FisDMiF&nZ5uPXFf!^$ND><:/7!=jdHbYsC:'4lgr!=Y>M7`"Vjc2qiCP\4j':lV
R5ga^N?R\b.8&_tHt#VnP:1<a8t=FDd\(+o]D5I$)ig<q/tBpuYf]TLeY?8m%C<%]Se1$lR0ACQkb;dl
9)SiN343!GG?B!X0jP$L6a/\&!Kj!fLlQ2ABh/FuVYNmmHp</+:8bL/3kEQ6UGBqB]XT2a_tXYfl?c\t
mO?IBoM)(.rBAo9T4nUSCQrB_Lrc]Cp<5)ad!DT*!dZ)!Mq^8kdFN0Zgh8OVVD1S+1PY9KA_Yp^Arp+r
/]DdneRgS+gLt]6&4<hc3#Rdm9=0^-M"=*j^EL<689B!#W5Ngr8pKLI8gJ^D9h>@XUW51#,iS7uNC.n[
)s>as0jJ'834;U6FW+(X2#=lr&1n,raK09iJ\H.fUS4I)cG?-,):#dp(cYa4CJgFGfkCUNrCOAg;N$f]
UsVoSJYjTkg=..LUsijt)I0XO?DVATR+!uR10AbsI'sY3I6$m\S6_6L5rmE%5=s@+0_=Q(K7TXh@@Ls,
k7o'TD]IrJI@nH'3_`A@MJTl_5IL:K&a\C&&E.-Qf!J4+M#I.WdHJ)GL7:nR.ob%l=*+,uqZ`X_k*o"8
(qK=,n!VrN0#tlf#g5:??+P1$Eou<i)7/f::S`8L4,2ZWj-m)^^P4l,:8>0W><UBHYRs6A)g`Rc]199m
*Sjaj?Q?&4BtAM]TMmh1e*V%"\)Gb[V)j4_gGk5Am:3m!9q^k0>:]PTF.(R%V=f/:(M&0G6<S_!_#3X?
]u/M*\NjKM^/lkok/Xd.U@l7pb)'s6:9KJrH!^;L1r`]0-"NL3Hnif5`Qb+2P-A7c>g:*cU)bSa8P!!Z
l^^4l;fqUlh*!(Y$.h7&c.$cZ51%*0?,=[qB3h4\3ZQQ+93s8I2fQmYin^<i](EVr_Zq,m3*K[5X-0jO
puU.M<*[Xl&pM"]V586C**b4=L+X$p[BfJ\)J(r#E'UYtB[\9VF>2Vo,OWiI[(Bl.^"f,Sj(&pO0M6^;
m`mbu4f'mum54d*iq,oSe%#+r(2mnYlKf\H,Ir/(;mo%8Djb`;:;d7/d;)M1FLtr(X'C!$\gk`(%Ua&K
6]=%:D%?qAW_d=gWQE.crg"N5ZL++0K8NF]*k-_LB8_)uDB0J"AF4gXc#V"lk&rr2iooZM4fs-5^!1od
cNe%NoQ=<K9)>X^o-a>qaiF>Z!1W/tdbK&LI6%+MF<?dUdJ9!TO:GRo1,I;I78IQ#-ITQS:d-PM3W3l,
EHH3+Bm:L1VRc!@ilsYna0(FL6bnaerdF@9p4!0sQR/c%]j/[u%L3hB._i7N%b\,9l5T6Ri@J&2dcdLU
2`beE]590uFr.)\H?'Zmh-nE6kVW*[U6V4/8l.;kK8M9oLW'u):=T&h/!r?d>HQChXZa)+kMIsK@]*Fs
"X%q7odcBe']eMt0rrqe=)?Q!SNCXDV&_V;Rrn+_c'EuoUHJfkU1kU7D441BYCnr2:8Zm!UhICQ>E3_e
U"WcGFV:;dR73[UVLVT**HnoJ[pmh>[)*t[k;@;?G</U:NJ4@%[_E9b-AsHRX_XH8[N$r1fos!>[0\fo
0sHR^NBD&%T)44cbkPYVAIK?*QWj%YjjDN2P8t_X+8ejPWQXeS59k$;agO2R/c=(!"/"P6Q@bQHG$h/1
Iq,YXTFP7K*8oa-K3R#5*L!O:qSLk=1GERV1*/B]]0D&"DBeD;Iq@q`SgUnPQ"b?e=$$j4Z0!o)AA7'W
[G*_o0!=#29O'"^W=Pj9Dm['"QNlQ/hTJAsS#fJkmBJq\D'pikA_A;*DoioM0[\nA`9)ubB3<?UOo=T'
d\?M+H$=1A\4M!!cG@Omjh+aYrMcrHDU$S_,Y+:pCG">^8P:'[-V^SL(K%'+(0oSRc#0t7WGbJE\CrTi
```d\UZ3ehX+Vq0brb'"0$:NB`66k63N,*dD/aYuFEP.+:AUqHe]dr;%MoIuhBoeb,]I_-)7Z0=7tm9C
jf*0K6b[t#iD[(;%FU/o;iIC?n)KRPZ0?'O<ZY`_&b1ps/"W5i`6[-7>oA*Tk"si^1&%3hl82gBMc\T^
d?s0EVq*<1I[nl%FPJL,;l8J`QJW]=8Z=f^$usuN>@)*o0HmRW/b-]BC3j5HcboNib=UDlo5DQ,$OYGV
!dPhOL32-DD22c%f'o,:\,%gNJ`GY*2ct2](OLd;EGc.K9T?<K93LB9:M_3=QoUu.F3Rm8DH5F7$.E3C
Pa1',f"5Np4K`QQlh%4r2bs/h7U;DHZg>tZ4'j4Vc?$A`qHYF>nJ6CXP_F13fB'OY]QjBGp"3nAS(/m%
MpiJgZoF$m(gkO,PuP8kI+RXF.uU0nVsQ)Mbnh),Z]OQ\c/H@-bHcInQKScI/p5DM_r8;\BBsg.FsX1:
UWYFbkDAK2LP^b#RZF:No5fNp'=l/DK,U@hiuoCthjZ$-lo/o\?"`:2B*47mn79rC=AF#gRcmr42F5E4
q52\VBu&6_\DU\cjnkZR0PfE"3W0S8Ib3"JUTP&IW9ee85',HQph_[N4&$9qNn'Raat'#(PZ+=+)bDo3
Gq%%"6TT4kROgMja-;RlFI7+F?(NUs'J/nFoU=5TT2AF&ae%M:oP6'/2U57/Fe43NiuTbFQ>,mY"$EWn
ZZ-WOI?T_"S3aT/mqG:KmCPPe.Y[,Uph@7.l0<LmA=#3c9bXYZCCoqmD_PieSM#>*K27tA*M)9W1Mcp<
*e/Rk@-lV2la(BqWf'MKRljk<&F8n%\;K.RGL.8BZFi\4UF)mm\f,oq=L2A(<p&Dj0(cIlo1f5bQ@+U1
'*sGoc`,-@[`9Q0`p\g9of[>iGBVUeKc&oj8&T`Kk#Np]c;>"N7@F,sM#I-=EXSbq5WqW[W:KH5SE;n+
+GIIhBgck2M]5Ooc6K^hTNeGFiT!Y`hr,Me/X*PTo6-5BfNE3+*GJ35S$i$&c'8)bdRgBN_F6Zpqm3*G
qa(;Fj,VELASb":o!+>B([sH3l+NbnF*"U=N$XPH<X8!j#<$h=?q`;HYD!PmLsYkoGr)Q9E:W;]\MX/+
a[\4mNdF%H=S:E%L0#`DA_M:!(?s]\CmL&MCCI[DL]TK[J$gTeFjZJrQWa_a1PF@%=`^hN=7#(ND`9J:
&@0DOh<?W`#?.VD71AqG%p[BY:D4_:iL&LZb/Wp61QUq+bcBF]q_M8_>G@r8Y'L$IBPIApI35]dHrS&^
d1667/AfcVbNW<!4/\<YmaZ;USQ:\47=%<*\LqN5M#I.]`WllKNKm]RUhbPO+3,Up5Xe-D2gQj;m+f/j
T>rtZDEu)t5n%>kITD9#6G=>\C?*8lL$bF%h(uTZ29rP4[)CGTIClHtV,oTA/"V=Fq@[N$om,p)fAPg\
MaBe/aX][5bU+44e)<:?!Mlja]gb(qbO[h.DM6PW1n%([T8$chqbEgG5T)>:51>+79]EZ_[-Sggm5BdC
@&J1pctApC[^V(+Ve0Wk,@ani/ZR"4?B\0GKk-0:aO9)]B[k@^#rK#lFIF3t'@5u%<.^FqSb&`,p3$"Q
rC4=(-/CZFmg!J#3iopIlCmmb9hOQ`BR"%/_j5?fXG<,;:1,4Zj1._r*-KLAY>c_61tmC(8k#137^_#Z
dOGBs@EVNdji7T6FNAI.i")%>XN6(Xf#&fD\?gLKL8f&YT2&N+)*?Y45[o=IRumI,`\QTm$>#Y@X1'!o
AJlf2kr%-ZHN*u/D$p,^p<G>#FWra7g>?,`m9ou(Zcp$_>Ks@X[)F^i[Md-KerWYq;hmmm;pYYhbS/\7
-_$ME#a",Pm1G*5/]HI"N4G]2ADDGRA^_i28PIrS4eNpWh+k#VV?-gI1(dlG3m@nHEHQQ/DMKK0<HVc/
=tXpn4`;:=b6^P):N^QU?*eU-/Z0SG=Yp-PbfJ)"W(_s5/U-H3/m;Mj/Wa\tj[dW<BkA>:3).MXgEe'H
3,Nh9`a-:eA;!69__mS#4@_G7O+s"VWM.V8Za)uSS^q9p8IauFD3')01pN!l6u43=9=Mf;SB#L*M7oIg
P9C?pfQ*j72ma,.\']Vpb]ZO)gMb2;Sf,aqI-A;Pf_L9J+kH;M,^6/CcEg02!$9-?6&9!jbO`h9VJUfC
&JcT6"ZXqXVfD#QDtiB8UU28_fooX#0R?6U]Y,RV8KBUZeS<$\cYNDM4=02p6m#KjLVkfj392/Gm>Y`n
[<gYM^?c7n;s#+0Pac/dP_<+coY/Mh*M,bU,q0H]n!t8M&E/n!&Y/<Wg%%WM5`ZOjD.d1M1n*:LN!#2p
9.:S+hShoAc;S*)+:`;\8(k3p0o"SAl'u[*G./8hWR1?A7Rk3Pc;RrH1G;b'd-ua#OCkq"[pV&2-qnEG
cH[YI8(nLudd*2C\_VF(0e.FNe&Z$57GZ:f>+G!P>!QCu2H`U#QVdmJ>j*nU^^_?Z.pHq7c;(o%7KF>W
,&KKL4HpiI4%/Rilnl!?-BKXQE?1g=K(YQ@@"_]3c?E-MgV1L[;bR270Z]Ot@KP?+h4hgLHalnfF6afd
4ALMCcP$]:Xm7=O^2<N8:I1euZ<R!3aDKfi4Z)9qRkpZfg4R8;__esh;pKQP?>j*>]F(/ecStQQ/@Ta6
4C$S<\69=3maI]N]5GrJ69R<W3?:E-Aa-E);Q/VLe`Sq[[*stEXpCic[X#01mA#RGMW5Up3GtHjQt./G
R[l>M!gd1:$KlQaqM_;C0=<KC(6Mq9.pD,3p-4B`G^e)\"k+O-RP!cpI[1Uhpu#'.<Vg=CfPNMYQ;@X(
'2t'H>i\M,B)iY#3PNqfZY#@GaZ+i"UH"f^Dc(gt/j5=#IKQ%+jZY3"Q6G4[/sBe9?Y3p2o6Tb-Z0V0e
[ba$uBJU!<;]I4Q0hTm)VsS5a\XIe!CEb[>Gu(el8\09+BCcDW'?iB6\3,-pMUOmg42.QE>1e^?=*bjH
lq3;K]#UFUXbUV#&ILFf>[L[9KCI&sRV"W8ce>lsH*XP.6aT)b?2foLRf(&`FF([TLEK_WQ&VkZYl.^X
EG"4dkB23P`RS7Z:ja.fdUT"'k;A[O_+SZs29tfujVZIbp8hgUA"&o_CJ=@Qb0(fsCG]`UL>G]$^RfZT
$:<3G)eL?pAr!d:Z&!FBGU5,;gKTA.8C'Nf:=S(HHCiFKj!2Yf&VWY0M:_(V,'SAs%qP#b6j[;^[W?bS
7Ti=I1qfLuN_0fS57UW4,L+qOe&EP/1<1M4l'rq;eaK!qc9.\&[6WP"]jN@^MqCkcVp9X"eZit'kC>BL
l!9j4PKRJ/(+aB\ObJ/F8K7hc3CaS#rAs,+]lO]iMpU)7d:PFTK,DlM[:"2sdmseC<od1=*n-(XT"hVn
)F^JOSE?I`GPDH?P%Ia^38/t^R>rNSX+jObh`e/mh9f^;M2c6^UH`)\ZGK-BgB<<<0a_qC4M-EuOiD+(
H#Y'848<ES>"O#=d3RJrI(E9sU!GmhkfDM\a!t]J\,^03CUEXkZaA.nM!Bk#7uhZdFAjQN]Z7(/*7[qu
Y?\lmG'rV>S#=k)q4\KiVd.Y^d,a3ImW!%$_p*6p]FOaD*?IufCs+`>"p]7Mp2gYrkBkjm4I^0WSZ/TF
4P3]DW2tB\/G3nsd@I@$[]2M9)7e7LeqZ<1H@?Ws?n0lXhPDo<Nsf!_*%[8i/t&NeA>]o!Pks)f!7"*A
Eg#VLiTa*G!"@q2Ak#5R[)+":Uotci7PjQp3RX.:&9IC!3aU.m%mR2T,q?GrakZ&dTq(AoC3Es%d3j=>
=cRRecNKGI9:3[^/E/a$5rmfJ=4pc^NjhKM7Xqeu`+h@m/3*sBdIt4_>H#ZA=nO=0m)?l=e<t_;epY78
H(is7atll3m`ibDZh)A1?"U"g'3s=I">j-sZlP8R%E#$cgTm'SUEZ('JE@Vbc/Im/*MR/I)j&8]@dqR)
*1UFD3!Qq?G')dodVIeSQ!H_9>+G!W1GnfN4`D!#7r9&PRsb'hLL#hfR+Y[d3Q_!W[U;6?A81'JREHF<
Kfh09Fh7CkAb9l^cp3,Ia`-P+%+O@\A7".dTZ/^pPKZfr`fLAHn6llfLQciu9VP]G:(ccNLh0$g[gOg5
pT9a63ZcMc/Y6%No#06RWQE/jl2Juf-D*BeWEla!HJjf_cVj--1]u$;"dU2%Qh=SGS,NH*mS5LRS*;`6
PZKP]YT+-"BRgugPpKlW`HJ+!MhR38),o:6gH>K9[4q%ASXl*XCi-V$qQ*o7*hOe(3Qj*AYg";rUG@'e
O2N+nbp3'tA"Ql?,2H3B/Kqfho$$GfB4ZfZ+bQ@RkE_4bA$[`5V^oeF>.@e4f0\>^jh%.k;k.31l+!kY
ob&rjdG1Z&im'J[g"]jOE9ebaI^l0HLYnI@aYnE)^WJ;4aaTNP6gr+Ylp,(&Q7g[S.$VF[qd5@toC`a0
:=B_hb*P9Ti-3CmI>.qlZ[BAeQkY`]e0p<kD!ehZZ,!K5F'Gi4jR[jVlHH*':3mF^BLF;ldR1u`l);7d
3Oh%6F![^bP3=Y=3;(O&ZuEUIFD77Ia0Ok[YK6#!DH!K&!7"YFG`/rE.1i[KRXCQQ,4.,Ji=9SO%F,B.
!bKK<omW,NpBa4W&&1'W4W,7\2Q&P],e^ij-fQ4sFZLNqc33Q+1T@DRhrC,fm/A9G89@=)lKPdt55`sr
q[cPuOUY:[oM$LZdr11nj"sr#AtjT3=SlSZHds`+FUPPT3C]XoG]@a5a1!gdeLHnhpk\&,k3ihe&;]Bc
A_Pf`hUFTcGlXhe2'%AV@r$h57S39<_0)o#SYr+l0&K=&,r1JRc;RfB,#:M%c4!Z"O[jfQG('a7Z`_nk
#sI[mXaVGfkAf0YF10CJXd,hggagk5++A$K\4CRX!hEGt1uC9!hi*(=<S3RNNQ:c;Sf-Z/X76S^rKC1n
G#gCsR>E]m=C_U]ID)j/V_RP$j6+]33MRgU<-HKu=:Dc'ri]\GH*?9F^1BZ":IeKMZol_+amY_t#*-8U
*HnWEWuolgV0C6Vp3QsAa*+!JXb1D0f9U_hNu\5cFHPC;,ttH4c*??t&(7"_8jn3l%^5,9FU)N"V(iR@
jL\"aK'M?FHCnBLftmBR4l2Yo3XGN8Cut=l[sBVa9pWEQRX>mg5&+6H1;!\JpqcR0c'9J"RInEQmd%.?
oeC;U'!KcuD(nT"]$nsA"<j`>jn@b>,LS&$k.=OVF_p51]_&`&RLNj=2aOHtZ6QGj*HP,*4,Lb-3`);P
j82rrZ@&0uj0]a%_cJ(LiKd9FCiX1I;IsdKnu'Hqr4S*N_HAiqj&E*MI)R+c;rlGN>nS/R<7utHH(r[T
-91oi^pVq#:q$2JB^p&Rm1q;g-'uSE].VA([V$XbL:f=6m6$YOMd1,_(=;SKo$0$qRdJ\a)l#mGRU<3m
a6<pec,"1`=>YD:W`ki_me&aYh`%!AaK`jJk%uEWf/SEQIMoWDp/Q3I(ichHrHk`eph&\`U#C$skkL<6
T/(Ah`V=&_*fAb.I@Y+mH*FL>IMc_N[b3:V9J(YI9g0frAfb:#BV/o+UYF#Se9kVXA&knM90pq+O'=6m
Igj!SGXG`CFIMIJJU'`b!/=nI0`LFKk6D<+)GJq\Y&JfgVn"R;?36TAe5Pq`?W!NVPIAs+-m`&NrrAs&
o:tZDb2TOn%;)ouNj#R(jmcu!U$TK7N]oGtWZ"@5l;N2M0@jegNdMle2:AZgn_Z;ZB_suf>e\;*;Im$S
<](cU4f,"5aBqI(c!:=]l9"U7F40pLl=$lt9pG:iCc'j@1@"O\V*RF>q"N('7G1p5PKN4';grI5Fmken
I?WaWkLsY`>Q`kA\o,dOkj*@0qd\@)`Aqk-T4;S[C";@hi\8&<??OQN"DBO=`fdB9\Oq<rPrVZ^E_<(I
oZLTt)J6<WP@n$f-*lo%/hr=HHUB*2j$S*hn8'n@fBust6tddl[`o#(G$WrEPS@_mRBk4SGb';i;bCB!
Cqh1PIW:'IGuXVfi'22+a%u(5'ZTOT:@(>JntG5Q#OWJ]p4$gsa-oM3G^WIm]XCZ8KD,f.7pU!$m2P>N
ZI/V3Hp<?aQW%ccD-a#1+//(h``u7aV8e8(e@d@#Q=@\KgOi;?OPK0O,]`g(3Z:M"O$\SR?EC'ar,UKT
2K#+Ae&a_Wf"n9'puW&l/$@-k:E\2u6q8oN0W1eBl_gPX+RZDG9(/*Va%c?6E26R>qR+Q6;W2e$B>TJ/
Zg"o"Rk%NebhL=lr&F)6f4njYl8946B(-=aI'\d^c^RCq40,U?2414]F7R>FQg,%",'/7,(0ta1abB$3
g_bq3A"gk]E\V".`3gUdK`#2;DK+jr^7S&7G5"t<GPlMlMb`YYku+La3VUarihnOKBj0![PfRCgL0mRt
d]@jhD4:Dm>'4#Mr%+So6nY7nr%h?>=2O4mCFH'Gr`hN+#OWI\PI,,+O"GLO[X&ae_79.2c$lRt32=`o
l?J41[#<:kSMQkebJ]S6g=bpX2/W5#MmN=J2In[-/2(>\r@VFl5+Lq#0=/0(B/:;V)2%4#hl0t@n]ma2
QCYIR7Db#Sjo5<E468NY1st#:.c-Sec,_M_rrBEnr?]8GkjZ]_ftZt,4F=JTgrnF81=-<e,ni;;kq=j,
3h"!<]"$aqk>Bp'T>X4F4g*Ab*l$5'13`Y;d(:g5Gb`CB[@5j5967:iYJp;!rr<jChaWF`i^#es8+VeS
k%6fpY)=^u,oW)^,d52^k2/\^^)og@e(R:Cri,4QEJK7\@,XRhCX,_R.+B:LdA\r?SssNbWMXajh"2UI
Q-#.l77GKt?)VeJ@^;@j]4Wq#b@TPpZ-ZJi%+e-mkJpta\8#YDfpM2u(MI?[6hARSK'I_o-eH%=K"Z6O
YkHBOmb_L"m!t$$iDY.LlX71?r>F)J4fn.lEBKi-g$]DUP0:$\JptN4Nc_j.C&%P9N1)C+6tcTcA:<.:
LMcSSFnqe(?DXQG<SKG.9lGj-&uH>GO%Yd\H9Y?;d!D'2jkUr2Hfjo84e@]E/Wc(NdSmkc/6b+J_s's=
rBkNSQl3->h"VaML!MTPF'4tQ(JgY<'\4+L;4+YU$\^V1Wsp_Sm/@k5*h**/2+Yo=44ETlAM_SJ))W2N
oSC"sbqE`O-P%On;$!U5a_P<YoWkc[,,7!!T+'PWUW!oOUCSbDc.?Un]l"8JdC'XgfN434G?pc2ijeRK
b*Y)fB1F/6d:r/fmkhRk,]i5JcV2T<C3D;\;RO9+`74R3%#jkL/U95O/<`ZrLjFFNmQ%&op;_r8\<GNa
ok%B/PXKnKG!=rVLM6Q]@=,E&+6FG8YF!*Spda/1VPi/^B@PW4K?)@p9d>7NL[`Q,qCU`oeA?[Zd(3Iu
p^W^WLUVY0c,%ZWrZ=Nc_"?!DgZ`a'UcQ`0r%h#N<n)OO_S;+RSY)h>@2p7UJ8;W#[k73NdGs20\f=s(
&(LQ,eZNQ[]IqCIi+2gidHSR-r%h4(>2$GiY1.GS2b;Er+M29XG4rD((CNKG9W$Tb72b5khd"@UBo`Zh
XKqAW0XSDd/C%Rs;o=G;eLu>1=f^"5hT"oo,A34kCH/Uubrj&/F)L&[,C^;sT@j+1;<5V9MoXY.hg)m'
nXmI,6]\S>UU%_h5"Hdc=`<%ZGg(`3no?sXl_:+h5?RlarA^?,!uYeI'2:H4eG%0lhNnUHGZfKR@CS/=
(MIQ.6`J<o2KPeLdP]c=Y0lVT^"P2TGc$usDaBnJ\$UAAmrZ,]\K]H2\n6Rlg)KX-=>W)loQJGuY2>^o
d;4HFK"9>'B5#h5oDPAU^5.9>qe#$e:X.Dh!%3%S]#W)^XqYsT1X.6!`Zb3-;5Y&H76M#Fo)d5Q.Q8Cd
Kd`HhGeV\oD\Db>@\qGR1MN]Q;hqEjp6T7?74G?(m@?.j[Q(k2T!P`t=Osfgc^*8?p,9[CSL//Z'@"2=
VB:k8oH)<-h)V$oW-O]&Vj2K%SE]P*Yk?^tp&\4%`FLupB49"E/h*WMA2kHbR-`epQH[B?Nho3ZoeNF4
X-5Nk2"+:2h6TDIeSmPY:0K+6^6S)SSDC*[j4>3UBsd8[+)#XO9Q7%:_s#PR>b31$.41@e<gf]L*)moK
+#M5$;4OLtE6,Zh;;qs9+lsb+9kOr*H*l0-4fR]De[Ec`ZTCrjl#PbARgR\f??1/Vj.1(K>K%C/%]@2N
GN]*(g&,nEo9:3o!'ZugH3Gber]-n-p9+^%WT<ReSrofSq#!.fp>9f=mcNaq4QTAk/YM?#B:`o9A&l:>
]<ZbhmBW)C`C!7W]sF3N9Zu-tllSdO;B9UeDA=7:A&K3VgGM-P_[]5c^8tT2DqWk@ap#G=CA)i[:<>Dh
*>+$PIpqO"!V<JB_nhIclaGp-r:A<_0.+p\kJG7ed*2I"qr[$%c3H-H[t,E*jb(%[puVd][DY,43hI"N
BY#Rba5Q9QYA*^f(%0U'*[<;GK7])hM<tb%M/GeD7DMccihJO(%h`I0R<W[:C)<J#-**N,bj=1;NWu7[
`[QF`O3HTCSj$G.Zd\djZT)B8l9?P7jTX[.CY&Gu9cLfiROO1=lT6mm_\O88G[0pciNE:=iknLF\SgRd
E,#SFA,nCR0A&/&++J[Yen3i^HMlb<oSjML,ECZAEo!GC4:a<A;<"q,.nTBMm@76mp<L^&*tFd#9W$7i
M?-EBrmL1<-[0j2m-?*RG4ZNp7p"Dg/oOCYm-U.gNbYlcG`0,Mft/eL.?POGn)VY!:-%Ig9A5sZ=')Eg
?7q+aQ=k\!H+75&#J'D+RVkRJ'(,GUo03`j-g8*T9g*"/[o+]Z-9ls"gA(+%of?dUSXuULhCfJ`LMlq6
l3r7+n\(orM7o*E)._qeES9'&7^mV;e'S2C,l35)2;:8AY]ZJFGRi?SeZ`C9l/&<f%.rE"eadhY.3*7_
eT>Eaq]<HhfP.`[K@4JAJW7pNZ:I\"Cnmp34(rA[$ghfR8d5]fYfA@hM_<Cept%A!\U$oEeXLl/QXE^D
DV<#&Sph=DR])Ds9*>Y#\]JVE8%m$n@3qnI?1o.bM`I,)SR+?Lmat$7k]HPH>Tue2L!VF'^/s#lHOa)K
d)^(c"\*Jmm4>?Nbq>e99.<Q__[N<*g<2<J1_n06.G/9%TJD?C\kQ$)U_gJ<c!EVhG.jN<Lq7u_+JFL`
<.#qYbgW*2:DloLkT^f:8)9]5CZ^r[]58VUP/]<mpdTOAZl,dUms!EOibN'PQs502D74H\I$0WSqIa>H
L>+C4S$s"h`-V4@dLi_W\9.6!)_1(GY&7oW^Q(f]$B&6&9cjn0d4Al=AX^jpV&`*SrrBMbUP/!#hkr/B
T!@Y]VhP6C0&"cT7OtG%VFTirkG!-LBgsh!1WDe*\k(PUpggcQYn5?*duncbVae&g#MkojB_K1Umd)dA
.Aj@S,4n\fQ.:&/T3$<9dS_<G"/]hY@jB7En:X,mmDX-2Zf/k^%pLN9)Y4uk9/`L6cU$o'+>OlufZIco
Sf-\X9uQClc[P]SrLKef#:HG9quT4AD6)I)P#mc-jVj?"?CsfJ6m]S]*k@8.QWGhJT4qJMcUq8dgh<u1
F*5'r5_ISaRA)D-q#YkcbT>C'(rG-*[.=!Y:Kl4(`JcIffQPS$m=*UjpN5,+4GdUWf'8oU3P]fu]Z?Z#
K12W4`Y8KDB-"2%,#7T(U;@.'>l[Wfc"EQ*q7Ri8&["YRjU5=lE>Nhs`=b0WZg%o?L0k@0/p9B#4VU+U
`?/DH@+41"><e<>\i'I3KD_@V&*:+kP^as=kCM@_7eJ):H[h3"\]NPbb[3W,])`>`7aeGVpsf9\VpsuT
-X3P!@ut=a5ajA-3Mb.99@%BA-#AaoQDJfK[.>I#4'N\K;nPA2[Wc#2RR3W+m@6Oe0rs%RetYAaZLnH8
OHAC/>.0t=jEQXMoX]W>Ct!$^Ymj%F2.lW)F,)1so1ta8PH7A/-jF7NH<g%c@**M(rr@;3XO^%k>umc7
6d'4(&!h/TYqp9m0Ee[P\;]IUS41cPn:W[KnYL#j*mDSZ:+!IP`c[85,d6mdcU"FlK80Jj;lArcU[EL(
k/18o1(H^ZP65DiCZ[]b,PmA]28,+rS/?:d8EJIj9)em)bm_3#+If_B>ROnA[UK-01GEua8='i@,m>n!
]:PXTDfj]LOUeEM.2&QOW(GWR8]<`(nAn=?Aj]1'2;3:cD;&\L,02=*D4Y8)#+f&4k@*P6a:C%+Q+6U%
+/ZtcGC;udZGb5;Y>RY2Dr3JjaJZYd+CZ+#%dS8J_l*ROQED@jH9RZYD*Y7<EJi(\&_f92JOI(j(!c!J
FaOdKT=2+n1aKMlPIfpWVX5%%hHrI2K"`aKQhGJ><NX@q7EEsBj4+d!)YVE6H01`#B8/D+d9&.6fn+3T
4^>gi(hoO[j2!Ip))FOODM]mPDYl%11YpRHc,GNbROMRfJtF%TT#Jm3&G'#`7\\`Ok1qf_mR[Y#qe)a=
F5o5$f<]T:isjX(p7$"Ci][2q?)ttX/Y7S!U(jmR-?^WsiKD*9\[%g,!U*ihclMn%(&AD-/uCV"A$kp!
l0J=Od?Y7W?CoihG5hPUPB:(UBAt_g+H6BU4PO)?aYJ'][+M)bZ'?3QC*SmSS%HKb71gMs1Jb!uA0KZ@
oe6POapLsWP<P"7]=fPo(7*f-Q"Cnp_npVD>om\$M!F_Q#s7:q9oM[-oU*SLStiGN<VXntRp8!O-ZOo9
*osg.8H/\8IdrgJOr_hDj^Hs;f(/O%U8eZDS`&(C5'\5`TMIC#kuR>Yi%XY5lK(CA1!F],_e]sMb%6VY
$1%-&F%ktO>$!J`@[kSbStZk*QXh#tA_=jsVh+5F'58cX#-N7oB&k/-1KCateh+oUSW8UWfu):_nM#Al
"3IJtU=7G$J#8\V(=F/(L28ii"17S'L<;>g8NEcIC:1TB$$@/VU>D$*`lNbG)8UL'_(NHKPjMYBcXk*A
hhl"p#-iI<Eo/oQa3oT7H*2'Jo+nQ3Pn&"!/KbO8K2';%Qcor"B\iSBE@i^Ih;8-!&<+'h<1q^,iL"n4
3(mM`'Ull#[\0[M)20]d_FokO/Aa:u1\0:eiK=+3J8ql/Ar_LH1=Cq#FA[sMP>+W>[FDJo9VWpOJDoS/
,0@3iOOC\aG)eP"dRbFH7?]X_k.]2OJ[_ZG4L5a"X:AXi_`0+*&ML0X(0PIj[4#$J*-"VqdI`VL+Xsa?
Np,*813.tSkN7Vc)4m+C&4!YJ>d9DQH(NL68l7-og/t.G\ZsUu,m*o"CNb)a\Lqt5dlIpj[qCrUkX[16
"jH2SjD[cq'V8lBq4!"-B&_q%#c[c>4EE1O10r0ik>rtP[mQElm.1^HR.Yi"gkH\A(n>V_b:YcNR\cb%
!>Nh;ZZWno%^L=MQ+ZQmo'4A#K(&<W6L<"ILBS=:(2T(r!7cJ#0<."0IiRZ+lEEs"?07V\;;HAeQ0"sE
IQ5YRKQTaiF4'odTHnnFY&^)6g(>,id;*euD#V`".&k-t!SX![4&1Mc4OYm:F!g$Tf$S0Q9U'Y39P(3^
EmMHq-YEMs3;)qjGc.O7bpKp+C+!Y6U?s%!7*;IZmX;F$emO^tLUZWP?P*f-o1LhSj-qV/Hf%9YJgMOC
YMRKnWLYr.'MHh_Lh#><kOHfPJJS(mVadKj)KR!LDK>V2"F33PiqA!h'"Uj@ol6EP?X_))@./3N]o\6$
0pka+)5b[33<A4-nb1W\R]!*:U!#.`FGE@&;;,K-<$mfpF;bTCK?n=U!blemjdg":e';^;8@<+=.A4ta
7?fbkCe9Ch=NKpf$-n;9G_+,o@ECegLImT_!`8jKOZcqP3Or)6GStC_V/ZL#r%gjFf0b5Zl8%FgT-d^=
g\P^7[W,TJWem'$0+L!5E^`,Vb^;l8@?;>1D_t][F.i'Kf<K<cB)E8#Gs@]MjnQ8KIWnsX60PpB"En19
l;@gN59/"q$4f]K1hfWuo-rmPr70(^fc;>1Wb^2ddYI;-N]^3J/IW6b>4'L*X$cXDauXKLj(?ZR7@WLb
=#4jk:2@6kN*^j8M@o.G/Ii(t$cu.bg<B?Ne`O8ZQ0c_:lXj=;S8W--EUUImi1.A6$V8@9g#mdkWJ%I!
X6bg.UK];!d#`=+b;!q3Fs%urDR-o@3?:,cqC[HR$pn0j8p3):XC9'aI2mW27bDL-,mmb&q+b3MX)U!X
8BNL48Cer,!6@A%f45PJ\NI'/p/$i412AnER;*QZZQfsW;(i70]prSZ/Y(7rh`B',ONCPn*M\Wsmpqa\
G"UqAfm61aSl]!b5qFt?1SYt[#?iu?6s3h33J#mIT,<>2:T0PVE5*\:a6Kmr8@sfu7$Sf>OXP8P)OY*)
S`)uU0=fLSQF6Zo]$bc18@Wqb;H%SsCM=]aT5`).:"rUE#:?0aBfrS:SLO:A[U$3`fD18fg<3-LhOJq>
AqsaI7TSVZ`c<D>Pg4J:UQ*r8_8<bJ1;,mYD9lW$,;@BfRhQ70e7=Y;ob]T(5:Zg@>PX\D.ml&P1Kgp/
6c1Oo7BDgm9RT6Egj<\)p83cWO.c2!XHFDBR:1=&740fEJHG]2?tTTIPBi`+7k]PY6_KfmbYtr%ktV)2
2OmW_id1NOA<=%OZeFTpnKI\>_Vs<,[IXcpDV;,;m.=lET?J9heXj.m:!RKpq_\lAdlu9G'5MsT,r[i_
ce+B"J_H9M-e.7Fhinu,q3*[r[EGgNJZC&@OLH!W;+bH@#.')cN,]]2n"Hee1`;lH=,&ij6;e!7H$)LF
i]c_LceDG@DI,+JD+V.<PTpm8c?i^KGLasWU#Y!n#d(THR@r&QQQ3QJ4B`XCPbsJ+c'F8f`D4$HVPXU\
LeDgDa#ss;ZNErb#7JVcdfU)0$2_'V1_KuLp121h4dn=jh[/W-Rls/*%oEW?:bb+^anrDE3"'T_$_rGC
hdO7cEC:*W;\dP9dVRukU`:?A3O(>uEH?)A=[7Poli'f0I7-t7[t\qZWN;$Zh;ULd;_JcTSYBg*J5csK
%c-NiNq[A<kg"X9P1mkfRuHt<d-^WJh<6\DNI;HWTLJ9)Ph(#RZ98teZM6I(2+Y[q1KPS_PLT;D%LQVC
?rEZ[IZW60?I.j,NF(S<G!"kUVM>_/BFdHMD0b*Ml>pDkJl-;.LsgXGH*tShS==T[Qo^8R'l7pS,<-L?
q-R8#`+#juG<*uaU2`ca]3hjum$/[Cl+V)J.oB:A?Z0V&04_+]N:43$=(18)Xku/+/4MP<mPukB3SS#)
/s6gSg2sI?^Kd\D0o6,^5*eiY-bqNtfBL8@1JO7j2-R&Nk$1nFH&Eub`)d?RM-5?qP9k93(8-3:AAALj
N+4G:=QtFMETXH)W?p53o\_7"Au?uK].A21FNJ7i#g\&4,^I#MC7RPd:53HGF*E[DEHMrDe=2CoZFrs,
Z'K]\E6TIBXCQR7iqlLdRsPXfbJPHel5F?,=O;.Mb3H9WAbAg7e^+gco1"HF5D4I<ZI!?XpHb$<MZ/5-
!%79\Vrlg4ac\<q1[2c"IPN9]Fh@/g.%%I_+LL.Vj,Gi&/j"#mj0hIU:!/ltf&C\GktWE[c?E80(GAO#
&rBlAk1"?3CcFE)QJT0TbM&I,>l9#@`i-=Pfn5X#X/hYHZ#?AB=aObi5I;6WcbnCXd9S>;3bGEOD"/Qa
cPL-]N_@%m%%qd1&a%eo5(XP`3p-GB6/!<L0"40eokc52jgKI_@<Ro:mk([`'tj"Z^00RDiV[cEq_tmb
[qj@VpfJNm<;;Njho@bkXl9ie*N?M*Yk^eY;hsD#o?PL,X[AOmA)puoL[P0B*5g%'nAVo*4)VX8XXE]2
Ml`MB:OLUV]qFlQGB(B_r(0npm2O5U<0-CoK?$+?[XG.1MfZ8Z+3_e?eQ;%Mg#q1jgHI@SpK`j4('_o:
lFrU4dEab-opTd8iTRIZX7N4aJY!?F].\f2.Vk)IFj*t-R:="kZ/'`_Z'4RCg.C`#F?(b^a38`)3?7:j
;n&Q_?UN)G.6TbVSK8'l)C:u4gHA'U\4ukZbC\_Nq<j;?nu%k""<>/bk&pM^/2Cr;GaGQ.C?+W2GHGp`
P?%F&cMaI'X1a]Yq\n(&l[&lFH#EFrCj'AraW8Bj>4%o8V!W%PY906,iMaSjqI[,'Rgcmb0]A+\6o^'9
Vbo')gcH38H48<a_/a]qbsB'h&'M<Lh9.,':e-@XPib/#[mE^Wk,2)tSt)Mk2&WiGR($>D>c/W8D93/_
FKTGeqMK5Ji3YR9Rs\DQSR,S[lU"G0o@."`@tLM5N-<Gm\'terdJ@Ag`ODeDjd]CdD'up]SQ?7T?$Aj4
3Gjl,kM^d%c.?u,5=#5KPPF9Qk2"AHQEQU`qZlO,oRshkLH":6P0jm;DP+.^iL"mPI_)tDnKQu>GlH%J
PY8KhWu5<P`nJ>YVV-`k[5e#m\MU:=ERQdkNDC4*$lg\*<k6Olo2E<L@^KSj1R6PVl0:)d:*n->"`m%p
=`Sgo5A"$YU\22U/!N[Q]*NRs%SG.(f=kb;9[8NI,o_re%('8U\loI_3p,0gXPn94]d9=(D7N_am/&<@
GUn!#m4QWB]oih#8G2<<fBCN;6/2;p];#:#nG4C>j^Q1+#OWJCrr>HO3O4Z&pAS#7X2+\O0sr(QE0%!>
L7=/^Zh!(6K>@H=U"9*K/*_/[Ft\Ys-S]?7KN4itS=[4D_3!7^\'b('`?9D%G?U'XP`A_f#,>K"K(e#e
m,%t_`\gOI"=N4OH-/?'i]ZI9p-/Q<P#(3Op%X=!EnG'ihSZ\cU1pE<^8E'2n]Y96St%B=QC2T[hQ8S4
Q96d`1cSKX.o01h[qq'5S0`oZ0+=3qQum4Za,f2Kbnd=;^!l7+Kfm+Sd&Af[+2^-f0!E^i,D1q0fdo98
f5CDh)7ZE97I"G&,Pk*+0q,dPijWEU#7OqLjW.Gk'B8q2PjKG+o"D<&j0j)KF7lPO>3%N/T?FrigAR:\
ZE1KWm@>Sb\#ZRKCASeC+cW$SB'p\QA"0Bg@aX8Dg=*K;*nTE:dk8i&kd8<&^)G9@dlf&cRk6EP*_n'q
Gkb;Q9Z`6<RO'G-WD&Z?GaSJCKlYsI^11a@c7Y,H51&9RWjd*=QoTL/qDjr?>.UjqT(u',$d#h_Zf\Nq
leaHPp+:B"akHL>9\e76A]M*TEcG[E=4P0&T"&F+W:F&+Y"4qUW>VP`l"VO!Bf.glR6];$o$.oVE7'#=
bKG!mC.ZRYWZ++AB$ZWEkkefJG<BT[khn[<nBXLh[/4ol&g#?ea`+Nf[UA1iNmBXK(UMk:>V(Yb7!h4J
<aCJd'].H&CtS!a>E>hfe95I073`g/@3&DgJoocTYjInXIdVB;A86!<OR3>(]m")7G>B<sSCEV$]oJF,
Ua:%/mkWgEG#:GgGXVnZ8@?\rJF/`pk2Bm2WYVI=O!QbGFSn`DRc`@!Xl/L12'&+*d6XMggG_*=B7m7`
ce)K.(B%2B__TPVPL[U4Zi3]SM"dcUk3\?ec-4Z1'cotFhM=X:1MRD+Y5\Jjf[P0mQel*V'/)#WAe4!^
kAOFqm(bY9I;@%a/b+9M\'jKsUIX"q%SS6LedI]3GO`r/T1r)H"tg$82b$R<A?jUH""j*>-]VqaNh]t3
kaFP6NbC9\-`tM-aCVgC(u)K-itj(4FdrU]e9$aW8E4'P2L'X&:7nsS--_82?;'tDT1g1#*8+fPn-=H@
p4mCk4*C@Ab"c91rr@U1QQFi='lLo2D=MaS&!?ep*s^_E'('!XY%0V'a#6klBP-"ZeGJi=WR^OMc!Ilt
Af>-)1sK?0gWf%oi[0iEqr,@T(J0t"q"c.nh0\;1*ib_]SWA1=Z?%kH]R?Kke\K[X/IkC4DcNnqA#AWt
Q!:!5p0S=u,dC9/>o'o/kB2)G'HG/L-TXsLXjH?],q-FUr<i"a#+%cuig=^3PBiA@rP-9__EF04)^2)c
.s\afmJ\=]r^FP\n^/c"SN-W+i\FBt0.+Ngp7cs+r`T-<>!!,65KSo*kC--$;t1]9fQ9,.4d\QIBBGgh
^utKO_:80A8!@<A3"%+_YC1@!F-5ibcf'`6aMFL#?nr*jWr3gsh78Gq:OUm+39_pC/pLHFckp!Nh33l`
.f/nR%gh+f%#ac=B>Z,WVr%#TZ9UOB20<?_.[DOX[uS`6E^[lqYMk9M*F(`'!SlE`P;cYs6%dF*L5ZUu
H"3^ng-&HK`iDg,,8AA87/39g&`H/Hg!=hr*['on)7W;OKJHIdI(Ec6?EZr$fH?d@QEF83G<!!2)d)mr
$#S_^<`qD@XG^IrC/S>kmurbe=iUuF-.Kg+)0Bh`kii+MR_k*F,]H=1ci_ZlCFFOgO+AW"al%8>T2Sfs
Lri!uK04H6%j[nKjKb3obJb-4ILI>?9M\ZNb-q,Qdt$mDYlTMmmei+.2d0T<k]F'L/99r12dZ<ca$I5S
1=IgXl.7YrjJJ>@L$1^*e&gXTc@9&ddIrTLDa`%@]b%Tr0chj`G,D:A5&#VA*ncaQm*d`[HHsps,mu$Q
.GgK,`Rlr9>qEU+L0W5'UCCp+aii@OOk$oW[!X6jNQ_krb2s1@AhjJ=g?JR9Y,GK(-T`a#H$11dhX.Oo
:*nG4E3E];R<q+pF!9:iI8M`8iKtL%R((,C"Ouj9V/j(+QuWM0cSksX/c_4t@M3$`Hiqfl$%Zg?ks:@U
jt!\+J[QO20q6GRoHKUDSCF(oq_qSE#E%n3*ElHhPZH*rm#=LM4?$s3WA(Gk>N2@&60u,a:)l\W$h4&]
F/$MRYeWRu3KR>%3L^$c@1#X[V3*:u*6H5,QST=A9'*dL8be<W7gM6taPd<'>tt9$F2oVt=!c%e*%\-W
e/>/]b;D?I"+[t2?5a>Yo$#)4)tqTAmCY\P]]Mqp#&@aaLZP*Vm3nqtNU6**a*$VRo$2O_hcK/8>qu?Z
X</FkJa%P?QL\ehX="iN_%,O:(NS#*ZC0_^'>kODcK1$8Et]fJfB:$crl'fD\H.f2juZ'5h-P1@^$P+K
B9:_QUbsTjnLc1[A&?qW17^lU+PVN-#t.9+3Mb2=h8Ype9&kIC1J+35.$o.TelnQ9V++k:&7+.b2\87#
-Q;(+)ftP-9(&Tok]86o*8F?s7F\U]d,nXoLH?2ZJh:uqZKd@1:gY$i8c)U9_T$s((6MiUguTk[%2+m-
F5"cHh\]l>YfdtV2(M2Tfq3m>[qDV]/VRrjO3HbL:QSN%Bl])&A^fJ&I.K6VJ.>/n))d2E4)s"4]"LWE
X&l84H9QnXH<b_(d-=3EalL'0ZiIO=7#VH]Za7"pR<T4om5XNf]Y7L7F.LWfp-k+MkP_*X1FA#%^=VD*
]B=UqrJ;1"Zd!*R=\E4dal\u/eE-I<7?=[XpjAM?4\pAff?DW*"b-rseFjA54!5P;:Gh@c;N>K(S@62;
@P;A(VsOoFq39Ui<,-%hg)Za%HT`.&Zt=W]&=#8sC\6C89qp30ohiGaQ$DG\LP>$#)=<Jk_Wb=7*.`EP
'*KVDb43PfHfe0*LGD[=MJ6^Q630):L-]snboi6La=`V7VIaI^Qt-^Fg7=a)-u5d[7;?Ibf\N5<e\6+Y
h45]9,HL(W4_^LOf_q]WSp*)a:h'111sK:jE-@0IER01\]$[BYk/S7C134V<MF4B-P:/Gs_4Dt*BsfZH
@e.NX:AM68Q7h2-GbD1?mQGX*>s+8.E\_6^"#0<ESDnW9k*o_D49a-uEl<S'?RiqY&?gh6a):/e_HpS%
1G%LU==FiSQ?[ndfg2+k^<Ya_R*V.oB&u_5iL#%+Ym;&a5-H>oAFYGNnH35,!U5-Y+O2J,.tTOe&D&*5
D/%=4`Q:jbC1TG+G-5WP'(`^)'QiulY@a2=ni`Wj\dCb.FdcE):GJf0$9k*f2Lh#<3q(8m=!YE?2PW^I
Ob6`H.Of/%%;q2Y]@#p1U388TS?An)N8Ca*T#+-JoHoscMpc<f5q/=fR8A&\6Q:65TZ]=1D&EI\>s;$m
4sdJ*W\Hq.?q4(UOX7ugYD7F6%@YX\PXnNeQG+C)ZWX3&djp9:.*&Cn8Hu##3&LnPiQ=H0qHZOU'<:<i
PG`m=h!+EHoK$8JV$e?'c:>`tpgp@$"*CqY#%Qcn+]FFJr%hKUSEJ#Vqb+;k)r6fG$rHT>Zs"H[H9Qc3
4g?%%FkuC]pWh*j3uV=>q<)JcRE9PQ^:gSeW-Gdi*;!RZm#`4>k(ZIQ7HYT?\KGMDhhfYQ6eUr@)`dbC
57u_-:TiKBSX].0]7u=I%c/*PE$j:NZZOV<YMsU6;5;1K>V/F2&J%J(mEG.$f/Z%Cdp`<if!7aXfpZX;
6V?O4p<56!G.jG,RSI_qB*$^R*q*Ojk'J9i6Zp[Q;aZc#p3`^B=/nZGVra;5,]2i=OsPtA8?oc=Rp84?
mdS09+C`iP9hOP6_s)1hVW*J]@B2k2V8""h39;#=D0KW45jY,sbm__G[VReS\`4jkHXF(]p//B,MH\A>
BA$Rn@p?SfBm+TnHR7-T:nFHO);"*L>DoQ+l>U9c9n/s-]a*IOV9sIA(KUj&,Zq4OUTX5r_`Bq=Y2$]C
UkU7BU6]:Xr%i8L<O99SXIt3Scm8;+idU7'-F=&h))]4KQKYn!UT#d=Ar!a?7KNg==d(S1Ss>u%R%jY?
o.Jkd&4,-D%5FG>=]MJ!5)f%RhUHPeoIe%s@KK9)=gYT0bsj7kp\gYI6B[DWDu@A)?/p]Yq7*s!e/^a^
HtG`BU26>RU?)5K=a9J4Fg\Q5<+RjDioSZW]oZsGKe&B\'Vt?3rBr`p2\HSoc0&[&V7+\jg,b&Y\m7.F
4&$KTpH4bF;@piQhSVpkVO"-'dR.9"I44&cLJiAZE(Fc7k@eS(,$jVl:e[#1O/-iOfAZlWgNI1,Bd;+I
Em-ffHX>%(&.DP4aU<9"'ZS#D3@S-D5&$,;kK78%rf;k[@tJ;fQWL8Q>Pak*d[@A\$Zrq+7W#5!1?i0\
j,VKS/"Rk]R>I+B3LX5aN0;BM5gd$nMoW^_W6o?20eGagjY5H'Cp<'o]b[5;;+B2OkgZOQG#skiXi8fU
\3\q4[Btr$FPA^b*Ak*EI/a2UHXOkf;n]i()Z3R[o<EWYMQB!Ug:aVOG>)LIes1N#DoY!OZhkLmXe'\R
o&Mm:SRYfHj8hJoF]pp2@-?dYm_X*>a^(C=F;fNn+l;Ig6o!]M2:"XZ$AaVH![8&677g2#e9B/TXFV#L
ok$$e_<!'pMc&4g0%eKNnf$`Ifu914VKmr7C:UtEaMDte_Ou%s"10p$p=^NI<0>RTk<G8%:Jmn(6;+B7
-PO3'4:StVNu;@%[Eqh$3P3c#\"hC2-&]sFQ(64`c8[F/iYlcFNj7-qoi+ohq+b3TV]/L.M2>k+/tcK=
:MePC-5(Sfdd61eA@A.'1FGu%Q8aH`?HeGqDBKn]=kT@@,>Sj(4e<m4A^.Gof/mlqerrlWXMM]7l5FuQ
3t1F3R^ZF[;Mdr67TXY-3r!=BCSD%m,\NKG[.=-DV0J'50suG-(rMh&kK>'jo_fONTqM:hO6o]pf^@nd
Z-ICNaK4b3CHs]$]3hqhM;@KE4%4:#15T[#KC(5PAaR)k!.].F7jm#f@)1"WG$gXSepTjqCnL/XQha.r
&,JFa8&UUq3j8^9U>tNQpZ1?pPKCkeg)plB)^s1Fqt"6K'^*lpC-,B)X%T6o%WA_&RjmuT]m"5K<&F>7
f6lkq5I,%4GtiKrP(AdBk>S8)E4k=]@4FT1:2D5S!&u2`,uuoLjpnBk7Ea.RP)d$:1R.8f&MHf1emoF;
rPK^noD[-%]R.rHNRJcqA`DTB@mjPYG&0;j@CXJ`*MCEn1hd&3bRI6[eE]ONXDmCB]Y:n@2CCGn?ljYG
b.p_m-?'[H)4OSEm@*uI-oq-/PpW>X1hSXj8J?De*dS,5h102?VgQS)Q/6!"e-[tVbUC]:ET84hp6NIH
'K,NSNG4uHm,)Fa[/"XI4f3F2^15_4*csW$HG="a9OgjSK.#du*Tk*,'=n"HYJ[%GG$)+:,no/mUulJJ
#e?&6,(c+:-=7WhOVr,>K21M^1rDHK(/r^^=]UNYdEp?"3o*<!\p[>NbLCpKDs<qjB:\bQVjjiR3989M
,O(e$gR=><f(M:tCl!8nS5u[>06u7):h_Mq^#<8g'-)7gVbNta0<8i1#CP0<n2oGQR>'q8jRV1e3d`SH
VSPr8>IH>XfuFrgG1"9+9IqQ0;0*g9"ZZ>93*FgfFMj,PohZ/ZY/CdUh&]=!=#Cl$E#4T&*@Nh+R;8;k
b11NW:=[cmV=tSbGM0R$ZbuKkR-p<aD9oY4ppHh@S"Mf_'U)5ooZ:b5D@t.&%\1W27DYl*25Y'[]skI0
D5Q[[,KV^M[T2'B/UqQ(>L;U207HKG0dmp\la=`$l1B9C&?HQHR[fNs0%'j>$56"O2dN&MnL;rQopc@2
=SL(Lnlr0o;=de#TWW#aBK2gUEqY2U%5$H;GKth0fR=t_3Xo_<nF]DV[8<.`LYnYhB6u;NdH7j-^.2.o
lWXG*&Gu'sdX*^ddFV%!N^PpChPYkD2OO@X_s$#keSue,\FhQ;ds,a2SYMr`k-n9QKsM7N.&^Y51`G1M
#BQZhfgik"EZM!VfY(@!Bt"B!'S3u$_Wu8L=1[b2'hgtuH9(f_g3plnp2h].bpgl1(MG"aknb=ajpn7(
lSY'3P?Z5q;_]LM%Hd>PCIPU7Al^KnU<B?1B^(r[oit6+o_^4/a"<\<Md-c$Pq,^*fB(Ifm`,O4Kh8D!
n!Kt!13RWfqDkZ.l%>J-%NZf7%qt72f\Wep3G5LA/Z7\*^MZi)hJ;8!ld+hA<UBW`:(LsWP6@$5:X:ui
%n@2\9??(SUr^tF$XS7eM<(QQH"f.Adjj;)0llI1_Tf'Qb-\i=.8rpiCGYf[W6;-M1JK2L9FTjk@Wu]b
$#pNtm5nsJp>8r[m!agNZZ*'f=^uBDp/EZ3^9)h']B$?oXmEF)/ViUpKknD>n6pOpD*9VS]7V=?Rk/NV
D2TD;$um)P[*.P\Mif5]:NYnX=\U[W5"AnWc*K.Q@,Xhd;5g%s*E;Eml&tmbbsls4U")Me3J`MIm67;_
H!\nHEEcAW1Sa=9e#M6bFkrU:&DpM+^A_3-c-lUl-/V-^X[R:==kcn9\U%T'ZcQM?_Bj8nceCoek4G*+
`puF.i?"9.9Ua6\oK%HAW:EuLlu]C<AG$`pnlubr7lMTWik].dI:TuE:fh\c\_Hg1Mi+)J[InZU:L?.Y
jS(t9jF".!-TM&O*\=#M[5i"?8@9D_9c2KZH7rb$D\sEU=(pmtFS#HXbeI4g3K_(4cUR9(b1i+L4YMhX
2jm@3[XS/1a$IVj\9<',7R<a(rG.GdY%oo"nD/8k#6Q`g[\Yn-:UE!L/iK18)J]er_eeDASYa([H_o(r
6tB,,2luBclL4A6$L!G/.VCQ>eo<hgMbCoeA08BkSCXEY2lY0EKoG;_StgDrR924CdqLT,KVD[#G0IJX
Ftq4%Y_RojatlZF>k>?!dJ20EVWtM*M(r-_1-")bUD5gW[<#uV*(A<@]dRN>*8f`(ECJ::e8WNCSqeqb
B@u:p2:PV0`nb\?I@9B]ji=_k4ODR':igiRm.qr>;lnST(=jf/=m@'Ri8CMqm2VX>o=luN>dMh"HR#l9
;[dcA3Of7M`4#a("P.:hVIJV*ZDY,XKOu!$>FCW<o$Wr,eAgKRAk;cd:7Wb+j?$-@K%l&6#mp:#SMSOf
CJE(?q]et[7eboFEOqZf0;\@h>G`XIY9$ge.C[(>)e$3Kc&QZrRWnOd";9A`NcrU+=q3jC_@b@F0..!c
iKRm'Cu]-Y:h5k12#oag%+f+A>H,rM[.`(kdiC4L-<kW'F7CKMDbDK&gj'ATA2jEJi8AQ1kr@&lqk&8N
(1.O$C-*r(ULo"'b5Cj_3u?".HiF(6<k2K,GckYFZ)I4cY<9g(&^:4L<-4X"hMY%[1cZi+js'DJaSkpu
q)XGBO(WFLP&Fj0HF2QaB7c&FeS4ef=UgVNfBCG[(q1"^g?44?DU2SV3t`9(S9Dj=cumX'L$/5pH.K6j
o8O5ehZpmGj8IA8>.c_Lr`SOccf`qEIG.N!U#_e][B#k1kGIrR>7SucVns';/Ga4Q.HPUuR@eb&gQ)fM
PjOG&DOXkrH7c4F%.gXPeFR2'fJcL_O/?n8h+m(toQkq;/i`HmeS;1trB?g)+]E4+k07JkiPeQ'Wf`ZH
(0uqOS1"c'5(0`Xb+48-<@.7hHY'J)lnN6lCj+Sq@V9P@a_8a2PfdNAH'E,l@DjbKCF)9WSr9)`cG=OH
?I@"`0:#c]m5/!.Lj:"IY,%`>d,s@1B3]^CXIAu;)nIKU#jco)-2pl;bq6QX3!6m4FFB#,j(-b]Z!C^;
X`r(:ZMQ`$XdjYI&VXuO^8ERSWmft*2bAdYND1uTRjc8167OL.`:_6BG1^e<-4Nb-l]k6L[80M2V673m
4tO^qV/Wa(e*@HYiZAqOoBCF@fsGkE[&mPt2pQVQTs.gMnSjdoVd=\6h`UM=oGl]]B4p.ubL6'ic21]]
LMrs](:TGsY%aE:D45<">(%3nop8?OBY<-u4nE7\WXf%/o<]*Q^0LH6a77=6XLB-Gg3b-6GAH=>!$4@b
;_6^!P<WmPbr(,Hi3]@kcZ`_Ke`)oP5d@&SZOV&Nh2bRUJ@UGhEl^l.lr181[iDmcEWEQph[]FOG,H(`
qNX/%0Hb(mh*Y,@p$J.aE,Oe%o[I!NrUib>2OJJGS/;lm^Ae1))s1;Bk];ap6S$RQW`3%WRIO-rHMehI
ch(0$VpUn22hkZumCbC2,3B6a3ki`'%N9`d[.HI]L&/N%rrA;]h(S>CP$okmLH+ZJ"!"$"[98(#;I)UQ
ENnsNkhV/`J-Ueq-sfPln!Gq1E5^,rnBXSj]l8dC_l<-gW:V:+Z@;/pIWL@1[C45")c&tah(tSg=`N2U
P>DWB[sA(F%r(:PXj-51i$M8k%5We,*@Zu]L5/S7,?;MZk:*B]&hd%W,!g18FNn@i0&mu\MX^;[K#Uo,
\r(%:/Z?jGW(RtFfa2KXl11K[*&:CIf],(dER"b\:i)@.;+qo[_C=%$na*u0nCK]Rb*_15cI@OLPh`_\
F3se>,#JjWYH]::gg5;Lh`C-OO,>STRR`2d\^lFAMN>M1G^DKt-8EGLOC.<^X76_82gSa@O%1Q=Pd0!/
^KS!)[De&XfO;b9P?^L_1LVbSn]I$,X(&L&R5jAIAh974>a$1L1DmS_&E6?Brr<iZ\WAMtEeXr/pA1E$
#;=+JSdh.ZBsph0m6[ndr],P%%aMCXVqISRQY!\qRQY77MpH/.;0iG'20eS[#An2CfODt<b3\3kRH:!O
U#NPels4652h)[9]4W0AAe0Bbm6MZH.Z[B``0KfMQ:F\^mB^ugLus\R<^+DVEHXaI>opK/!F4#dFF[8A
2A#S2<HMP_2fF=4CW4_o%#/*-0omX"gH8BrWZ3dad-CKj^qC59["Q#`DJ_O?m?j0t]`sg,$<o]aHk'9f
cI3Q-'Xi?8>4p*qA[aH:?rGaHfdkZ0?u=-.+B!RL1csi3+Qm,@Er"#Xk/S$VfHQN*e@6I[B+LiaiUelg
,6%XqVYRCE@^f:;_8R&ZcS"M*W!,[bd;!Y4?5L#]4NNcNh[+Zd.nQ]/SjQZ5`a'MU`b5;O.!`E(!9>B[
[B;e5eRImE#s:shdYWhoB`eI.(5kg63\=[81+?5Q&Nr]^F/I@-;!R<:A1*O?Efe=KKP'ZUV'Zf64^*V=
L'h`#1)c-'Z8T`3UmTnPd6/rTo0oeJWCb@`_H>9V*D%P$RDnmGAJbL@?(7eK3;(=h)a*FlVD4Kc^<=^=
87QrJk)2,BDeZ)d`JkHEnt!(I#hod!D38h[b\`aZ'HJg'"sm087T"!kcB?B09%+8(mW>bAYdn#[X*-@6
X#[2"qHP%Y*[$kAGt'u#Zg>ok1O/?<d[Ee3@O4S`khV<$NmF>@SsD]3NTr2h6:!Wqh3k3mMot5&A!)T4
CG93"*9ji-&fdFS'G;p`VdoF\CiPi&Nda",3\<O03g5N/6nIrL.fTLC*;085?fj^_k/(E'Bl''h12pt/
EjXP^=GF"sa:<(Ze$j\"a9rTM\=&%GD4t2eneK$@C6H6&#!!ZV!5g7AM_*9Jq;%;+3NCTkL^obQSfg04
5gnehR[iNJg:3&dNFljeca8%CMiC<R0=:=?G2O$MNnqk,3*t+O-[Rr#cHK]fd5(IR3IJN/A]a1VG*`G6
)k4@3*<o`@lq'aNVmXVdd[Q5.,U`HO?(pt>mB`M:CZdm[0s@:7Ld-^?r-Jh\I%<CjA`C<l>O"OA%<G[R
lu4.lDS`E=AiEHODF4ikqcC)enp8$rm2G8MN^Q$"EZ3f\OF!H6BWR=@DSn?P9dmWt*M<aBH#BLd))q^7
EMh9+0tg=8::ZjG<pqlniaS@0TN=%]@d^Vm@or7(>hJ"n[_i628O%W.c3)MX!U3;ED@3uDR+\0A`m'GR
c*UbJO:R9>bq?%+]_8g,-..k0C>`!fn]cINa?#9k#bHjUdja=Bpf$Wpr_AMpQg(GrF6Km^2:;4bSBh'`
$[9d(g#ak!)%+C5+<^Tfkil[tc8cY'Wp5\JGKn^"9d_S(RRN(u3qB+l[Vi>5mG$mt7&an7A#U2]_];6[
7.bBHB]U:/hoiUPR?r<\]qt)j`Z1@ZTf>W7M2PQ<%h.uGf$eU!06PomY$`PS9&`R*EnT@RT2P%F%MeJ<
5;BlK?lS]I*$pa3c<5A\b%2BSm0X"9a:*X<97epLQeim3dg3s&mBh2,V/k<]H=XjiEt(eMqa`#3^-a0_
k/doVWiT/%LIm`M:5cK!7T!'T)Qn5]Q*.(kK^E%cg.Qp1$9$T%4d"G"K>ME2Or5*cWMd:TL3K2\X,Ne3
?NO(VM$J$i=D%fC3KkC$,hf"JZfWkeCrIH3TcLHY`\'3.,a2NBM*k*OIZGX)_aBSUk;rN6nPEjiUQKl9
"H*GLh4E_Yc/`I>*f`5\Jnq1H;TUueR$sR>@i#YSW>mQbo&bPC<0csu;m\VY&\"+Xjs9<c>o-.)e5UV:
2mbY?''XIIaYKGV!lrZ"K0H>qSh)W:d0b-\[k'MoluFdp9:d!YcjB>>?!MtSX6MfHd.YbGZTBW:no7F&
,hQu5XQA(=cGrZ4fRu`<TI*FuF;g,*EV?^sH;%cfS$GE.b;?9/+B7Ke?)35^g!n;FN^crUE+ul.'=Do^
Skda+X>*En\G+95>M45Jkd6nU8@[ajSF3Gab[(47Zn5&2.qXuBKYcsN1K%jZ?d'Kd*#^u`g@fs;Sp@<j
%SR(K(a669BsI$Emc6"?RBjg\4'ZcuJM>0n<+Ytm#0n=m3nE#&6CEmtEGD(9dj*?%\55-/IVD3]bs\4'
.,*a+b[MdU83j2$QX2X$%!ZcseCUKJfC:loM9n]e)!Q35_lLqtYN(kj7hF_,:')PQP&WSWn]6/W/Ns0C
0<ONfNa)KC[*iYtmIY^$=@T9jc>-5,F*E74(ST:A,)=US99Mg<3B['ZgT&]<l(1J\S`F*`4upQ.;1^n?
U3NF8Ze=_KT#O!\GY`5:Lm`F7M3*\;=^lF-1P+)<1-WP-Euk<r-tEr"ZAp&4][MoBA6O!4]D,eON1N,<
o0a9cap3=?_4m1*4T92.A(>7+gSr9Vct".9Y]c7$<Pg-pI+MrXAfVnh*n6&3\3gPcEt2;mNfJQOHtCj4
UE^%>-'iAoR-*X19'4SiRW4gkf4'E-QJFs)*:E\O=$$p-g0/0-O^?bYC/0(>AEkL/`G<.BA%0X");OCR
V)+3HLCnFXimhc5$lP`o`d$WC%s`$FZD_6)F'!uXk!-%S_F%2,BqiWqA"gpco?Cj3b>UGb-m@kt@"pUU
BI(6-]B7-\8qXRqQ\QM@o(J$DlGS,hch<[+`Wa_(F_&XdX6':('nd2]GRX1Mf^1,E3"idDOhkfQ@r16!
>3qD)Ah?,9h/b')E9*PCo"ku:@nrGs_i11)#$HJC?G#[H2nBDOlJZ9r9,?)^jF]ah:6-GEVbJ:/loo[_
)HQW/>i*>"`-Jt>9-#Xl[^l'^.WAq?%N]<,OrQ$Z9Nb4]7VXe-1(Kd6*))C<j<37@5HE3=[!8k[0TPgR
F%N=s^j8#NF`RkC[Dsank:,+g!?6>:#-LFX%/r9)p8/E@I1*9bR8Xpn9@6q7)6;,DhbEI2alXLoaO7aa
F/?_R%qC+j&=+o\dRZe_.*`qqL2i/N)dOY#+RhCNP>MnMjjcV=:MfY`NBRI=AenZWHeij^F@T<qf1)#q
ffsXgjO=7so';rpU-D(;5@ik^3,8BH:KIJq7S3Nfpu-][*qtR[I3F[]oBgg4'`?oP!!N#<G@dld@-)nB
f&hJd)sY0OZ0@KlMfJLqYt]CSppN2jdR61!$j.$RBc=T'g-UG+_>mZb@<NmS3F8FgY?<P#VrX3_>tH(.
M"[9F_9h81-1+lVEjL^OB8-4JI7;KKF'4Vlco1OB1tQ::lg!;qR]lrqZ;J?hNK.Pj2ek3-N2hIR):I_*
^*RUb]s"N4bmQ\]?MW2d4"H5aa6PfPKcti=p9QqgL^uu_4fL-;*U#WrC\:tf#=gjOg@@[&E*G.;^<.%3
H=#*`6n@D`/rt[tS9j3<\_M2Gl0o:I)N;JJ0=kO*SEp&&*4UXEp5FP+NbWbdMVf1qIq%@^#DUi^E\JMX
<`n#%]D1Q-U!jVo]cNE]U.TgNa.o9A2?uTeE6qr\nbIa.p5e*n3Y3.O5QV`ueK.P5S@\uq7CQ'i&S&:e
,c'dJ@uL]*>X1_qO(@^&8RCEt:/E((?=5M$9?XnS#cpONEZM9]*!PH0k9he,1q3[.;qjFH[I]TEg1d3*
/KM(?<>cSs`'PMHc+]5B\uf"J:b5@Y@>IA(9-KIf`ThWjQtD@BX[Y'/&/TXpO;a1t1\CXD!S'Rn8"ru^
?W+i4+*MJ\g<d%&Q]%5Q/klW`f80=.T$rY0Z'K4>aJ!,g9nuEGo0R)Z6'R3mb<*Yl(!NUcN^1lE>oi9s
*HJf]3"X.LA3*u>r+fQr]6=BdDYpd$G"e`Q1X*I7,BqUbS-7:Wo-9S2h_^cV7J1QC'E\D`B9Hm%Hfjg.
!\[5&Lr:P1r>`J8/,3[9[58k?7^,?Efm]:Lpr\1Rqm04n<@=Ehp6Zk'/XMgk_XGP5c$iAV6?tUD7r*%f
*1A,\r4*mbB;:)Ce0OX,B^kn1Em6;oMmNdpqAq;+O6._Dq;V3JeS?iVpU3HRHugb/ZJ@:mZ2GQ>cTU)*
V^3%&[eNVRZApjc`8->eG*V0tD)AdD`eu>dRnkWj2?PJ=L8'l]0BjaIpi@*MSt$gMY+DEMNA&`>Bq-QX
HCKb5fQA0SH>]8o+[s]lmG+$PoR2rR<gq&/j';2X?MU2i8Z:Ube#*p@IZk!N_a^h6:aou*]E->Fls0i2
4:c5n[pqIjV<QTZoPVe;X/D?7C,hC8WtXC[c-bm>icqGoSUP+HC&:E,"DtalU6G?uW#<TuL5ZL`qCPRO
C.YjT)75$P]bW1pc+Le$7no_jM9i6p-$k9c(g,s0fien_H+dOfMH'3)0l#hnikL4oIq%Vb%L7XGa?66A
^0i+RIf:5?BJ`&IQa=%7(ub&g*rc4pCk!iRW6b[r:"@riDtmp&D*9k)N?F+."H>Q&bSbsJ=ZGmqiR:Jm
Z^C=5#e8@5E2Ql'M+N>>c$m-*"?Eu;ogV9>LSSY`S3q,P]2)XS/_,b>/Wa2?"K$0b_C(K%Bupp-]e\D-
S/.(Za?rMKc.8?i%]<0gQ-lcdY>^NKSt@)C/fT7FF.1_SVh]1VU$UYMU*o45_u"MIT<s=XS%m"r*(,n?
datYZIQ2bUOZ_<.p3)3:4ITq\dl0<`BT17r;l]1j!QbFbBuLS8eEAta`$+<O>!<#.Y@+-tn"#Jo2\]P@
6,MhnXYS,25Rof:[R[/]8nX]A8#WJ7Y/nZ&8A!3&\`T@Y]QX.LZe0#[m\Lei]4S5Qi@gtjA\\@KA#+F6
RZ@3-QVgV$1[@#0at.W7MAi+I@/a]Z<9Q4<VaHnk"d"R^1DV&Ej>GbqlK3n*4[$,0*LXhd(2hYJWiXan
Z?C^)_dC?`NQX1_SMpq`dqZ"51Cq?D5;6Fj>"/>IT6Fh4V=SN/oWoPb5Mc8UVplaC#-(n)X)H'"ZP:[%
3@QB+FPg!.IMnK-4ZV5E:C7+Z*e1Nk%(tliaZA]_oM#F=*tR9c=g$@93h9n&3n#qS6n[02G0[:M(7c46
P9mX3'FaS>e;"np?.o$'P6I8/S<dFqja(`h]#LF+oL#*R#A<nQcF6rZoTh_?h9[26dlRrD[Mq=^C2301
2cmZX^3AD*VVlF`qU@(Re>?hg'\A^kZ:ur$;`Tlib>ue]312<(5VmuY%/4Z:7>2K\#'6Yc,4>YL.WVp5
1N[TH\=0tX&q*dEDY`%1:*%6rB?U2(PPMB@KnXTrq]?hIfkD\L6co8F0.&nGlL_C@HJZu-"G@]UFD#L5
Q?dB&f&=&FCGKk??I?s6DbJJ7:KNUpph)86)Xe0m@m6l[>5;[e;o&%p)9V6VCP;:uiL>e'ep7Rs_!sX4
BJmK<A"/gG#9&#-Aa-$?SA)2830-!W(M7"GM@e-HVHWsJ\^AfD`Bm,%CSfTCh+j5(U!9GtFZSlX4'."D
RqAG&]1T8NBqXhiXd*Gqc>i^:Iihb%m%2D3f`s^=l1`FGT+QED*KRGX9&!G?A1Pjn`;2E1ce/5W8\uQI
/m3@]?c/%uCUC]'U38n/6c^884"ms$DX]feU#D/1F(*1k:ANZ.4&2Kojn2f'/rIN1gF&JuG37<a-'[Q3
hi0P>$b(96<qZEPUoIJ+[c^r&L",B>oM3Mh"X&:`qRsWP_&;M%V5rM]O_EU.ji?l7N)T7PDR6aLF%-?*
f8a])g(#?G0<OVWlER1_ft>et-p6@a?,\*G,u/8$VPq!;e6J96C?E!*Nh$&1m2HQ2bj3MXd:e67;`/r?
a+<euYP5pulcJe5D3sL!3`"DQ7\cHIeT4J0l'QL1,_WeuQXasP[LUr%RA]mOCt&*1M34(WrK3UgBt%c)
Us:$L`9[5cY0h8Y&$qf(^V"c1rp:/7p'tte5O/f[=nJ"=WV=_6lon2Yg0[beebeNBUh?N2VKTkJL8C4#
S[4CEY,q83MB7C4qd7R\-B/XaArM.,gRk</DmPp=&(^&hT1VhYrrB^XS_%ED%kX:Jf9#g;m5N?S-aJ2f
GG'4^^XW2QTu-KV"INeE2a"Eb.=T=bRdGT+T']jf@.N4AI2U"I^K6NBc`Oso?^>Z"mU`:lboIR@3lcZF
741dUBDS1U*_XgHR)A3-5=utjh._-qX\UefRi"*t79eo0[5tpkcKM0ShrUB*GJ<E]N-bB8@cQVF3ds@(
VglAbkE]cW>P0(*0X^o\H.O`hIsgh#WUpq2oJtZL?Qf0ZCOJVR03ml9?VAH)rhh)'f+0^Xf/TqdlLits
d9^)=1VLhAoP39ee!MH7l8^&"q`1.>qOW1AJX<N^g-.ga[9V))f/K(B3deTkpWS9^Zjpc*]4RC4e_=dM
d!!]-ZoYlaLS?"N0%'^P~>
%%EndBinary
grestore
np
gsave
82.1696 120.528 mo
83.1696 120.528 li
83.1696 115.528 li
82.1696 115.528 li
cp
clp
82.6696 120.028 mo
82.6696 116.028 li
0 gry
@
grestore
gsave
82.1696 35.3521 mo
83.1696 35.3521 li
83.1696 30.3521 li
82.1696 30.3521 li
cp
clp
82.6696 34.8521 mo
82.6696 30.8521 li
0 gry
@
grestore
0 gry
true set_gvm
%ADOBeginSubsetFont: TBGAAA+NimbusSanL-Regu Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.13 dict dup begin/FontType 1 def/FontName /TBGAAA+NimbusSanL-Regu def/FontInfo 7 dict dup begin/Notice (Copyright \\050URW\\051++,Copyright 1999 by \\050URW\\051++ Design & Development) def/Weight (Regular) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 48 /zero putdup 49 /one putdef/UniqueID 5020902 def/FontBBox {-174 -285 1001 953} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-23 0 524 544 729 749 686 709] def/BlueScale 0.0396249 def/StdHW [78] def/StdVW [85] def/StemSnapH [69 74 78 83] def/StemSnapV [78 85 94] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/zero <1C60D8A8C9B7EF32A8358722AA80E7B0A403E0AAC8AF9773710239EE99CFB03C40A2F97D10285CF7561FE54E06EBD6D0440B8D110A5A738867D010936BBC35E300E5FB3C772FA150D2BF1D040E476DEC48E0B601B04FE56E185DA1E8C577426BB5FA04F8E4DB> |-/one <1C60D8A8C9B7EF32570F06410D4703CEEE7210F729C289AB36488A897151E1AAB5D613DEBEA5766F929AE7> |-/.notdef <1C60D8A8C9B854D00D> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
reset_gvm
/PBVMPQ+NimbusSanL-Regu /TBGAAA+NimbusSanL-Regu findfont ct_VMDictPut/PBVMPQ+NimbusSanL-Regu*1 [48{/.notdef}rp /zero /one 206{/.notdef}rp]PBVMPQ+NimbusSanL-Regu nfPBVMPQ+NimbusSanL-Regu*1 [7.97 0 0 -7.97 0 0 ]msf80.954 129.563 mo(010)[42.3685 4.42329 0 ]xshtrue set_gvm
%ADOBeginSubsetFont: JXDRMX+CMSY8 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.13 dict dup begin/FontType 1 def/FontName /JXDRMX+CMSY8 def/FontInfo 7 dict dup begin/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def/Weight (Medium) def/ItalicAngle -14.0351 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 0 /minus putdup 161 /minus putdef/UniqueID 5000818 def/FontBBox {-30 -955 1185 779} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-24 0 683 704] def/OtherBlues [-126 -118] def/BlueScale 0.0396249 def/StdHW [46] def/StdVW [89] def/StemSnapH [46 61] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/minus <1C60D8A8C9B08A953C5C2645FEB08D0F605D4538696964B7A1C2728DEF7C170C67D122DB85A4226362FADE57C92E833FF0895D3F> |-/.notdef <1C60D8A8C9C4A637> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
reset_gvm
/PBVMPR+CMSY8 /JXDRMX+CMSY8 findfont ct_VMDictPut/PBVMPR+CMSY8*1 [161{/.notdef}rp /minus 94{/.notdef}rp]PBVMPR+CMSY8 nfPBVMPR+CMSY8*1 [7.97 0 0 -7.97 0 0 ]msf19.133 122.037 mo(\241)shPBVMPQ+NimbusSanL-Regu*1 [7.97 0 0 -7.97 0 0 ]msf25.7163 122.037 mo(10)[4.42329 0 ]xshgsave
38.0818 75.44 mo
43.0818 75.44 li
43.0818 74.44 li
38.0818 74.44 li
cp
clp
38.5818 74.94 mo
42.5818 74.94 li
@
grestore
gsave
123.257 75.44 mo
128.257 75.44 li
128.257 74.44 li
123.257 74.44 li
cp
clp
123.757 74.94 mo
127.757 74.94 li
@
grestore
PBVMPQ+NimbusSanL-Regu*1 [7.97 0 0 -7.97 0 0 ]msf30.15 78.136 mo(0)sh25.719 33.548 mo(10)[4.42329 0 ]xsh38.5818 120.028 mo
127.758 120.028 li
127.758 30.8519 li
38.5818 30.8519 li
38.5818 120.028 li
@
true set_gvm
%ADOBeginSubsetFont: TBGAAA+NimbusSanL-Regu AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginPBVMPQ+NimbusSanL-Regu dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/S <1C60D8A8C9B64EDF77D7EC0546C6DE4C531E1C5BE973B418A5C3A6670C5B61F03E729C4EE49FAAE8566EF7513CABDB7B25985EB5B5918EFD38ADD67173B1E97A3E92F3A138EAC1DA4675B3CA4653A5DB14092F89F79F9AEE2434FC353F36DC89C2C75CDB64472D17DCFFE6B51D66D133C183BCCD261A16E57C765010C97B7BBAC0AD483057F900CCF804A5859EF25F455471A44B955452B199> |-/a <1C60D8A8C9B7EF32A835872312BA38ECCECE8951474DD5CAA68265B2F0077774DC7F3451D7D63DB42834E8CA98DCE699A0CC5B36BF814E3B80B06F4DA27B9116C1B8E7AA28478611C53AA03391989948EEDD0F15B8190B4D553731226D409ACF431AD3866ECE6475825C17AA6F1C12F87CCB78AE7ABA03EEB80FA59FF37AD180E40F2937DB96DD21AA2B595B8A40D0252E3B40464E8A653126A1F793C9CEAFDD358A2DD60445> |-/c <1C60D8A8C9B7A73D3A65C15B5AE8DF81DD1343D8AA6F164496C050DAE1B7AE1C7D1CCEAF2E1094AEE61906D994460D35D718694E3B5F4B6AA437EC1B72F10FE2CDD44AC7D043035ADEA0FA367F7D09EC8F26E62094A9C6DCA9C61C> |-/e <1C60D8A8C9B7EF32A839C1FD591230A166F277FECE72B730F1E2F317E00493971DEE8E5EAE9387F2DAF20CAA9EDB2AA477FF9EAA4CC21C1650D37B61458B35699A0C598AB28D1BF3FC566A8A3188BB3E7F14D6C575EE74C51E2E8E4E6F5D3491A9F18F05171ED970B25AFE0F35A1> |-/p <1C60D8A8C9B7EF3227B21D31137DC869EC372F70CAE6781EA146B2903260E24F701FDF227E072BD95E12FE07374A82CFBFC1FAEC3E9F72B43A7E58F25448F8EC555B4A7B773DEC8BB6D1EEA6615C00E66CA96DF653E47E06C2171CCF584F9DFA9ABD37FD84B3D4F1ECF2A907E500304DE9F828B3D823F40AD41301FBB35844C37D3215D325D86E3D5BDD66C6> |-systemdict /gcheck known {setglobal} if end {end} ifendPBVMPQ+NimbusSanL-Regu /Encoding getdup 83 /S putdup 97 /a putdup 99 /c putdup 101 /e putdup 112 /p putpop%ADOEndSubsetFont
reset_gvm
/PBVMPQ+NimbusSanL-Regu*1 [48{/.notdef}rp /zero /one 33{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c /.notdef /e 10{/.notdef}rp /p 143{/.notdef}rp]PBVMPQ+NimbusSanL-Regu nfPBVMPQ+NimbusSanL-Regu*1 [0 -9.963 -9.963 0 0 0 ]msf19.2191 88.8164 mo(Space)[-6.63536 -5.5294 -5.52939 -4.9815 0 ]yshPBVMPQ+NimbusSanL-Regu*1 [9.963 0 0 -9.963 0 0 ]msf69.7933 142.429 mo(Space)[6.63536 5.5294 5.52939 4.9815 0 ]xshtrue set_gvm
%ADOBeginSubsetFont: WGJRMX+NimbusSanL-Bold Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.13 dict dup begin/FontType 1 def/FontName /WGJRMX+NimbusSanL-Bold def/FontInfo 7 dict dup begin/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) def/Weight (Bold) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 65 /A putdef/UniqueID 5020904 def/FontBBox {-173 -307 1003 949} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-23 0 540 560 729 749 701 724] def/BlueScale 0.0396249 def/StdHW [118] def/StdVW [141] def/StemSnapH [106 114 118 127] def/StemSnapV [141 151] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/A <1C60D8A8C9B6079F1E495237AA3F64441E4A131C11FB3E8512A0B86473A2F60C423CF878E88E0F4833552CCA1B70C921FDFE4A9F47B1CA4B5C61C70FFA4765A82B6DBE934516EF> |-/.notdef <1C60D8A8C9B854D00D> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
reset_gvm
/PBVMPS+NimbusSanL-Bold /WGJRMX+NimbusSanL-Bold findfont ct_VMDictPut/PBVMPS+NimbusSanL-Bold*1 [65{/.notdef}rp /A 190{/.notdef}rp]PBVMPS+NimbusSanL-Bold nfPBVMPS+NimbusSanL-Bold*1 [11.955 0 0 -11.955 0 0 ]msf2.91129 26.3932 mo(A)sh133.331 121.88 mo
133.331 121.517 li
133.331 29.363 li
133.331 29 li
137.975 29 li
137.975 29.363 li
137.975 121.517 li
137.975 121.88 li
133.331 121.88 li
cp
1 gry
f
0.01 lw
133.331 121.88 mo
133.331 121.517 li
133.331 29.363 li
133.331 29 li
137.975 29 li
137.975 29.363 li
137.975 121.517 li
137.975 121.88 li
133.331 121.88 li
cp
@
gsave
133.331 121.88 mo
137.975 121.88 li
137.975 29 li
133.331 29 li
cp
clp
133.331 121.88 mo
137.975 121.88 li
137.975 121.517 li
133.331 121.517 li
cp
0 0 0.5 rgb
f
133.331 121.517 mo
137.975 121.517 li
137.975 121.154 li
133.331 121.154 li
cp
0 0 0.518 rgb
f
133.331 121.154 mo
137.975 121.154 li
137.975 120.791 li
133.331 120.791 li
cp
0 0 0.536 rgb
f
133.331 120.792 mo
137.975 120.792 li
137.975 120.429 li
133.331 120.429 li
cp
0 0 0.553 rgb
f
133.331 120.429 mo
137.975 120.429 li
137.975 120.066 li
133.331 120.066 li
cp
0 0 0.571 rgb
f
133.331 120.066 mo
137.975 120.066 li
137.975 119.703 li
133.331 119.703 li
cp
0 0 0.589 rgb
f
133.331 119.703 mo
137.975 119.703 li
137.975 119.34 li
133.331 119.34 li
cp
0 0 0.607 rgb
f
133.331 119.34 mo
137.975 119.34 li
137.975 118.977 li
133.331 118.977 li
cp
0 0 0.625 rgb
f
133.331 118.977 mo
137.975 118.977 li
137.975 118.614 li
133.331 118.614 li
cp
0 0 0.643 rgb
f
133.331 118.615 mo
137.975 118.615 li
137.975 118.252 li
133.331 118.252 li
cp
0 0 0.66 rgb
f
133.331 118.252 mo
137.975 118.252 li
137.975 117.889 li
133.331 117.889 li
cp
0 0 0.678 rgb
f
133.331 117.889 mo
137.975 117.889 li
137.975 117.526 li
133.331 117.526 li
cp
0 0 0.696 rgb
f
133.331 117.526 mo
137.975 117.526 li
137.975 117.163 li
133.331 117.163 li
cp
0 0 0.714 rgb
f
133.331 117.163 mo
137.975 117.163 li
137.975 116.8 li
133.331 116.8 li
cp
0 0 0.732 rgb
f
133.331 116.801 mo
137.975 116.801 li
137.975 116.438 li
133.331 116.438 li
cp
0 0 0.75 rgb
f
133.331 116.438 mo
137.975 116.438 li
137.975 116.075 li
133.331 116.075 li
cp
0 0 0.767 rgb
f
133.331 116.075 mo
137.975 116.075 li
137.975 115.712 li
133.331 115.712 li
cp
0 0 0.785 rgb
f
133.331 115.712 mo
137.975 115.712 li
137.975 115.349 li
133.331 115.349 li
cp
0 0 0.803 rgb
f
133.331 115.349 mo
137.975 115.349 li
137.975 114.986 li
133.331 114.986 li
cp
0 0 0.821 rgb
f
133.331 114.987 mo
137.975 114.987 li
137.975 114.624 li
133.331 114.624 li
cp
0 0 0.839 rgb
f
133.331 114.624 mo
137.975 114.624 li
137.975 114.261 li
133.331 114.261 li
cp
0 0 0.857 rgb
f
133.331 114.261 mo
137.975 114.261 li
137.975 113.898 li
133.331 113.898 li
cp
0 0 0.874 rgb
f
133.331 113.898 mo
137.975 113.898 li
137.975 113.535 li
133.331 113.535 li
cp
0 0 0.892 rgb
f
133.331 113.535 mo
137.975 113.535 li
137.975 113.172 li
133.331 113.172 li
cp
0 0 0.91 rgb
f
133.331 113.173 mo
137.975 113.173 li
137.975 112.81 li
133.331 112.81 li
cp
0 0 0.928 rgb
f
133.331 112.81 mo
137.975 112.81 li
137.975 112.447 li
133.331 112.447 li
cp
0 0 0.946 rgb
f
133.331 112.447 mo
137.975 112.447 li
137.975 112.084 li
133.331 112.084 li
cp
0 0 0.963 rgb
f
133.331 112.084 mo
137.975 112.084 li
137.975 111.721 li
133.331 111.721 li
cp
0 0 0.981 rgb
f
133.331 111.721 mo
137.975 111.721 li
137.975 111.358 li
133.331 111.358 li
cp
0 0 0.999 rgb
f
133.331 111.358 mo
137.975 111.358 li
137.975 110.995 li
133.331 110.995 li
cp
0 0 1 rgb
f
133.331 110.996 mo
137.975 110.996 li
137.975 110.633 li
133.331 110.633 li
cp
f
133.331 110.633 mo
137.975 110.633 li
137.975 110.27 li
133.331 110.27 li
cp
f
133.331 110.27 mo
137.975 110.27 li
137.975 109.907 li
133.331 109.907 li
cp
0 0.002 1 rgb
f
133.331 109.907 mo
137.975 109.907 li
137.975 109.544 li
133.331 109.544 li
cp
0 0.018 1 rgb
f
133.331 109.544 mo
137.975 109.544 li
137.975 109.181 li
133.331 109.181 li
cp
0 0.033 1 rgb
f
133.331 109.182 mo
137.975 109.182 li
137.975 108.819 li
133.331 108.819 li
cp
0 0.049 1 rgb
f
133.331 108.819 mo
137.975 108.819 li
137.975 108.456 li
133.331 108.456 li
cp
0 0.065 1 rgb
f
133.331 108.456 mo
137.975 108.456 li
137.975 108.093 li
133.331 108.093 li
cp
0 0.08 1 rgb
f
133.331 108.093 mo
137.975 108.093 li
137.975 107.73 li
133.331 107.73 li
cp
0 0.096 1 rgb
f
133.331 107.73 mo
137.975 107.73 li
137.975 107.367 li
133.331 107.367 li
cp
0 0.112 1 rgb
f
133.331 107.367 mo
137.975 107.367 li
137.975 107.004 li
133.331 107.004 li
cp
0 0.127 1 rgb
f
133.331 107.005 mo
137.975 107.005 li
137.975 106.642 li
133.331 106.642 li
cp
0 0.143 1 rgb
f
133.331 106.642 mo
137.975 106.642 li
137.975 106.279 li
133.331 106.279 li
cp
0 0.159 1 rgb
f
133.331 106.279 mo
137.975 106.279 li
137.975 105.916 li
133.331 105.916 li
cp
0 0.175 1 rgb
f
133.331 105.916 mo
137.975 105.916 li
137.975 105.553 li
133.331 105.553 li
cp
0 0.19 1 rgb
f
133.331 105.553 mo
137.975 105.553 li
137.975 105.19 li
133.331 105.19 li
cp
0 0.206 1 rgb
f
133.331 105.191 mo
137.975 105.191 li
137.975 104.828 li
133.331 104.828 li
cp
0 0.222 1 rgb
f
133.331 104.828 mo
137.975 104.828 li
137.975 104.465 li
133.331 104.465 li
cp
0 0.237 1 rgb
f
133.331 104.465 mo
137.975 104.465 li
137.975 104.102 li
133.331 104.102 li
cp
0 0.253 1 rgb
f
133.331 104.102 mo
137.975 104.102 li
137.975 103.739 li
133.331 103.739 li
cp
0 0.269 1 rgb
f
133.331 103.739 mo
137.975 103.739 li
137.975 103.376 li
133.331 103.376 li
cp
0 0.284 1 rgb
f
133.331 103.377 mo
137.975 103.377 li
137.975 103.014 li
133.331 103.014 li
cp
0 0.3 1 rgb
f
133.331 103.014 mo
137.975 103.014 li
137.975 102.651 li
133.331 102.651 li
cp
0 0.316 1 rgb
f
133.331 102.651 mo
137.975 102.651 li
137.975 102.288 li
133.331 102.288 li
cp
0 0.331 1 rgb
f
133.331 102.288 mo
137.975 102.288 li
137.975 101.925 li
133.331 101.925 li
cp
0 0.347 1 rgb
f
133.331 101.925 mo
137.975 101.925 li
137.975 101.562 li
133.331 101.562 li
cp
0 0.363 1 rgb
f
133.331 101.562 mo
137.975 101.562 li
137.975 101.199 li
133.331 101.199 li
cp
0 0.378 1 rgb
f
133.331 101.2 mo
137.975 101.2 li
137.975 100.837 li
133.331 100.837 li
cp
0 0.394 1 rgb
f
133.331 100.837 mo
137.975 100.837 li
137.975 100.474 li
133.331 100.474 li
cp
0 0.41 1 rgb
f
133.331 100.474 mo
137.975 100.474 li
137.975 100.111 li
133.331 100.111 li
cp
0 0.425 1 rgb
f
133.331 100.111 mo
137.975 100.111 li
137.975 99.748 li
133.331 99.748 li
cp
0 0.441 1 rgb
f
133.331 99.748 mo
137.975 99.748 li
137.975 99.385 li
133.331 99.385 li
cp
0 0.457 1 rgb
f
133.331 99.386 mo
137.975 99.386 li
137.975 99.023 li
133.331 99.023 li
cp
0 0.473 1 rgb
f
133.331 99.023 mo
137.975 99.023 li
137.975 98.66 li
133.331 98.66 li
cp
0 0.488 1 rgb
f
133.331 98.66 mo
137.975 98.66 li
137.975 98.297 li
133.331 98.297 li
cp
0 0.504 1 rgb
f
133.331 98.297 mo
137.975 98.297 li
137.975 97.934 li
133.331 97.934 li
cp
0 0.52 1 rgb
f
133.331 97.934 mo
137.975 97.934 li
137.975 97.571 li
133.331 97.571 li
cp
0 0.535 1 rgb
f
133.331 97.572 mo
137.975 97.572 li
137.975 97.209 li
133.331 97.209 li
cp
0 0.551 1 rgb
f
133.331 97.209 mo
137.975 97.209 li
137.975 96.846 li
133.331 96.846 li
cp
0 0.567 1 rgb
f
133.331 96.846 mo
137.975 96.846 li
137.975 96.483 li
133.331 96.483 li
cp
0 0.582 1 rgb
f
133.331 96.483 mo
137.975 96.483 li
137.975 96.12 li
133.331 96.12 li
cp
0 0.598 1 rgb
f
133.331 96.12 mo
137.975 96.12 li
137.975 95.757 li
133.331 95.757 li
cp
0 0.614 1 rgb
f
133.331 95.758 mo
137.975 95.758 li
137.975 95.395 li
133.331 95.395 li
cp
0 0.629 1 rgb
f
133.331 95.395 mo
137.975 95.395 li
137.975 95.032 li
133.331 95.032 li
cp
0 0.645 1 rgb
f
133.331 95.032 mo
137.975 95.032 li
137.975 94.669 li
133.331 94.669 li
cp
0 0.661 1 rgb
f
133.331 94.669 mo
137.975 94.669 li
137.975 94.306 li
133.331 94.306 li
cp
0 0.676 1 rgb
f
133.331 94.306 mo
137.975 94.306 li
137.975 93.943 li
133.331 93.943 li
cp
0 0.692 1 rgb
f
133.331 93.943 mo
137.975 93.943 li
137.975 93.58 li
133.331 93.58 li
cp
0 0.708 1 rgb
f
133.331 93.581 mo
137.975 93.581 li
137.975 93.218 li
133.331 93.218 li
cp
0 0.724 1 rgb
f
133.331 93.218 mo
137.975 93.218 li
137.975 92.855 li
133.331 92.855 li
cp
0 0.739 1 rgb
f
133.331 92.855 mo
137.975 92.855 li
137.975 92.492 li
133.331 92.492 li
cp
0 0.755 1 rgb
f
133.331 92.492 mo
137.975 92.492 li
137.975 92.129 li
133.331 92.129 li
cp
0 0.771 1 rgb
f
133.331 92.129 mo
137.975 92.129 li
137.975 91.766 li
133.331 91.766 li
cp
0 0.786 1 rgb
f
133.331 91.767 mo
137.975 91.767 li
137.975 91.404 li
133.331 91.404 li
cp
0 0.802 1 rgb
f
133.331 91.404 mo
137.975 91.404 li
137.975 91.041 li
133.331 91.041 li
cp
0 0.818 1 rgb
f
133.331 91.041 mo
137.975 91.041 li
137.975 90.678 li
133.331 90.678 li
cp
0 0.833 1 rgb
f
133.331 90.678 mo
137.975 90.678 li
137.975 90.315 li
133.331 90.315 li
cp
0 0.849 1 rgb
f
133.331 90.315 mo
137.975 90.315 li
137.975 89.952 li
133.331 89.952 li
cp
0 0.865 0.996 rgb
f
133.331 89.952 mo
137.975 89.952 li
137.975 89.589 li
133.331 89.589 li
cp
0 0.88 0.984 rgb
f
133.331 89.59 mo
137.975 89.59 li
137.975 89.227 li
133.331 89.227 li
cp
0 0.896 0.971 rgb
f
133.331 89.227 mo
137.975 89.227 li
137.975 88.864 li
133.331 88.864 li
cp
0.009 0.912 0.958 rgb
f
133.331 88.864 mo
137.975 88.864 li
137.975 88.501 li
133.331 88.501 li
cp
0.022 0.927 0.946 rgb
f
133.331 88.501 mo
137.975 88.501 li
137.975 88.138 li
133.331 88.138 li
cp
0.035 0.943 0.933 rgb
f
133.331 88.138 mo
137.975 88.138 li
137.975 87.775 li
133.331 87.775 li
cp
0.047 0.959 0.92 rgb
f
133.331 87.776 mo
137.975 87.776 li
137.975 87.413 li
133.331 87.413 li
cp
0.06 0.975 0.908 rgb
f
133.331 87.413 mo
137.975 87.413 li
137.975 87.05 li
133.331 87.05 li
cp
0.073 0.99 0.895 rgb
f
133.331 87.05 mo
137.975 87.05 li
137.975 86.687 li
133.331 86.687 li
cp
0.085 1 0.882 rgb
f
133.331 86.687 mo
137.975 86.687 li
137.975 86.324 li
133.331 86.324 li
cp
0.098 1 0.87 rgb
f
133.331 86.324 mo
137.975 86.324 li
137.975 85.961 li
133.331 85.961 li
cp
0.111 1 0.857 rgb
f
133.331 85.962 mo
137.975 85.962 li
137.975 85.599 li
133.331 85.599 li
cp
0.123 1 0.844 rgb
f
133.331 85.599 mo
137.975 85.599 li
137.975 85.236 li
133.331 85.236 li
cp
0.136 1 0.832 rgb
f
133.331 85.236 mo
137.975 85.236 li
137.975 84.873 li
133.331 84.873 li
cp
0.149 1 0.819 rgb
f
133.331 84.873 mo
137.975 84.873 li
137.975 84.51 li
133.331 84.51 li
cp
0.161 1 0.806 rgb
f
133.331 84.51 mo
137.975 84.51 li
137.975 84.147 li
133.331 84.147 li
cp
0.174 1 0.794 rgb
f
133.331 84.148 mo
137.975 84.148 li
137.975 83.785 li
133.331 83.785 li
cp
0.187 1 0.781 rgb
f
133.331 83.785 mo
137.975 83.785 li
137.975 83.422 li
133.331 83.422 li
cp
0.199 1 0.768 rgb
f
133.331 83.422 mo
137.975 83.422 li
137.975 83.059 li
133.331 83.059 li
cp
0.212 1 0.756 rgb
f
133.331 83.059 mo
137.975 83.059 li
137.975 82.696 li
133.331 82.696 li
cp
0.225 1 0.743 rgb
f
133.331 82.696 mo
137.975 82.696 li
137.975 82.333 li
133.331 82.333 li
cp
0.237 1 0.731 rgb
f
133.331 82.333 mo
137.975 82.333 li
137.975 81.97 li
133.331 81.97 li
cp
0.25 1 0.718 rgb
f
133.331 81.971 mo
137.975 81.971 li
137.975 81.608 li
133.331 81.608 li
cp
0.262 1 0.705 rgb
f
133.331 81.608 mo
137.975 81.608 li
137.975 81.245 li
133.331 81.245 li
cp
0.275 1 0.693 rgb
f
133.331 81.245 mo
137.975 81.245 li
137.975 80.882 li
133.331 80.882 li
cp
0.288 1 0.68 rgb
f
133.331 80.882 mo
137.975 80.882 li
137.975 80.519 li
133.331 80.519 li
cp
0.3 1 0.667 rgb
f
133.331 80.519 mo
137.975 80.519 li
137.975 80.156 li
133.331 80.156 li
cp
0.313 1 0.655 rgb
f
133.331 80.157 mo
137.975 80.157 li
137.975 79.794 li
133.331 79.794 li
cp
0.326 1 0.642 rgb
f
133.331 79.794 mo
137.975 79.794 li
137.975 79.431 li
133.331 79.431 li
cp
0.338 1 0.629 rgb
f
133.331 79.431 mo
137.975 79.431 li
137.975 79.068 li
133.331 79.068 li
cp
0.351 1 0.617 rgb
f
133.331 79.068 mo
137.975 79.068 li
137.975 78.705 li
133.331 78.705 li
cp
0.364 1 0.604 rgb
f
133.331 78.705 mo
137.975 78.705 li
137.975 78.342 li
133.331 78.342 li
cp
0.376 1 0.591 rgb
f
133.331 78.342 mo
137.975 78.342 li
137.975 77.979 li
133.331 77.979 li
cp
0.389 1 0.579 rgb
f
133.331 77.98 mo
137.975 77.98 li
137.975 77.617 li
133.331 77.617 li
cp
0.402 1 0.566 rgb
f
133.331 77.617 mo
137.975 77.617 li
137.975 77.254 li
133.331 77.254 li
cp
0.414 1 0.553 rgb
f
133.331 77.254 mo
137.975 77.254 li
137.975 76.891 li
133.331 76.891 li
cp
0.427 1 0.541 rgb
f
133.331 76.891 mo
137.975 76.891 li
137.975 76.528 li
133.331 76.528 li
cp
0.44 1 0.528 rgb
f
133.331 76.528 mo
137.975 76.528 li
137.975 76.165 li
133.331 76.165 li
cp
0.452 1 0.516 rgb
f
133.331 76.166 mo
137.975 76.166 li
137.975 75.803 li
133.331 75.803 li
cp
0.465 1 0.503 rgb
f
133.331 75.803 mo
137.975 75.803 li
137.975 75.44 li
133.331 75.44 li
cp
0.478 1 0.49 rgb
f
133.331 75.44 mo
137.975 75.44 li
137.975 75.077 li
133.331 75.077 li
cp
0.49 1 0.478 rgb
f
133.331 75.077 mo
137.975 75.077 li
137.975 74.714 li
133.331 74.714 li
cp
0.503 1 0.465 rgb
f
133.331 74.714 mo
137.975 74.714 li
137.975 74.351 li
133.331 74.351 li
cp
0.516 1 0.452 rgb
f
133.331 74.352 mo
137.975 74.352 li
137.975 73.989 li
133.331 73.989 li
cp
0.528 1 0.44 rgb
f
133.331 73.989 mo
137.975 73.989 li
137.975 73.626 li
133.331 73.626 li
cp
0.541 1 0.427 rgb
f
133.331 73.626 mo
137.975 73.626 li
137.975 73.263 li
133.331 73.263 li
cp
0.553 1 0.414 rgb
f
133.331 73.263 mo
137.975 73.263 li
137.975 72.9 li
133.331 72.9 li
cp
0.566 1 0.402 rgb
f
133.331 72.9 mo
137.975 72.9 li
137.975 72.537 li
133.331 72.537 li
cp
0.579 1 0.389 rgb
f
133.331 72.538 mo
137.975 72.538 li
137.975 72.175 li
133.331 72.175 li
cp
0.591 1 0.376 rgb
f
133.331 72.175 mo
137.975 72.175 li
137.975 71.812 li
133.331 71.812 li
cp
0.604 1 0.364 rgb
f
133.331 71.812 mo
137.975 71.812 li
137.975 71.449 li
133.331 71.449 li
cp
0.617 1 0.351 rgb
f
133.331 71.449 mo
137.975 71.449 li
137.975 71.086 li
133.331 71.086 li
cp
0.629 1 0.338 rgb
f
133.331 71.086 mo
137.975 71.086 li
137.975 70.723 li
133.331 70.723 li
cp
0.642 1 0.326 rgb
f
133.331 70.723 mo
137.975 70.723 li
137.975 70.36 li
133.331 70.36 li
cp
0.655 1 0.313 rgb
f
133.331 70.361 mo
137.975 70.361 li
137.975 69.998 li
133.331 69.998 li
cp
0.667 1 0.3 rgb
f
133.331 69.998 mo
137.975 69.998 li
137.975 69.635 li
133.331 69.635 li
cp
0.68 1 0.288 rgb
f
133.331 69.635 mo
137.975 69.635 li
137.975 69.272 li
133.331 69.272 li
cp
0.693 1 0.275 rgb
f
133.331 69.272 mo
137.975 69.272 li
137.975 68.909 li
133.331 68.909 li
cp
0.705 1 0.262 rgb
f
133.331 68.909 mo
137.975 68.909 li
137.975 68.546 li
133.331 68.546 li
cp
0.718 1 0.25 rgb
f
133.331 68.547 mo
137.975 68.547 li
137.975 68.184 li
133.331 68.184 li
cp
0.731 1 0.237 rgb
f
133.331 68.184 mo
137.975 68.184 li
137.975 67.821 li
133.331 67.821 li
cp
0.743 1 0.225 rgb
f
133.331 67.821 mo
137.975 67.821 li
137.975 67.458 li
133.331 67.458 li
cp
0.756 1 0.212 rgb
f
133.331 67.458 mo
137.975 67.458 li
137.975 67.095 li
133.331 67.095 li
cp
0.768 1 0.199 rgb
f
133.331 67.095 mo
137.975 67.095 li
137.975 66.732 li
133.331 66.732 li
cp
0.781 1 0.187 rgb
f
133.331 66.732 mo
137.975 66.732 li
137.975 66.369 li
133.331 66.369 li
cp
0.794 1 0.174 rgb
f
133.331 66.37 mo
137.975 66.37 li
137.975 66.007 li
133.331 66.007 li
cp
0.806 1 0.161 rgb
f
133.331 66.007 mo
137.975 66.007 li
137.975 65.644 li
133.331 65.644 li
cp
0.819 1 0.149 rgb
f
133.331 65.644 mo
137.975 65.644 li
137.975 65.281 li
133.331 65.281 li
cp
0.832 1 0.136 rgb
f
133.331 65.281 mo
137.975 65.281 li
137.975 64.918 li
133.331 64.918 li
cp
0.844 1 0.123 rgb
f
133.331 64.918 mo
137.975 64.918 li
137.975 64.555 li
133.331 64.555 li
cp
0.857 1 0.111 rgb
f
133.331 64.556 mo
137.975 64.556 li
137.975 64.193 li
133.331 64.193 li
cp
0.87 1 0.098 rgb
f
133.331 64.193 mo
137.975 64.193 li
137.975 63.83 li
133.331 63.83 li
cp
0.882 1 0.085 rgb
f
133.331 63.83 mo
137.975 63.83 li
137.975 63.467 li
133.331 63.467 li
cp
0.895 1 0.073 rgb
f
133.331 63.467 mo
137.975 63.467 li
137.975 63.104 li
133.331 63.104 li
cp
0.908 1 0.06 rgb
f
133.331 63.104 mo
137.975 63.104 li
137.975 62.741 li
133.331 62.741 li
cp
0.92 1 0.047 rgb
f
133.331 62.742 mo
137.975 62.742 li
137.975 62.379 li
133.331 62.379 li
cp
0.933 1 0.035 rgb
f
133.331 62.379 mo
137.975 62.379 li
137.975 62.016 li
133.331 62.016 li
cp
0.946 0.988 0.022 rgb
f
133.331 62.016 mo
137.975 62.016 li
137.975 61.653 li
133.331 61.653 li
cp
0.958 0.974 0.009 rgb
f
133.331 61.653 mo
137.975 61.653 li
137.975 61.29 li
133.331 61.29 li
cp
0.971 0.959 0 rgb
f
133.331 61.29 mo
137.975 61.29 li
137.975 60.927 li
133.331 60.927 li
cp
0.984 0.945 0 rgb
f
133.331 60.928 mo
137.975 60.928 li
137.975 60.565 li
133.331 60.565 li
cp
0.996 0.93 0 rgb
f
133.331 60.565 mo
137.975 60.565 li
137.975 60.202 li
133.331 60.202 li
cp
1 0.916 0 rgb
f
133.331 60.202 mo
137.975 60.202 li
137.975 59.839 li
133.331 59.839 li
cp
1 0.901 0 rgb
f
133.331 59.839 mo
137.975 59.839 li
137.975 59.476 li
133.331 59.476 li
cp
1 0.887 0 rgb
f
133.331 59.476 mo
137.975 59.476 li
137.975 59.113 li
133.331 59.113 li
cp
1 0.872 0 rgb
f
133.331 59.113 mo
137.975 59.113 li
137.975 58.75 li
133.331 58.75 li
cp
1 0.858 0 rgb
f
133.331 58.751 mo
137.975 58.751 li
137.975 58.388 li
133.331 58.388 li
cp
1 0.843 0 rgb
f
133.331 58.388 mo
137.975 58.388 li
137.975 58.025 li
133.331 58.025 li
cp
1 0.829 0 rgb
f
133.331 58.025 mo
137.975 58.025 li
137.975 57.662 li
133.331 57.662 li
cp
1 0.814 0 rgb
f
133.331 57.662 mo
137.975 57.662 li
137.975 57.299 li
133.331 57.299 li
cp
1 0.8 0 rgb
f
133.331 57.299 mo
137.975 57.299 li
137.975 56.936 li
133.331 56.936 li
cp
1 0.785 0 rgb
f
133.331 56.937 mo
137.975 56.937 li
137.975 56.574 li
133.331 56.574 li
cp
1 0.771 0 rgb
f
133.331 56.574 mo
137.975 56.574 li
137.975 56.211 li
133.331 56.211 li
cp
1 0.756 0 rgb
f
133.331 56.211 mo
137.975 56.211 li
137.975 55.848 li
133.331 55.848 li
cp
1 0.741 0 rgb
f
133.331 55.848 mo
137.975 55.848 li
137.975 55.485 li
133.331 55.485 li
cp
1 0.727 0 rgb
f
133.331 55.485 mo
137.975 55.485 li
137.975 55.122 li
133.331 55.122 li
cp
1 0.712 0 rgb
f
133.331 55.122 mo
137.975 55.122 li
137.975 54.759 li
133.331 54.759 li
cp
1 0.698 0 rgb
f
133.331 54.76 mo
137.975 54.76 li
137.975 54.397 li
133.331 54.397 li
cp
1 0.683 0 rgb
f
133.331 54.397 mo
137.975 54.397 li
137.975 54.034 li
133.331 54.034 li
cp
1 0.669 0 rgb
f
133.331 54.034 mo
137.975 54.034 li
137.975 53.671 li
133.331 53.671 li
cp
1 0.654 0 rgb
f
133.331 53.671 mo
137.975 53.671 li
137.975 53.308 li
133.331 53.308 li
cp
1 0.64 0 rgb
f
133.331 53.308 mo
137.975 53.308 li
137.975 52.945 li
133.331 52.945 li
cp
1 0.625 0 rgb
f
133.331 52.946 mo
137.975 52.946 li
137.975 52.583 li
133.331 52.583 li
cp
1 0.611 0 rgb
f
133.331 52.583 mo
137.975 52.583 li
137.975 52.22 li
133.331 52.22 li
cp
1 0.596 0 rgb
f
133.331 52.22 mo
137.975 52.22 li
137.975 51.857 li
133.331 51.857 li
cp
1 0.582 0 rgb
f
133.331 51.857 mo
137.975 51.857 li
137.975 51.494 li
133.331 51.494 li
cp
1 0.567 0 rgb
f
133.331 51.494 mo
137.975 51.494 li
137.975 51.131 li
133.331 51.131 li
cp
1 0.553 0 rgb
f
133.331 51.132 mo
137.975 51.132 li
137.975 50.769 li
133.331 50.769 li
cp
1 0.538 0 rgb
f
133.331 50.769 mo
137.975 50.769 li
137.975 50.406 li
133.331 50.406 li
cp
1 0.524 0 rgb
f
133.331 50.406 mo
137.975 50.406 li
137.975 50.043 li
133.331 50.043 li
cp
1 0.509 0 rgb
f
133.331 50.043 mo
137.975 50.043 li
137.975 49.68 li
133.331 49.68 li
cp
1 0.495 0 rgb
f
133.331 49.68 mo
137.975 49.68 li
137.975 49.317 li
133.331 49.317 li
cp
1 0.48 0 rgb
f
133.331 49.318 mo
137.975 49.318 li
137.975 48.955 li
133.331 48.955 li
cp
1 0.465 0 rgb
f
133.331 48.955 mo
137.975 48.955 li
137.975 48.592 li
133.331 48.592 li
cp
1 0.451 0 rgb
f
133.331 48.592 mo
137.975 48.592 li
137.975 48.229 li
133.331 48.229 li
cp
1 0.436 0 rgb
f
133.331 48.229 mo
137.975 48.229 li
137.975 47.866 li
133.331 47.866 li
cp
1 0.422 0 rgb
f
133.331 47.866 mo
137.975 47.866 li
137.975 47.503 li
133.331 47.503 li
cp
1 0.407 0 rgb
f
133.331 47.503 mo
137.975 47.503 li
137.975 47.14 li
133.331 47.14 li
cp
1 0.393 0 rgb
f
133.331 47.141 mo
137.975 47.141 li
137.975 46.778 li
133.331 46.778 li
cp
1 0.378 0 rgb
f
133.331 46.778 mo
137.975 46.778 li
137.975 46.415 li
133.331 46.415 li
cp
1 0.364 0 rgb
f
133.331 46.415 mo
137.975 46.415 li
137.975 46.052 li
133.331 46.052 li
cp
1 0.349 0 rgb
f
133.331 46.052 mo
137.975 46.052 li
137.975 45.689 li
133.331 45.689 li
cp
1 0.335 0 rgb
f
133.331 45.689 mo
137.975 45.689 li
137.975 45.326 li
133.331 45.326 li
cp
1 0.32 0 rgb
f
133.331 45.327 mo
137.975 45.327 li
137.975 44.964 li
133.331 44.964 li
cp
1 0.306 0 rgb
f
133.331 44.964 mo
137.975 44.964 li
137.975 44.601 li
133.331 44.601 li
cp
1 0.291 0 rgb
f
133.331 44.601 mo
137.975 44.601 li
137.975 44.238 li
133.331 44.238 li
cp
1 0.277 0 rgb
f
133.331 44.238 mo
137.975 44.238 li
137.975 43.875 li
133.331 43.875 li
cp
1 0.262 0 rgb
f
133.331 43.875 mo
137.975 43.875 li
137.975 43.512 li
133.331 43.512 li
cp
1 0.248 0 rgb
f
133.331 43.512 mo
137.975 43.512 li
137.975 43.149 li
133.331 43.149 li
cp
1 0.233 0 rgb
f
133.331 43.15 mo
137.975 43.15 li
137.975 42.787 li
133.331 42.787 li
cp
1 0.219 0 rgb
f
133.331 42.787 mo
137.975 42.787 li
137.975 42.424 li
133.331 42.424 li
cp
1 0.204 0 rgb
f
133.331 42.424 mo
137.975 42.424 li
137.975 42.061 li
133.331 42.061 li
cp
1 0.19 0 rgb
f
133.331 42.061 mo
137.975 42.061 li
137.975 41.698 li
133.331 41.698 li
cp
1 0.175 0 rgb
f
133.331 41.698 mo
137.975 41.698 li
137.975 41.335 li
133.331 41.335 li
cp
1 0.16 0 rgb
f
133.331 41.336 mo
137.975 41.336 li
137.975 40.973 li
133.331 40.973 li
cp
1 0.146 0 rgb
f
133.331 40.973 mo
137.975 40.973 li
137.975 40.61 li
133.331 40.61 li
cp
1 0.131 0 rgb
f
133.331 40.61 mo
137.975 40.61 li
137.975 40.247 li
133.331 40.247 li
cp
1 0.117 0 rgb
f
133.331 40.247 mo
137.975 40.247 li
137.975 39.884 li
133.331 39.884 li
cp
1 0.102 0 rgb
f
133.331 39.884 mo
137.975 39.884 li
137.975 39.521 li
133.331 39.521 li
cp
1 0.088 0 rgb
f
133.331 39.522 mo
137.975 39.522 li
137.975 39.159 li
133.331 39.159 li
cp
0.999 0.073 0 rgb
f
133.331 39.159 mo
137.975 39.159 li
137.975 38.796 li
133.331 38.796 li
cp
0.981 0.059 0 rgb
f
133.331 38.796 mo
137.975 38.796 li
137.975 38.433 li
133.331 38.433 li
cp
0.963 0.044 0 rgb
f
133.331 38.433 mo
137.975 38.433 li
137.975 38.07 li
133.331 38.07 li
cp
0.946 0.03 0 rgb
f
133.331 38.07 mo
137.975 38.07 li
137.975 37.707 li
133.331 37.707 li
cp
0.928 0.015 0 rgb
f
133.331 37.708 mo
137.975 37.708 li
137.975 37.345 li
133.331 37.345 li
cp
0.91 0.001 0 rgb
f
133.331 37.345 mo
137.975 37.345 li
137.975 36.982 li
133.331 36.982 li
cp
0.892 0 0 rgb
f
133.331 36.982 mo
137.975 36.982 li
137.975 36.619 li
133.331 36.619 li
cp
0.874 0 0 rgb
f
133.331 36.619 mo
137.975 36.619 li
137.975 36.256 li
133.331 36.256 li
cp
0.857 0 0 rgb
f
133.331 36.256 mo
137.975 36.256 li
137.975 35.893 li
133.331 35.893 li
cp
0.839 0 0 rgb
f
133.331 35.893 mo
137.975 35.893 li
137.975 35.53 li
133.331 35.53 li
cp
0.821 0 0 rgb
f
133.331 35.531 mo
137.975 35.531 li
137.975 35.168 li
133.331 35.168 li
cp
0.803 0 0 rgb
f
133.331 35.168 mo
137.975 35.168 li
137.975 34.805 li
133.331 34.805 li
cp
0.785 0 0 rgb
f
133.331 34.805 mo
137.975 34.805 li
137.975 34.442 li
133.331 34.442 li
cp
0.767 0 0 rgb
f
133.331 34.442 mo
137.975 34.442 li
137.975 34.079 li
133.331 34.079 li
cp
0.75 0 0 rgb
f
133.331 34.079 mo
137.975 34.079 li
137.975 33.716 li
133.331 33.716 li
cp
0.732 0 0 rgb
f
133.331 33.717 mo
137.975 33.717 li
137.975 33.354 li
133.331 33.354 li
cp
0.714 0 0 rgb
f
133.331 33.354 mo
137.975 33.354 li
137.975 32.991 li
133.331 32.991 li
cp
0.696 0 0 rgb
f
133.331 32.991 mo
137.975 32.991 li
137.975 32.628 li
133.331 32.628 li
cp
0.678 0 0 rgb
f
133.331 32.628 mo
137.975 32.628 li
137.975 32.265 li
133.331 32.265 li
cp
0.66 0 0 rgb
f
133.331 32.265 mo
137.975 32.265 li
137.975 31.902 li
133.331 31.902 li
cp
0.643 0 0 rgb
f
133.331 31.902 mo
137.975 31.902 li
137.975 31.539 li
133.331 31.539 li
cp
0.625 0 0 rgb
f
133.331 31.54 mo
137.975 31.54 li
137.975 31.177 li
133.331 31.177 li
cp
0.607 0 0 rgb
f
133.331 31.177 mo
137.975 31.177 li
137.975 30.814 li
133.331 30.814 li
cp
0.589 0 0 rgb
f
133.331 30.814 mo
137.975 30.814 li
137.975 30.451 li
133.331 30.451 li
cp
0.571 0 0 rgb
f
133.331 30.451 mo
137.975 30.451 li
137.975 30.088 li
133.331 30.088 li
cp
0.553 0 0 rgb
f
133.331 30.088 mo
137.975 30.088 li
137.975 29.725 li
133.331 29.725 li
cp
0.536 0 0 rgb
f
133.331 29.726 mo
137.975 29.726 li
137.975 29.363 li
133.331 29.363 li
cp
0.518 0 0 rgb
f
133.331 29.363 mo
137.975 29.363 li
137.975 29 li
133.331 29 li
cp
0.5 0 0 rgb
f
grestore
1 lw
133.331 121.88 mo
133.331 121.517 li
133.331 29.363 li
133.331 29 li
137.975 29 li
137.975 29.363 li
137.975 121.517 li
137.975 121.88 li
133.331 121.88 li
0 gry
@
gsave
133.475 112.541 mo
138.475 112.541 li
138.475 111.541 li
133.475 111.541 li
cp
clp
133.975 112.041 mo
137.975 112.041 li
@
grestore
PBVMPR+CMSY8*1 [7.97 0 0 -7.97 0 0 ]msf141.975 114.55 mo(\241)shtrue set_gvm
%ADOBeginSubsetFont: TBGAAA+NimbusSanL-Regu AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginPBVMPQ+NimbusSanL-Regu dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B854D088EEB7F5292ECB0543F68EFE6422AA9D95EF> |-/five <1C60D8A8C9B7EF32A838F0ADD872C6F18F8BC0A4E34F48B35143997141C18CFB9408A8718EED7EBBE8F3F21F3798538909C7C94F5BECA096FD038C7E1F0DB769BFC3A0F646A376CB65BD18167F67FF2007B81FBC1CAB702F01F57C4E31F3559988F254DAAC1F1AB8281F76> |-systemdict /gcheck known {setglobal} if end {end} ifendPBVMPQ+NimbusSanL-Regu /Encoding getdup 46 /period putdup 53 /five putpop%ADOEndSubsetFont
reset_gvm
/PBVMPQ+NimbusSanL-Regu*1 [46{/.notdef}rp /period /.notdef /zero /one 3{/.notdef}rp /five 29{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c /.notdef /e 10{/.notdef}rp /p 143{/.notdef}rp]PBVMPQ+NimbusSanL-Regu nfPBVMPQ+NimbusSanL-Regu*1 [7.97 0 0 -7.97 0 0 ]msf148.558 114.55 mo(1.5)[4.42329 2.20763 0 ]xshgsave
133.475 80.4267 mo
138.475 80.4267 li
138.475 79.4267 li
133.475 79.4267 li
cp
clp
133.975 79.9267 mo
137.975 79.9267 li
@
grestore
PBVMPQ+NimbusSanL-Regu*1 [7.97 0 0 -7.97 0 0 ]msf141.975 83.123 mo(0.0)[4.42329 2.20763 0 ]xshgsave
133.475 37.6077 mo
138.475 37.6077 li
138.475 36.6077 li
133.475 36.6077 li
cp
clp
133.975 37.1077 mo
137.975 37.1077 li
@
grestore
true set_gvm
%ADOBeginSubsetFont: TBGAAA+NimbusSanL-Regu AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginPBVMPQ+NimbusSanL-Regu dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/two <1C60D8A8C9B7EF325772DAA73F3C25ADEBE04C8170362283A6CB490C131F5203D4D9AE5635256B5304F57E15EAB9584977EA6B904C788253513C16D8C63EEA9555B3CDDA75DCCED6AA8BE483002CF48705E755ADDF63C886329965CF0CCC0E68BC87B8223E810A4592D42E707404F5A4F9593B53> |-systemdict /gcheck known {setglobal} if end {end} ifendPBVMPQ+NimbusSanL-Regu /Encoding getdup 50 /two putpop%ADOEndSubsetFont
reset_gvm
/PBVMPQ+NimbusSanL-Regu*1 [46{/.notdef}rp /period /.notdef /zero /one /two 2{/.notdef}rp /five 29{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c /.notdef /e 10{/.notdef}rp /p 143{/.notdef}rp]PBVMPQ+NimbusSanL-Regu nfPBVMPQ+NimbusSanL-Regu*1 [7.97 0 0 -7.97 0 0 ]msf141.975 40.304 mo(2.0)[4.42329 2.20763 0 ]xsh203.557 120.028 mo
292.733 120.028 li
292.733 30.852 li
203.557 30.852 li
cp
1 gry
f
203.557 120.028 mo
292.733 120.028 li
292.733 30.852 li
203.557 30.852 li
cp
0 gry
@
203.557 120.028 mo
292.693 120.028 li
292.693 30.8919 li
203.557 30.8919 li
cp
gsave
/1 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 148 ]ct
[89.136 0 0 89.136 203.557 27.9721 ]ct
snap_to_device
<<
/T 1
/W 372 
/H 372 
/M[372 0 0 -372 0 372 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [cf /ASCII85Decode fl dup/DCTDecode fl]
/O 2
>>
%%BeginBinary: 1
img
s4IA0!"_al8O`[\!WW7C!H\;As6]js6"FnCAH67k!!!!"s4[O,!!WQ/"9\i3"9\o7"pP8;$4$kA#RUtI
$47+I$k<[S$k*OQ%L`gY&.f<[',2,p'GDB)*#ok=+!2RH+!2RH*ruTN"pbG>'+PKc)ANi!)BTk9)B'\>
+!2RH+!2RH+!2RH+!2RO-71&d+"Sro/1`>'/1`>'/1`>'/1`>'/1gh:!"fJ;F9-Ic!>,;5&HMtG!WU(=
U&Y/n#6=i+!<E0#!!!!!!!!-*!s/Z-!!`c9$4?k7!WiH)!<E3%!!!!!!!!!"!!36*"U52;#mq%O!!30'
!s/T,"pY55!X8^I!<N?8"98TK&hu[L"qtDhEIefZOeE!pYsK\O;UOGZ(1QbYEe<g-6Sq`)U9\9M_DO_/
PG>HB(K=pe_p[NM-A)U3(`A!k77O)[<mt%s)Y2q[`73l?AT`]lV7":mjn35/L6e^F`n';G2b-q^GDDN_
\&[+`pGb]GBR#?#W49q$kkHSe8QfbQM4(?Rak>qS.QU1*C3kc+Wk-@,lM;(m!WiB(!sJi2"U5)8!s<B@
!!3`7"<eC45m:+!@3PnqJWV^]Z1&IDdGZ<:'iJL]nM;FI6\6):;^J/JZGHifdP^#PK,7LN#RLhT)(%71
)CK';<B'KDZbn1?e)U%QPbb\)eE$75FbQ*W[Dg\XogVtoG(u<[[`6n\p.&1sGDDN_\&[+`pGb]GBR#?#
W49q$kkI/0=_W/<RAma=g$/;^3_ERjHA\/k]#ralqZ#7L$j-M1!YGMH!'^IF-ecm5QRBSk3o?m[/DQ[i
1tpQYBXM9i`fH0;)PHJ>`=Re]\q")#!iq[m--ZQEI[P'RD6GZ.L7b>]1aCN7ok.fr<rV3eZL%">Mu9X#
]Yk+.SYp,kGM4:`k5+)H,P03I89T<M&JW8<'shBOmBN!EXc/,a6R1".r&Lt1QWL73SnLCe3MG!9cFC4Z
/*sE[?(oBebN`X3^YOk0FhGn8/ni0`U!sP-[KEh@k.<$_Z'F?'jrClGj"Y-cL_\r)jrB2BfiVie2Itc[
b+U1Vg?Emobss#oce1>,BR,A%WCUsDUM"#.4$&=m>8,N&WQp8m?&k;WqmANJ_\mWbMB,[XKXMMR[8XM2
OLY*YF_7Of_oQ,4@[u1%TZeCO3#N';!h@m)OE&T'HpH.<q.)'B<uHuQfatZ*1u%$%.P63jb2h1o)-!)7
\7H<_cmjs@=[p\;,-736c5hoXY*l<8*M*nHRB"O?ZGKU-bULK@E$;gSHmP>=Q`jZjNa/1p4HY_r`aWKu
1nJEhU"_Dm\@4_uj#Nj`_:`P`Y)Sm/pt_eeMO_!Yic>;nRBk$r[qj0NA2NIcgutG#e`s'<9<&oKF0=m"
<9^U\O$2*i/6crVZmLF;dE7g\ZY[U@h=I>h9Ka_`+9@L.>.='mf]1$n[Oe,aHWL,EN:I*^ar(\QCr;:R
2>W/b=/s=Z[Yk_;G0MA6:HbeEZ^idI=#oYl-V#EHA<t9o)9Q^S]4N;!/IlK9_foaJC8u>^Q4A'uW[Z.C
OE0;;76-3f/ljtc#;Kj--5'ThW!:+>[U4hIj\V/<D)C&(DPN@)i-Zn5*>.,UC-kR@KS,h5L16]3?`f6$
;%cXWd:oK?l/bJObQiR&@?,6G*7Pb[]J=)9LEK)j^inH]aYt.k5b2(DG2"]kbW$JPSD(c%gGR[TLC-Mn
Bacg#20j7\_u`OW&q_m9Q*rAQ(FbU'6l/cP11h`sJLl=i,$>,da:QQ1^u\LQA0e+O0_3'&a!F\FXj75:
%+W_eY<FmXL2+laXNc^9$s=;IAfU>$;97WGYJP,G?>cgXI4S.>OHPEXW6BXZRYkfoF&AorZAbb$NLHC4
Xj+bHQ'LrHQNaqpo.K\l(\6uaNmg0pO&&FsSO-qec&S8.(C)ik$!$c^):".1Z`h,J&(RemPI>SE8^MX,
I$DQ,/N8eRB'0AEG?SiP,aTE<IqS8pfP4]P4^2mi'`FZA"LTYLXZFq<c8=;FbWOSGfBP4Oau%jJ'\bKj
nlr$AjgJ/sPQNbrZXMCPDOs+,K/q1MCpSf(7&sq+/h;"JA5u[S%(KQdGuYTc#;.A[*^s(F_97h_a#-,'
%WHII2:]io>BlTHPK#Oi18=_'@Ai8GkN%A_C,:.2Po!5qMI1E0,rsCeo2DL1+&a5q[&H-"8#4>6@6.".
Z*.ur_^goZl>'hqOu\r#kf\;kG02RPEUma:X_diNRdES=S9'kBBPi!F[V@V`Q8,\'8E_j8P>Sr>0e*=M
BkMH2Kt]PX'pjUA3;AEjZpmSYfGN(??l$QEeT+nCibTTfi6!i^XdHXR\M0JP[UA48k$lE5YF=8!?%soQ
Wqh44:?LT^]LeKrdlA#chl2_8ZTlYf&2W38I*GY#%TOZ\M+0ia1CGfs@Z-7bI)4!XgLE9E'':J3f%h><
]@G((!%?1b/i)L_V*WU7N0<Rr(prp=V3]J0#EU/gGU#pA\kRBccF[]?%SCarjeSL69]UM3G!,E[@arg-
9cCdQQcE"ba&u/3*hBPsQ'SZqCSl*KfgPGdNL*RX]sXaFD4#Th\61T@Bl:RtQl2`<0fu708[U?URiSen
OU1c8P7)and]1#iAA[G<b,VS2)0!-rZDss;]/D$$(.D4`JWh%BNbdsJV@GkTM8KV#Uo)h5LLT9):iVt1
4K6nENM5H+K:ADi>'4!<m[%0^F7#I12QE9-m"(J?gGTVnYnO!u:\M[X>#%IR<]'32fl`/_&iL\84gS@b
=)F&<BZ,p`20lS^?9ARh4MdVaG;:!n>SAMGgP-M``+Dr%BjA4e/Z)@@KP"1/j3B.o19n@\=AEB4Zl(h]
'9*'/K4P_7h$g@7o+r_i-QZi!I)4"(F"uia,g8:5S>^0=M)'p%>GJ-8eB%VhQf_Ce1Y8bgh-+3e<U1qd
'$"[^7Cf=DW`Ui8/&&\lq%(WD7AHf.j7u/L%1E%,_tc\;0)F0Pq#4TeR'k8+988fkkjld5iFE;8YiXU]
c-p399+I@rhhE5uZPa`>^Mh"3cEE&&RXZC2%^O_ZG,b.P*O7jn'3Qq0%R3l,b<Hu'_eBJ"FhK;i:JJ/<
;,PT]0QQ*KaNfn[]lRDI$^lns+V&7.j*"NOXJ[q$U?lkk:hC]"R1e@A1+QI=7P`AQ.59!D1N9Y=7FsGB
E]X-.e6+S;M_fpN&rX_6bD)^`ic<"31=Vt*<Cl]t/tp$$'idrCbFQkrKiM&/q/\RKn>_/c.H]I0N\-aZ
Q$CQF'1Hq]b/RQ70[.a>EABgKL28Q5E,pX[c&Nq)jXO$Tbh,5"Pa&jT]>J,oQ:d[#nM1_W<m5:;D2q%M
q27?f9JWd^R+&k.*6j8]V1H!cDk9J7A`GLc.@u2#c`CVMS66"RC1P+j!gCl&R#>@3W'/BejMj+!j&.gB
q([kr`oOZo3"@g31fQ9\oua0:RDBsIE]JuB1`UcMdhi^l\ZX1,67!1fAeagB&@ME@L/r@O(nJHeA)f4q
d6Z`TNa#t$8eWTjPDWDVKFGkgT9".=#kCgS>[arn(F7lS>\/t,n=uYKVI8Q'`i1YCq.?6tNgu&>)&^[G
VCp=m;$i\-mahfEc$[^*!4nRhPBRC&A[%cnF,%hR1G]a#9TW.`c%[d0%SUV2\XSX)M*,QGjl7jW`o+AM
.Rl;\\W;q!F>9dDbWN4Pn\J'l@-!N>N[fQk,c'Nk/^l3/h6OJ&jj5SX$;Hr@98/TY5&Dti?'m%SD/^:q
Qm(N.Yf9p'TLSa?$O8%aA2[%'%V&6bJQ)k&PZqTu"-gq;JkaiI384Sl>`XW21l7s]3jFlm?D/PTR1PQ)
<#fJB[K;)Kd^aI(i".ZS)14f6&;N$5*3_lA7C_G:l\qQp73-4lq*a6&jGIqjh(o-mfts-43jq6_BltEL
qP'<6fj(%_L1A;jpkN;b;AQ]JNM:*%K0bq%E7#r:iVM]g$s:FodRh/c_E0]r.g3U&8B5=34!Pkh;4-$H
ZV6,<c'b[i7B?pUR79!'eXCZM@#71</O\F?#V2q;X!UnZNuJ!XNT0BeGY:ZjONY6Bi_sF4bZS1ER+0f1
58Ha",SZVXDENq!i3\HW1ME!n9I<@U\7JSjYmZmQZ3MQW:`RED>aS*-3K5S$aGem8Q2"tEpk"ftbFsm&
:23ID3ttp^Z;Q)'@<MBF=D#_bWRp6hMlh%])&u468B,]nAmrK^8%qOV#iJ]^3E39eLbAiZPf$mdl=:<k
E4VGN+H[I=#7sZ<!M\=,n]SP$86K@]R?&hk,sj,ME1OF*V:Pd:Plg%,.;\0&@-,3-m?[h6!9g&&A/8$4
g<%'+O>tp&S_;-60QY9I"!i(cm:@8Y9;ojIUQJ$@".IH\/b"pr3K#:$prGM+`W]&QS%'?"M]$6!OEXT[
B$3u/Zu\hlAK0dl'K0S0V6\<*AmAiPP8GaM^DP'0m**L\`nBWH@q?T=di5494+Wpi\C/;BYc`$Cg!dIY
_U3A+F'?5l4U.Af."t@DA^gs%MZHf9R%Kc^jSiDd1$t:ee-f\I#*dds57VYjjhau"F(L+WJX7:=%*unT
_T;s:1G0;[B,7erCSt57(6E77_^h$.>6M`H+"K;WAhsY/j_%7iNBhF3_>.!Po)YT]+f?K7c3hGAOUP4<
/=*O&6oJ_MlUp;51/j5rG-o;VNBdqC$!ZY)`hY:LEplX3k(5fM>7opkUaNr1i,Er"4pcEA*\^BA>N:7r
#oJT1j5U=4MB'VbRk^7R!6%8qKfWgH4KW-?pCYiaZGSb#;OaB32Ah@;Lntn7Q-@l@f[BM1]E]o0A8f0p
'.BVmV;E_l>^VZ//LK_LH!oRlJoPRGYg%'%<oM8?RDCr5Y%mQ:.L?IAA^")+[L'If\4-OsBR-KX^1C`g
ek%<-c,X,]B86pC&LAm:S8Z,XEP]f<"L^o$0"I5aCur\YbssWr@Ul^d)^a-S;DSh;fXQ2O]-Yq8"$(hW
2/._BQkqa=dE>SZZoIFn%!fq[[5@Op4[#O)!:-'^g8B:Q95D6]_u.?[1\,.H?jOr\C/)(sdMc#*c(:P*
lSIei%dBIR5&5:$nBurlD/eRF>F#Ui1HukL/<O%U.Qb/g>"pd9_V1h9>$dV=E*H2_92+V4jg!5H^ung;
PK,3m'AUXK/U_IuEaOnkaRS?$>cI1R3[,FMja+ue.$b>Y@kFl'jY@f-dG8bFjV#a2dD]mSGtHOb@+/>/
Q:(8&rr=J99+U2enr7rtIl>70?0UF)W<Z,EO!HS6%\;IJ+3ZBgmMPq3Hiu/A]GWYMjr5a1luOZkpMo@1
]&e8#hb>Gc,aX+Jc*e8Gi^kcWY&#hJ@>#q)^1>/BYmO,M%SXj0MC.1so!u`;,W8A6Vs0S:+Q6m`D/F:$
@H>IH(.]b`h,%]19E;Fj&?`KKq2[*h*SP;4I$Aa3G=0Vtn!P$^;`M^[]&r>91@a@EET9ZoDL1c>ON-Em
`g8j7`RcjJ2KGRRB&U8$K*7mRcQ:4-T-[%QI\;![Xj%m>DO7jNa*+/WB9#'Of#uN%*nAG7o\H!okqRlk
Fj;)9FU*,rctTYLcKLhj5]]On9r?>^"j5?`JBCX1nj8V)A8_0NP!HP1oO%iK!k$8=)M;pc<MlQSM4=Gj
HZU1-1kh'5H`"o&Ro,31*+mq.Xk%(uUtN#k/\oGA8Xc'>M]K<1B1Qa5j-q#*/]4/HJ=c*\I+i#VK%)Og
:blc"DRlAK#c>CJY\ID8aW1AWqN3JhE[,tPaeAbm)+Z*?ZZE!XF]^V-Toc&0h_\N!_X+Yld0R/)2PW,k
Hl/tkA'J=S<BD%3X`pV/Vc`!h,CYpZX\$qt@`p!t@4`\@*a]pl9XN%]o"h>@3bH&fR+/B%G.g"&R4/!E
!0$7h/`'UMAN(PJbJ\UEZ37c"Fj7pn\?e`0[]XMTmS4N\HJNXTLc[.2-^jQY+jYg<i_B!](;ghS1@LLN
/TZe^D_Ff(S6S1<9VA"oa.+,@_&4!-;(QPs`iLe5Z\bm'C$r3a8Jog\?$k\<`n_%pIEgALo-P=0XE]o/
Mke!t6Q;GS&d>Fe/A+>_,\,M.hKm6u'8F^d6Y9&ha\o[MeIP5o3TI_/dLAIe,IPd"EK/X'U=Pap]sEm(
lanMbd^6=VFj;@9/gnF#]fjeHH[]#-jp!qkp"FgD<]),Cn!OCbcGT5-,Achl]do@D(C5#%l*aCTjQ@P)
*YYNa*G1dPbUPDmUs/D`gb_j5N9N0E/a%7QUbm]_\mjp3!=nq8^`?Hd1p'I+l/?Nh1m6VH\;]8.E8-0X
P_SbuMXR%I(cHChij>/&5__A_HnapL_Zb_pW?,PsRDH4<e*NIU?]r<S`Qa$J(FBK#>$TkISF4!(3-4_V
nf@=afD8dUMfa&6S@5mQ4YDp=U6.7(c`!acLBX]6o3EqKmW<R*2Ijgf?L5t,AYqT()Q&qeeen!*)OD@g
Fepkgl5F5bBhZ)ug<LJDAA!(L$;aKD6t<jE8F3/8A!qS:]8_oKf-d_=FMYt`1lD)$c,Q863*>kCl^L"3
cO*B#bfI?a6OpY@DHDUr=!joD0HA-&M_L0JW%s27)IX8A;_'S;0jj6ni8J1]dn>LS6r;?*Q:<I1MI1?M
A3qnL32Mh\f.p_Rb],obpp0bLa:[);Cu;lC?9tnm;6qb#:@"@>?d`4LEP"9ZH48`DAFiP>]-t!+1X#Z9
F`1jDn`6TqghWF';fAFS9K=iP6@)];(d3VG)GIV));i/?(i8OK4d-mMj7et$RN"5TN-d=l)64V!EK*]>
CLOM39ij5V@n#Idn_FX&cBgsIR+6j@RF(1kUXXrRRCgqZI-=0!k3kq-Z_[GU:`SBW"-8M4(r)5ek4\l/
fO9Y)EAtmY@0l5dZ,:*5c25>@1"iqOADY<uZK<KBZ\+\tcUDTt3N[PglEg(mQM],j^=2B74$THJ#gPA9
/oOgc#h[.<3gmYkSdN;Wc!9gWm%Y#Z/!(W-A7;d\1Em\TB*Es#<$pX#$V8J$OePZU7UI-p14rQJpl'G7
nU7arj+DQu:/j?>:`RZtKrS(Y"S,U(ZbZuVG=lblCRZk:3>d`$f5T<OSW6Ho.A_(=f"5NnB'-u\**R:0
-fR%/Wj1:)oZ53#$"ZRp"Zp9NRma-3N[bI9aeD[4#u$>`-,a;/CIl=3:mGg[M/8#7:EEjL3>ghD9bh^n
132>!0;7oI]R)SWm"r-&pOas;4dpE;AlGNp6Fj,HbL0ZcH$YmeNjJmJ0%iAAE:[VkS[6O%CgF`PA"'5U
jlKb.1@4ibAP84-e01r73+V_$H)/Ug`dW3#B="1MCmeBknat%Ae(M[c4df<7</bG$MWX,FZe66T>hWnG
Q]]nCF?HH^9b^oH<`$)76)G-Q:f-VMXZ:Ma_A6.SDKO@*=-t:XnC/H7kqY5\fWiWc>1[TJi5r<jLF"3I
(0,FaB1";s`u])^(<>GSABnJM%W.D6.nUQ20lpmY_on=3BeaT03PBh9\/@4SquW;,G)<hS\fHt?:3%9:
>L[>_8@33qoba9Q#";qqXd1!_puU2CGl`\DB/[q+AamRc/?9.j6nu&A,1:MZ#,=)5bG,9P8ZLj]=Re(D
Wml1hF6F41I%.uLI6tX<puuK6&t-8mh_'p=7g1;#kEe\N;)F#jf9^<^3@VO"Bb&j>HY&d1B[eU3)?*Aq
Qt?)Yl_`.?iIL21SP#X/;mo*W?ur=U8e.4N<^&"^DbeqQdP<@eE^EHQeBBor-:2Hc"aad5fnlE"[]aMQ
1Mqk7'UG?DFE0ARb+nV_Ml':hD"4r%gKAo6CoVc(C<;rW8#G"gRqAj(QdT/O>aHd?VC*9p&_b[FF*,FN
lVgDgSG'lRhSZXq<37]XVK&&u_Y9UhSuF<TYcW)m*-n-^:T6t<:&'b)o-EMPc8qMYp6H\%[*!$JM8dtZ
G#$tRN-SAGF*'If<m-lWB(&<Jjn60d$RsA^8IBb1<7&s\]fs`:53a[TBnfUQElQU3CRZ;(Bu%oLd'jR-
)77k-\6MU6Uor`Qk?YE4MmOmR@i/'9jO(!Xj7m4cHV_o!:6l>&iWkP'P<GhQ2#+#Z1p/*O5DE\/m2I&!
jgoGED<]Mcdq\Q'8ho%2(oDB.\T'\_1jDkP[511M_o1uMq05aE/nsn?mFpRMd\*'`V4dC"j/m7NaSnQK
QfhQFE^N8h:9N=D11NsN:8QgE+3UqZg?4V9&9Bq!*sE]9`C@1@gAH$VT?=f2jV8G/j@9.LN^W-rJ^Vt-
hXd9sb%HU%I$eV&JFfXIbj`-+'TGb'?*b;mNYV_>;.K!\o%-e`!`se<GRUP:e);*k7!K,0]mM$mWI&0q
[b-rYZ)mZ`QUb%lGp/ulVejG/HXnEnGCl61Ea(7U,7[M+OIFW/[N6^aWP,ulA;&WpM@F4cP8RR/AV/*S
R3RuZb_Ukoiu;Pi1MkT(ee?dW>#T7eC:!83=W<NLBUie,QY=\3g?AZSDJ>V:BgV4P]0:@.ka6!%YJG-_
U"!"^TRPRjn4[/L#-eLe5Wq=?4=/65h3HD2]s,Bd--"94YcYtMVInc8mca=IRmY9m^!bi:7B+OFB0!WR
6Cg;cg5BRh&9ZY5R2MD!;i<Whd[?1Q;aJB<9NB8GX5RhT>?gc>HY%i:CT@Q2-*O=%JB<9jf2R5IQ[M_\
P^V26Q+YNBS6HcEFr:tIGL[p'6K&Y@ATH@A2@V5j!gu`Y`n;3uXq+4'=?)d[Rt\U\R9@nk@+J8*^/fS>
adC\g-hk\'cLPR)m>8-TTVc4&\4`+1788D9D>KYtdaMURgO?"io'F#5HC-oL^,tI'eW2AkT26Oa';X;%
D5ih0^/I-.j(-V8A6O-53cCJRf]grO0iKRN)kAcZWnGj9,><jG0PQsb?=FiC6IG*+ph$!BW/!;Q)dhg4
L1;6,mrAW'`YJ!\*Eg*l/O%>r-1K-KHBR=7$BrE8l'^21QO\8]5tqXSc&NdG1>)g^<6Y8c'GV9&?7*jP
Y>2TPf8770gBWV--B55mZ140:\SXc]?oc]ULka?2D4(-A)_eQr95&p;RAeWs[W%4jF@)DACCRn(.&:Z+
REXu*DaU:j,9qTuolr(P1qBRsX:JRajjQ;=>*?ItiL$B6D94i693I![@af5TjOBVqGKl]g40Ho$e/bl6
K,$G[q/&Q\D"0i_IRtuYbCHK+D,W"FVAqMH>cN(KS8h`,a-bO;<93)g>,&p%Gr=+56Ube/*ncH(d\G(/
O(\8Iom^e.m5'.C*mYSC@>!;i1%p/]=sp#?-]XV"_5cL6F(tDK*)ecLH#Ymhj+Rpf]Q7qB#8=5_QB:Q[
(H)iOgPU%bV><W$n)Wp_$-@MY$;OYdc=A]O.](d6`Q=dMaQa%48Sa\r1mI&g;Q?pfGr4qg1Th7Q9*99W
2pW`,ZLM9Ba*B$U^3r9u6CtVf74-Se:0Deb9Xr&$=g8<G3]tW2k+>Q`k]LhQqa3KUk;TQskB13ug8Nad
4abQ=dmhdh;4R'%L"p+V'mP\R3DI&:&88#a6RfH"`[OKG1[sHX(0k9:f/?_X?%-H1j?]8/'6#]0%-a64
;eeZ6b`O3[d4e1.C9%ogN^^?A&B`9u[HRt"="L1+Le*bB2GBs37dB31Ad2t9.i_R<2-Q!qQ48s2SC2.\
DVn5>7&+@\;2X2D%(*+>R`q->KJP7DPRTTi3QfeGF>VsVH'I!g2\m<O11a?qc%[ce#$IphRBVU-3A&E>
C*g-MbdKbd+NuCc+j7h)<RGkfW6@W7_2&dl+O*)u8Ij>VS/#Fi9\*b)9&5dr-m@AHR98!3gCB<C`f+MQ
%8<n@c)(Ia,uL3CM_Qi>=,6tfgK-G\#5%LJh3+8LGh5"D"s@1UGncS0m#(8&*ZZqSZ&'1)hk!>cbSjU4
Ohb[3)rb))6RJ*U_GMI4[^mfTk.a*K1ujcB;d4N^1Jasb"(X/$;RU?s@Ld!$Khrc,S-,#_QKsh*#0o"!
g,S6W4qjP]8B.8ePbUghMG)3C*5fof3'$(=B"BHV_blk.;%Ggk+m=4ZT8'o"lc[Rh)/ZVBS;t>X>p;E\
SDJ3jef%QC0F0T!JgmHgPV1V6WD0@[phdpl8e7Cb(@-$>K8eMm0#&kGA^-5a1_g)&O<fS.E(Wa(MDC#[
<J$1.aJEiQQ'i?oJsfU*Z7:d"H#:^E8u\9G^q'5t\fB8`K<`<?ASfq0`9_JS<=P</_WJ`dI.Etb[,ku0
=UZl[b-@EkZ/TcdO\D:g`s3N(=AEDD/j,rrOUON\\W;h2j!r0>h*nmL.2*O9Ut$+G1r(;3$>,&l.6FXg
@]<).<K_C3EJb@)VR[PbgNeH3=s-a"n4HaH[8DeoH=p+.jQuJ!i"Fe)q:g(#jRO=cC=3PcaKB_MRgr2J
Ha.q^gO/:*isEU'Pl5%d*6[7Sk4iDJ(A#9lY&G**Oogi:.9r"&3T)@&aUr7cRk\0qlCo8IWJ"gERlCma
.ooj9#"iqkg?b]SD&:C;UUME9IKr&e3g!\(Z<G(Ldjn-AK+Eb,b\W_uiT8Sk3O5b:aJCf><hh7XD,tFa
\ib@"k<5r4\kPSpOkYsRRasgSVj/K,a,Xi>@3sW:b=\A!n]X@u2p'2[K18/eL,sBhQ=Z$NQ&cLe2GC,E
F('q?iFSIA*6uJO_T5R%N6]FH8rG<.$65fR<DcLl6E^hlLC.5q0Gl;4ET<<V#mF=2AhHbp6mSe7Ql0nS
R&6sERbZQNr)jb7ZX&n2T8t1hCr;Pd/id!Rb.K(I'r'A0j'sWu94dV4dj_@G11:BD9kcV,Mb0,5M2Hnu
:/R0+n<0dkf4T`,L1lCt1to$+gJ*eCNLDFg'(0l;5ZS"d2-DW&jR"\b!'&FXN[&D=;s@4m!+s8IK\NZZ
Acs7>D!CR/Lo6coj\)`e>jZkn*1f[--d@]eLTYh!RQ3E,=M<W<SE]Q%i_%'/7r6;\SBKS#D&MHa.`cdI
aXr_2(lm?_^JQ^\#"-!FZ]F(jIohc67`mbLbq>b9SV@Ko\ZX&93S<l)j-9=i\&3KAo!K"]r,^ISPe>h%
nsZq7>iL4Yj,c>!CR8^<4q/mgVV."n<OhYNE@.!uqGbZYe)GAF4sXmda"VOBi_3uWK'3^?N@bUK%8AGk
Ieck-k'rk*/q*:Tan3?:DqD1?,=bF&U>,>kP8GaMjgL(K/.e\b.oU<Ukj68[L0+cuS[*";]eVo4WbjmS
aPsT7Ip(Y\(`?7fFh_/oe*OGtNon%H'/#h"</lW)k-I5UpgcdfB!XBC3u1h-Ct@^dkMsXr2I];mPoP^m
AOdDHM!eB(8ocL2/<2V$RaQ6O_5:.G\R:%mS#_<q*,UGQkDcc-'c$<N/fSi9j]+l.>G"W-_[`E+em-bf
d9EoqX//ZO?r+-'F!7[=ZTd%Cg&&*:m?F2YcG?0JiF^Zn6H^ZrJ"tFjV:B<t#;]FBI1@kGSCV8YP>N't
Fa=Lrf'tKlLau`o1!Q:MdLg=[,IUcrCu04!NO6$mFNf..BJe$eVtP:5:hc@m<iV[:\L*D*`+M<7e@F4N
nKO,Ydcr\Bdfu@CA'Jmc9:q8?]@6JrIkojUFL::=hhH4tg+,;A@I/jkQCTe%^C83(gUpfq-eXd48Z[11
c%[:gj6GQ7dVtm,?V`T6I%DR8OrPoVh=maOo4NtW`6/o[,d(EkNIEP$1?5(;1-/')*aof\6gr2_PPgo"
,cqisaSi<_/!joE0U@`]d-CPDC[oVokc(;&H:Pl&bJ%K48PVCA8BC3ZGKad[VN\<k[k+>pOQOJ-7EmU?
KH[1TR?NXHR#=7'EDH=r$r,-iBLf_/l^7hgE5JhdDq><5ZS)Iq%JJh0UF)P7=D9V"]WF-;DLF<?]d]Hb
Em7(K:JJ@i;Cu65=`Cp]ZDn,Q)<,]\Q%(?\j)#YS>TOf.g*\.#YqoQY>8T5c[9T)W""..r^rM;eYrM+q
,@U/B@((("9>n3[-`"3GlD\`oSaqV\IIqE;\sIhTh^UdWI2`E)f2dmW^(K%&nj2Xp\ZIe3q2p`E/#,N0
6MdXne]igh(CPk^=_N(+c*j5J3pbOEP3]</\[g0!(Dho\GWBrlLs&@'VP:Drl%:=WK.dfk[]uY<1LI-3
m$O@gRDBCG8nN]WWcKlPZAaepct]t+k=qdA7i#dG3lc<>d]0BOXi[Yf)"`a"/>r*!^Q`*hqe!,SYJ3#5
5/s;<@pA?L2HkR[Z8ZoPT$6.5OAj%^F/nU*G85#e3pe!r6)a]=cL\>Sa%nXp`PTLb]>%.-q:Opd>Af?8
'+V_+b1GYNF*3C8DYjp,d_F8'&bs*\b5A$&q(7_0Rb;?N?]J-M9=%B!'a4NV<96jS!$&etJt6M%/M\7a
c9Q<:m+@k8Cc%_ec-%uTZ+BjqUrFaa?t>6N?;=N&'IIR,7OZu)/\.14bktStEQ'E<\YXMolu7#cj%F!s
U$J+$`oY)F+7%f#>b?_VB7[?<$eg`W=$025_OT:beske+Ceb1N8bJ>@VYR+>@V@!?1QC^hD#!8,'U@21
[j2sG8UYXs`Q/[0\K2IT2-c6#%%8Oj!s2XR/.l9#eT,+-9U[Q!$uKTnElj7u^u_DR2]T+A>@Z]l4m*m^
OW=Vt;5d<.8tGPJp1KRB)V!'3^Y8U+_:a91a)-9hYC)Gug??JsE7?Dq-8ZIbVG_Wh\Tc4$Rt[S*Bftro
E3OB#>UM*T.n'UP9ZG>UB,K>\./(ndVbsdeK+4&M;<EL4W-;EM#e6YTF'#Acg0HHd3:icmC>J$A9WYL2
Y:cs0j3k+&ZCfEf[sh<YRXf"IC;qG*f]CQX;+U\\PF5N.nAmX2DO4gc\Qt5=h3"/jiVQ[c>8PhFg<Wdm
ITK;Wg+fXR^R<u?4S2>R\o$fdh)sRn\=md2UVR2:dpkq_[!<\hk')TeZLG:lf\HJtY#CZ.c9?V[1;,;d
dsT\\+R+#FAf=p>"+8S\MkSY>PLq`Xc!GAS1QBk.2pGrI*F+QD65JYTbe6(dV"]j@k0jl^E.j,>8lmgR
`S"[W:H[MHbd^/U59)RJ)87`6D[t%I)^?rrggsEB7S'Gc%pEQT@-_mQPNgiN1n(mZPraS1Mc*K0,*Z]?
/=c'H<!+j$2^Ci'A9cdH2,$Ef`M,-?afNIU1>'^MKr6MZC62V>pb^)ag6n4d(==mj\=S=/n6p(oQ/(3D
]B7EL#&qUsACpH:F#k.]Ease3g4oQHiJ"XH>dsCpOZ60V,3$2;I&^<&-]4%jc!891#9Ha<F=+PPPZ%oY
7_+/;8HR:11LH_k:+1"`)WmenP@nO+a1<lLc@8u^hW]$T,$a7f\XnRJM&.(C40-To[+JINj-nZHh52_5
oeO-tr4<Yo?dp$bcB/h5q$>qi(2A7R?OXlfh?QQQOPq[5"(RmgA!=77p;It\)Q[K$4`f<3Pu"#qY1E2/
2*f3S>kG2Ea>RV_ErqqCW`qVjF.GLd@I*Qr!^ZK\k'&t05K"9&r)$#>$Wm!^S>S82:-O'"R;S:-j,[Hp
l6[MmWuu#C<%UDf1tmck6)p;`>'sq72&YQ@Z^oRGABdkp\E_;+5a%f.Pjb$OElogWnt#AhKXk2X+2%o,
cc#2>P`FZC7srU;-Y&4#(5JJcdCZ,6fa/lOaBX+HO_N1IVJEN[eS6GRoZ2icF8F[b3rFVe4GGY^k,V;t
Y[JglZ(0;)eH]`F9N;4.0Vtf[>]ds"9]SDp)?*aFA'6*q%<B6bPfobj2+n6X=#)"f1eSEa="f;)dk#8P
F"8;%)K8&;V`$L]*))KjZLBOQI,!o,/0W7^]Oho92Y]P80+^]m,]6,"c%L7`(uctKd^Lj>E/:C]!D9W>
C,a5V/0t:a>=_IIb\WD]1;u2[@VM3T"+ugbetTOrDP5I=;^g6T=es=D&;)j.jQ>EY-8Crp<46u(B^Ue7
B032Y^!]=g&C+We,4p1PU8-tCk,q21K1c@s>;8LS_%<Bf$^8F?fW@\`BpiSVG"kq\;gWHq#X0+3iK9LL
HHe\tTrpq[cH!4u76FpkbSs)kj5jP<m_d/a:BT=Fm=>"q`Li\*H7*=i#0e&(n5IX*/L!McDo4W+)NaU&
D-.)]d:D<]n)9\LRM>*Q3>t@iB^uDmpglI.,+:<'"YspR96!\@%+aUk#>qGLK$-"*"orM/NCKR%D+7_\
Nlp"Q(!Sq;3-En59d,ObX3Hs_#aI`e>\9i]4/D21qIu^f8UV[cgYnWN'$'HM46FQtSXp]EQOo`Y1LVl+
N]HH\&2u>0nVV0D"X[8nXB9'm>_8J>\H=;/m)c-XW7:)V*EJn8au'!)[+dT9dFJ>4`Iu>mMB(^MRd_?3
QUFFp+??1Bg*,9\ckTCYbR&HS[kqb-35BK'Zph('#*p*$AE29nj3L+[Rmia4omjQYdM7`_A`M;G(4'Ge
dH5%(89&:?.VskrEG>T2QN9pF1M<W0*":JU9/!'mk3km+(DK8ha"QI7k5PDaKfM,'/KhVo%!,j9LLl:!
5e(]7Gi[q;.8h;=)&Z?Z;JBkUfo)!1b+2[f[UE`"^F;qF#>EZ_Mi='sl'cG-[h>tTen6Ua&;Z9WT2]uW
\m`0&/E_/9qao$O(3:DGUX>ePVK83/DaU=s$*0:ZgL6p!nkMNd#_q@tERW4i@XA!AB*p%C3sLf!Fh3Q<
KI"fIl*M:PC$0WLG`qBG%:&832^\bkY.d#!a)tSu/U#FcZh8iIWrc.-f:!gsr&N0am0J`T7P+-;Dtn[#
nGYG3r1b>-0Cr+D\'SgGBCX&=Zm/i0nnM]%EG)'N,,6iuCSP.i*1:D;gIh]Idks/YJ@Lg',r(/0/o*7X
D'B+`KEEr?QJ2U&(!/rj)*nXLQ*+b6nheEc;0`s_ggJ45bp6APp!'?_3V]J8c#6WEAn5P\SICu:a(n`q
A<'BPb:^oUNKm&h0XKmA(CMir=f#8O"\*OgUTCM00et;3g=Qa231eUNe[rL!ONNamd9#^J*Nn"Wom/79
-_e2q!qeS"B@Z&r6\D\jEpp*`puVn4A[aXB=ftKt@bC<4@B%FdBA&$M/M.WXbhQC4LC6%R&^b<O*gs7M
Y'%:^"=Z01Z,<[R^FkJ!-Asc![=Q09V,DR0AV3tJo4a<W8"4obU"/E^;I=\a7W^[2m].s$82'AT%Wo9u
TSAtWWA3/;INt=e;VB`4T#kf2*dNqeCurZ@09/387R`93RG+Q4a2hLZV)bnhR=Ua:r1uE]*A^Wn/HIS2
eE(VgXI639kMS`uRXJ6bD5ZNRM`L07][EQac=^>Q>!tu)c?!"1kVRuc;4,2S@4GN$\Hm\dB;5s]npI8,
K$uStk\+\-HHT3!Y&#fNiGc*ai_XW"g0i%<la&s8%5"NA[EY9`G6<O]"Ub*(2u?aK%b;l*=+_[D9CsKZ
jtb?=*bo+Ik1<(]+7-jk=IuU=,^LsfRZ%0r<A)`JW]Uo?.kRu!VHVh%IU.2YR8MI<+bH3DLs'HkQBfXe
OfE@tOXljp1,t\38Tj*"F)Rqsd2eB#W-:84`BB`MF%[dfpp2G+g!#INRtfY&%BsBb;-@G_OD4DrdqmKJ
ob7df3KkdY@rKAT`V-I?XkROYERJuH)XUf$cI^Y[De[m.)l5(<OrF6c3Jm$42nSG5c+;RO^"-(BdDt.+
KI&73=/YDYgm*pT%Rb@[IUDnLh!@7g73ZTVi9a9,n&jgk+f?u)!#)t-8L1-7Ah<_OlLc0b'<>hVFo+N\
cDGS6Ro.ks.rdr'k%5WESMm618o5-aV@@6^H*h71,0e,s=)P'9V*dlsDmYt"9<-I6Vi&%5BQXf?=,N0#
6JQS+Va[3Ae:9rS`U#F&[WFJVEH:To/!_981?0sV\Bee=F<_DtaWG>i15V>:+\h?)PfsQT_9,]'@FI);
L7jT4e`C_hWgU$8kM\fuF&/eT4&%`k(D_)gc;++)N/K]ECXHi.;=r.T<R'`LMGfta%bh>U7Md3ros<IL
KK]AnKs;qEWG)?K)PUFF>ccrDC`+gL>3-Ei$Zogq\4'Ys>.td9l"tBl.QsLn@*euDX8?9FVL-a<3&UAV
Z9>!Z<X5tH>%,TaY9g2P.Tg2XA4'F8'%9b,R?8K_d4@,YY$W0N1<-Sc19on[VZeFcYe`7+1f.7F>h`tu
3+PoaEt;Q_F,)*`N42I6hQ>6_,<_QJ4dBE`pr:unCn?pP[R">?5Vnkr%7L?A*&s`-b?/E^E*]THk4N#J
Vn,:fiLCEmkMituHP]'Z0on$RAhI%10XS(EI1NY@")"6@^0kO6nK5M)RXH$!]G_?C0:85splAc%cT34E
^hAEK2BH78rr?a2q2^k3.B>@[;_-<S[VB]$<M)l(2Q&q\DO[Yl:b$NbRnlK"lEjta[(5i7>fDi`FLmGK
7n,LMYga6KFZN-!,^HiHC7Q]L9SAfiUX<fs#-S(8ABq)=S`_l?;S2"ik?4J$DM'8sP8q8gi]CdQVOs]f
18:"-%3)0W7U%lLT$%7Y3?ok?8D"QC7*A!@B5T.l_T_"M.AaLif&pcRjiqC6h2JBXc$jWp@4Lg0RoD:h
g1.]H/E_/9pIL:%VK2ObUX>f4m@<=BS'bpO*d4Dj`&io$6_7&CMFg0Jd?;DRo/(LUW3)Gt0tB:7.]3$D
c7.CS2MaYfI73>R@"kYUAtqP9G*m7&ZH&EulD`*aR<PKlNFQ\NX_>$,HFBg;PaO<d(8fkLRWTrNf](37
jhdn<RFq)?GqgbRk%6`9,k7k>k&*;A/k@EHk&r;9(0kNuA*'1B)6(Ho$:.C'?J2a(S]*Z))791MAmj,)
ShrhnF<K$eoBL`QJ[m,9Z#QG^B='N8(MfkfA1#mL[W!7jT:=O-<ZXe9a`plI/Q(PV-a>Ar?p889qg7Hp
K,a$fR>[9R2-[YXh`>%,2kmGTa2QRKn)#r!4dJ*l%6F+TST>l24djH9)4$D-?9+q5@rQMLYg##*SVCjd
&9Kt7Co^@AfOh<D*A4**HYXpAR$';j[2<ad\'3Yd8p#Bl1l%K?U<r%Jh.@o@bFMsl1X0]T-20.b'[F0T
St9k!Nf$\VBi%M[W7'rhF`K>bT&S5Yl'lKlCc4d-LXi>LA__,"7<kN'="-#LBZQL(bZojr73)E*1C#=;
NCM,#O_fSM6^mrCEq%0_)9k(B)`q=^[me5VS(>RB1kcqcEk:3$\h](Hk-]TnP=C;:as-7-U%65I-juY8
b:_,bdDrhmY$pG7j^Z<5Mjgb;7q[Gm-8CrP<8GQ_#a?4&eBQcVK"?okA=KlX=&UL[DD>>40#oQtE^s[f
)6h";$S2upF(L+OYKI(r>gLBO_T@d2Y%D1dim/7SR?rsrM``J*R@/t0ioInNdH5U(9fQ94p8%301U66p
`0Qf]lJ'mXOnnCTYl(f6E)X2TB%Hf_EToVW\729j6*8[>0'>g'U(\@ZK/g$`b@U#:2\f3lr]8Xkm'D*B
Z8SQdjuYbS[`mPC8pek/b>e)X92)=%^C9<[B6WA`)Fu]R\bLOHAoHfiA0FM@%4[NhT>N)%W7bcr1>OHU
V)HRnUG]P!o?_(FAXrhU2&YsG>u#0G[P1UKB"'>I7X:ntWCgb<6L(o!&k6ErbGNf/;3Y\e7lk`1\CqEm
cC77gSpsh!cr.nhl#`A_H0nY(cuVLoB0iEGcuf)*gRojtjD.HD@I4N7ZlE&>FT2>Wac=+3YTfPP<:,kH
jg@\;=6&$GO)8HKN]7O4<Cq5!j0XDoN_8FLHqjC5MM\Z6X2VENdq%8R$YM8u`:Q)QM!.TSHMh\WU7*\t
`cCpsDY0A[MK6aB_rU6)9hWn-a,.t!8jlhMEn9UP#h!V(@a&)GbAnc&<EShp2PT!n==IMkRB"bJ[q114
/#I'&Rs'$F.YF2S`Qj.'="4bu12*2d&`'U$8[C2oc6c98fOf:edta)EYc_P)/ND5"CC4ZAF0s*tdiMd8
9f1$g[)JBL=\U^#g;=A@,!,R6QAXBSq.T.FlIL;GqE+!!fUgXb5j[ASbAG!fUF0eYk1pNlhib949\/Jd
r'Aund8<>#Pg4JWRuQ:h0lX*fD<b2=e)ceCBJ]-4m8laL\U6:213bYr02\M3$=`b$<Td_>IE+6*]0a*@
gc_WB;UOS*!/R3KmQ$L/V7/B7p:f>0QG-5Ue_iXOPiV3N*8GqTX^dfHA`^W+Hp<2+*1GW)RJTVQVj<cA
VEW>bR$5k7l>q-&oh=;MiS,cC[g+7cdEs<]XQ-bp/u$sfaMeL/q6F1fMWW5\/f.Z^2MZPCS"2a@L"0hb
g4R:JgL/Xb=';"]C+X@1fs8TN[FNmjm+^a"f&#)NMm^4Q/=i3iVUjVWSVsmoX,3%HCSI"[9[C\]ip,K5
d8D#fZXnbd`8P7G_L\?;c))/mdDCV6`ub&@E8!][@D&T*P\/B\bXRd8H]%RB2R?&_Ob4rO0nN$dSA)a5
n$IB79HefE2>A5f7@>/0m@:&_%e!&cbe/hqX!B.Li69d]X+e[cddKOd+SLHMUI)IXQ-3HMK1+@LR8gS;
fJM*j/MeGnD8$jdGg'<[EZcfM3KGStM)WU$^rq_3EcH^F-)WAOVQ"IAR:r-K(gFL\]P9rhDY3GtAs)n5
H<C/ePPJF,UP&0f^QZ-Q3"K]uZB&YQ7QP'EPe>bGflthP+CI8$HFHDMI%20X.[II9[Z8M5MQ&t-93B8Y
G7(X7U02`/GWZ@d!L1b6Rq-SZ.*Th\$o.,>>b$5?_:8c?`d_N1d-S;',I_HgJ;u\hOd?"I,tX6mK?[FS
N$#>\1@1toQZ$51A8Zp>)+!Vg1f(Q)\uRB=i%TX.&E?EjG`O`=U>Ys;%"C9TkE"`hI!^!OKL2&ogI,*o
N4;t,g<uBseC+rOnL:cm/WR5gPPCAFKlZs(O*V=J?U^4_dkW*#,^"+tG!=]NoJmDLR>\Ido6&a`0"N4f
JsjC$p5^"k7B=dSTVda;e7`te:H>Mm_NS^D`jsX`9tJUQL3p'\h`%d[CuL9$TY@1DmtW5/%?n]8EFjR>
JR$`@1u=Ocj5H/NBeLb;3Bkg=o5jQWC.Xp+S7cNnHArDFHnCkS]*m,%ntK!f8"Ua1_i]@:@eah:Lkb\G
C&+L^r^"+J&'Z0f*=Y)\b@@N[M<V!R>%R3HDEP2Q=_6>n;cUqYUPbUI+q)EUiSgSP3+Pe+)m07Q<3fG=
@;CI,2"T1D0\Yq;AJ3KQ&CXj`UFS@JHus3C;0q>%b9GgQ&sS`F/llO=jl+Q0-Ih!Z&WT3EEHZ<h5fp)o
%ULmNF!KA4\LF\d&UIkFZ;WR4_RV!Og5Jgpnq=i!1?^tCOmpGt%C4c"LI8/^^p[>)S';]Y2kAL]i'GP*
#'=$Tbi@pN[2kuOeH[Dk03m;llp?"Zo@gK5<'NuB>fn(;CQf:j3VT[N:,Y1EB@nI>9Dk\OoLsI;[i'sf
Z+,*9LM@djLeEWf[l7pgoQ.9Qam,t5f/:+G?oclI7&m<>2>M2iSW>Y..B[)iNB*)cY8N%W<9@YF'2luP
f.ghl?&f@OTPcUmOCVi=P3m5P60OWXX25f2@uhordHod]-)mu_>RZsSO<T+?3-cj:g5HNP&9:6Fh);IC
2ENBE,emtNq@-E!<aJ;'F?DIJh'FSBk@A<eWStHf#7[qd@CYmS6L;%#oDB"dp>ChsSR*^\hhN5Kd9_pt
Ief*W><,U!Z>laJP9Aa:20_EFLRT#7/N2Z,`c@WFVqALuOVnhEB<<tFm6!43QU-`gKsQfkj*I736rG#f
oal>7,cP%eiGuGi!d1\O`8[!0SLdd(<B1.A2,?pb6mWd'N`,1#(dM9b2Adc6Wm(MXRl38#E,od!SB?d1
Bh>>cp_\"Z%Rs<.)(o15ag6@R<Df,DB23=m>,m)Wq6%o*],WeI:#/9KRE2uk3cKe=FWKtiaLRD]":Y$T
=+%^o--F9)#u0i^<jXlPM\Wet1nc)*eXT_#r,Xe<S3'D*5a5!E8^.*>M9NKoKfRN-MH^Ro+cm1@NYuPb
-@/5PZ7S"4Oc&Up)6eYV[9@MMApR.J72>=9)9.TSG,.NC<pAjRlT6$r'g@-$fsklC]t@J5;kB!%=og,+
ijH@SSkO?)ee'G&IQ?(qHR^D<XN*H",s(PV7j7Whcur/FjQ0EA9r>?:rn$1qBC)^I4IYHmJB2Q7,]t(*
3MP'tA3f59%,"%4H[Cc^T]\,5d"(KTqP"S,89:<Ol%!uHD*]S;gGCs]<:4l(D%deiBlt#cDh;#g9f#S:
h<'kYQg.Lg?&rfs#dX(`9H^Sl92TgZI+huF$bk)(JR_bb]RiN@IQ=^SVA/FfBd64^lV`&%Er8[->%(.2
dDps'BpuB5;.%?t1LQsAopR;VApRFJYSHZMHrC+9]s"76gV$3\4.a76FSVPGiN$D@n0=2SeN4[7e&iNV
"OrjU3SWHnS+PVaW@RR)4O#SpljQ<0g0Dth%)^R_;hM'*VK&ESjT]dsToM5]d[d\LHPRl>TD#VqQ[,<f
9qXMbp4*ZTTd:KrF*`r:o]9"*WQVZ"A<OV^'Z</fN)<E`e5U!W!M^bORTg\io!<5+<DCS/fkE`oRXu4n
k2QRPWm)Z^>;P<!_j&m:POR<$gJaB_)`C#eWhs09'HGmUF`lr;N9/dX`OVFi2;(amlV3<P"jFnd$mTZ=
(*p>8PJ1Qo%V@h3/@i?.aiB?#R.1<FqW7J;RCI6l@=oD,\$luLp!&4>#AJr5;JC"pk'H0#?n'_q*,0Q.
nsMtf"QDC<OqHYa\i[u*e7PaX"/=Ab!+(AQ1#a_BRbX%]i&bJ#C=fX]kB$"`)lLlkF"LT'fC',QW,pMd
(J5-!U%Q(u!*7Yr*4J.]G?Si+Ecg#3=RYLB3M"K'*8,d?;mZClBcgcaaCORbr5['Z']\B)!#^6JWOil[
5CR<(RTT'jD"pCk2:CY?PrZqZL6srl+cMV@?TARE)L%W$W5tGgX^3r[dc<j8F.UpuhW\RaaitlGoQh,_
D./e\VhS-J!oBhC!sR6:O;@/Obqqf9Bd+CRmDP_df/D9S.Gj%(*Y]MtbNfYKEId"dQ8nB>D'J+/bL\V_
L^J8#b]0BLmk$8:>52_pWg=$:0%e*$8)Gt)logrban"lU`Qa2(OL&u#cWog!_e4hP*Yo-`>04OsSaN+$
87AF;&f%j=e3=IkfGTQi7jMe*dpS8.2U#Gp`Ai1#Jf1_T)hf5D3SG>q_Hf/<Od+Ltj.:bSdhZ6OMC2rc
!LuAf83L:6.(Jl=e<bT6.V9oj8S[!uRc>Uc7kg`4Dul'+9958jUd@pJAE(O<l*XZGaWEG;>RlrpR1A\T
S/>O,Cs#3<@2pm6ZEtPtE3L3]X(FP#HT0s+]!Q*->+!Z[==(O)Ia2W74PeSV8k5O7YF+/0FJ1.qPHJ,M
0%Ue8\`Cu57EpK^'=DlULF*$Q]2I2'S7Tp_BdUHBRdHN1k3(`m<;*Cum?p<gc=CsQ<jf5O<HcGobHhVf
LC5c`/BHgbR]Q<DF?8d+KX3fnI5UjV0S^6fpU7C;f&&IE4V-6$*1nbKgt^b7k*c#9ho@lmZ*;b>/MF*c
)R[tnB5aZen+=,Wkd`mNq<#T4g"L[T-9?:koeR[H2K<jVp1ClejKdp3=Ugo+Xq^LK)Ht1OQY9mkkjk13
+Lc+73:>/5m<!D>7+ocL0te'_BZQZ'c"8naV4+n6Z^oXdSrZ7$0%HZV]6Ip'"%DK3=]e.sC47b@F/I%N
g.\S3p<gQ@[VbPF'^r9f*%3)?DcCS?*1Jqn.,e]?<OiOMG8[U6:M3\-a9XFjo&)!uo$2G]CqOCq$ae(?
<k6\&*aTb4hmW&\Uj(C]V0:0\m!W4M5(D8t0t'$?Bcu#DmW<d57lO)%,_8M+O7Ait^2<lM3?%&@SOBFt
AYjBqR>\)r%N]I71o/60Cq-Fu3H!3q$9PT3N65kZZs6(?4f,+\]dAL89Hd[%2;)j2oQ[>LK/>WG];uQN
9Z?"33)hk9-8ai*3rQUu>%Oqcfl?Rup?&WUVJL3bSR/'qC(Dq7FP8ZPT2qWUk1^B.en*A\R56O2>Vi<t
P8WW6%-iZGjpn-q#;ZQg.&`,H7B;+IF/>Fl;Z26<k,<1i3^(iV%nbseL@7d1#rUeWEr8dY(h/gn=#'br
U(g4?ab*<<dZ`F+m?/-[@jN;Zds6,[#'t-HU6J-,<r5+9:\-Y(r8u)4>ncsbiVYI1lF(BNY4V<s)Kq7^
.o(`O0I<=Q*d:nnf^=akr;^o5m+`X*%gC\`gU*;F\`6uee:!q9npKK+1N?XEr6]N-T)%WaR=g6a:=%dg
CT9s(g"#?Hobpr.$Ju`sk'7n-1,_huj87'?c8KY7"(lDE[d0AV=P;m1O$M*gp]bd8piC`Irr?7KZtb/^
GA':pBhDeGc=9o\IAWG_2U)H,'t_.;<(q/!riZF;dc[L1,5"E>kDt/,(5l.Tl8i!(-Co.qSr;$2FaGj$
bn@1.+2^!=oijMZ3o.?>5=1JT4F[dSo344>S_5m*dl9,\5DEY/cYaMH9nm/Q_<HNZC3:/po6U>#NL_S)
h"G?/$@(FT`Q)WuTWWHA%as;#niGS3(IYua%o]oY\piAllKMm5KQKNZLYS>1_tee"D1@X1b0apN9kg!j
qg-:@E9uR[,^_M_7nh=qqceuZT7aIojGf$8B0!'FgUttuCSE:<l(%aR<GqD(VPRj/en**D`uZ^96'QVR
^)C5KN:'2JDoq%#BR-^9qrR>6h^43RLRO.In!a_KTB+qlf-n;b[)&I,FkO0[/M:kEB\X#b[D&iYA:@Cr
r6oF.<L6?E[iV5L2r?Jr]G)BPRl-F@/Y(+u*<Pjo.G71Om`oiVc`-3:,3^VjQBfZd\#[lnA;^)0]B3-B
401,%qUNd!>`K.mKQG;tZW-Wg6Yk#V;(RslcRg@ddl@o+=,u<OeSqQAOl)5YP)a<snog"8<)#U+25X^d
n[KJ6:MsjQIn<2Tg`<$-+g]J[HV2-1#B`5NI-j!CZg+uDcI1<Mm_q&AXus2>9^Fnq%6V)%?6dcY`HTLk
q;5kj;j#c.Wh+^=bu36A@>iV!i06^]F7[V]2KRq;9sifd1D;u##>rU3BZG8?2QN%flN9;tgY`solXR2F
h#@@Y-F,^G+keX+bgX^u#gRKpW&pP4d4!\Fe7,n(K.SULRA\PKXkI1/9&]*)I7B@SBsi&k<:pDN>:hc?
GC"_bY,Ed+cVW2bL-Wq9g>_KO\Z(%2WNRD].lrQ.UY8a/X2UoS,B(ILQ@!*nD5K5<H:'FM.r]Q?j'M%V
aht(8Fnp.7C(D>+AW*qjHFS%_Y!.^R&%6+<[]?Gpll5/dl"/bq^2/;GpQFJO[R+9/I9B(E/#&c71D_ER
nTAc*@b4',dkL?.Gb!!+RD[G/[5/SDGb!!()I+mXnqe<')Hq(F55?+.q.,uGcYj^,_[a)L2I-ao<4/`C
2J(pq\C9"Pjg_1(0^,#ul>6t(Pjb(MH5@W*D.;@'^0<0&%Q/KK3?G_dWRB.1`KPCk%p[IsYu#W?4I/nO
%nu#q8i-q+G'UA*j85QlLt83T4eH?pVE_''`14"ND<u?UfoBEEFj/W;GF3BDURo#1K63cT=LTbl/l>@b
ECp+t<geS'h+":i$?$i&:i[,f`*G!n<D1QC'[6In.s/@^ALL,6DD^1?];a:q[R*\Pa#Zp2BC6cEY?[@K
>gOM_Z0^9U;p4KL<`j7OG>;B*GM.:k)JI1WH02Y[bEhtUBed65(+Na:ZW*IMietRh"M-$G1\8hI%@jt!
AE-C6N+O,NZ[o'8bh#=$f/23SoD68K1j8X`F8EuE??8q+Cnel71Qh&1mb<EC@i<R5;[70;P-UV.ji6Yl
buIt*q/G)XM_-E[R=U]!DK[U#.kJ66c(_[/(9Wp'CtIdq3S=#)Jo&9FTQ;9Y>U6I^:J";T2-.4F@H<1O
R>tNC4.Eu[]A\K.-Y%o:&lEeRqGm=*%*HVe[qCI``0J[2N]$UH%*=N]guromoKnTsn+Qb]%(H$oah.@!
a]:V`E\utSA5?je$$KTr77ZK(?a]Z?7n$--m-6tk\'+KNZ_aP*U8>b+jkg;o9ReWdM1&_+'8_:U^[%Kd
4=36!>&Jc[kn0\>=7MO/nt#@Hka3?UVUpI@08>IfRmPAD?MU(K9h]7+--s;;6PUk3XH)>u,s5lq8(l-c
RdF]=Q3*8^AuHTip5CnQH7=0(4(H`!DUjcdloR+0KZF&<h^m].rrCn=f4K,6g:L1OQ4WcGSi1'0cdt'7
K>,,8Tk`Ya)^Z6C/Se%re/)>g/>CC&#%7PNo=F27Am1!H02$oXo"*&d=_,gA8Z(2([9AR:Z:UPQ/sXk"
FXThWf]P\uddA+kVbq.Sp!41ncF:.PcD*DZ/14`6Y:]@Id:0"<7g9's93tcJl([fr8?kgrgud3*GBe]L
'Cd'R>asou3n">R1CHDp?`E,2ZsgQ.QW3SQ`d+?XOd[;',4h7qWKc'-c:bMXNA4,i[/nt=.]RPqOtM,-
]Ja7m)j)#@&!T]r[mr#'&nMa*gN7M?&nX$r/!195U</c_FKSq%9!UU$=/aTpG$$QR6mgqSrELb_r>nU&
[<Xb&h[Z59obnEY,?VW.bC@Pk3c%jhg.XECDfnscpqIg'@aj)Ba/>`6o[2`K0)d4R^FQXSi/0qWCF$CC
r(^<V2U!PHffQOib5q-^3JEY#3*C@fc*ceEfC@'IR&RpDL6EH,8ai&;K8D^(ph$^WU/>p."`IK"/)b:&
9237#>l'gq&'+<A??>.n7hA2p9r;hKZssMp:jGis=<JK;W&la&Q2hj(%Z%TS18U.H@9Vg.=p6dh)dfm,
P3jF!Q_Qa?db+3;(U[bXHOe7]KZ^]RLUML&BLDNtHeEK$`V"JDM8>"sg\,a.0oP@@h_l=K*VKnmA\G]m
L3!d/A.45b[m(@<ob2IO]Rc9a(D&AE#H5;UB]W6;U?;2=LNeg2A_`t*I-NP576K/)0'GkG3ZTOYkk-r.
%X's0F;dh=dV$X<NbWIdd-"E%J8:231KZ2RDk.B*!:@.X_R3?Q>hs,;d-4)2="uG4CnW4pN_!r1)j0sX
PFg%0-7M(++?[YOkEaE*;a$PON=i2QRo:]+ek)EH&Y:4-rFGVIm6UD#HR5?1;dV-20agLEbmnd\E.q/V
1NObs<DAc`XptH',48R'@7ET9I'.]_2Ff2q=3NeZ"Z^h6)am0o1J=aaZ$+i;gS:HZZ]shc<*l%[Q]iKA
e@-o==9Uj[B$;0=k.M`3<&qV>&GA.&"pq7S]DP/X\-R<*U60DaRJ;eT>\U]6).o(RqaW*X@nSL)P%j5.
#3RksLiBY]aD@"&2pHeL*G/aoHXqQ6bW1dCjH*(fOga.%VHc6H#bDKjgK,"QANBFM!.I8n=CaEE'_&_s
37?6pWQ>?1DZXn3D,r(16;e5',g++^%Vta$'\3V>D6Oo#p49I1Bg/?<h"8l>[,YQ-DeD\A0iM21c4dQ>
HJ[D_En)I;[`1r,Rc?"5p3iR';FPl/Z*)cBM_K@BFTH:sF*M,b@*9mi-^nnM$<1UQBlQ2)AtUM&!!D>K
BX*_,?aMV@LR#3Hd,F'VHJGr$%T^lI8WRMSeR[JD+jL"P%[U$L,i<.ppIZGiA%Nc2Pa^c*ULfCh/Q*d.
S'2Lgg1aIue?-iqD6Qajl*:GDCI2gFB>Yt$L/=]MRH;mD4M*A?D3M(_d.82g*c.<,rC0XXa%3Wr>gmGn
D!890/Y$NO;$M)fgs2*Ao2"b:K/n?t96.7*(5"HSk3VTR:^k:,S>aE[(mL-0b@2;$d5bTm=d).US9lAh
h0QO*NL(F+7Qd07,CIu*Yj>YuRkEpg?Ynf86Nbg$1F9Vk-;)`E6uY;mAnN&:NI+HBbA>gF1C(54l2q7?
1s$%cB($4KoN3s_8\[^9bjF:DIkW=sn_m$>>r"\$19?n_2.Y3+PPZ@]5u"Zf/n"!dC*L_MXBYe7?tIJ$
Ao-Ea\$BkW&pZisP;#\'Zu*,fGlrne-q&J`ZG-r.pn<?:K0I*0ISo'>eDD0?$E>$*88BAF/TN,A,uJ-S
5g1o;7)K4+P:0gLQs2pMB!YL'_S^KD!C/H4f#kn8dZ)ZDRV+)'&\"Ua8s/X%eBU-_L<J-21K(EPN]57!
<=&a"3\=>7,kb*D;\LkQE9dV#ZA`9<1<OpZhMFd#3b>g@b"f!?X)tElS#mHsk4P1$6;#q[kj['HC9lP+
6_+^R*mT[@1cq5`C#\E!aUKoV3OdK(lSA''0@I8QrfTg/VDY;<>3=iRh2\(CDZ84pgGW0>4)>d4Bl(BJ
R?>YTa"l9uIP."#QY'1BZ>leqHp__fc'N'MT/Op"9=1T;ZVRXFZ_u-8b:qD<!Ag%nB&1A`\L*Fb1RlqV
G'[t<Kj<-iaR&G,?cOm[gjoZcahg^t'o+PPd5?\7TH%[2[GNUpfr'mRb1TN`>;nnrlI!=\of.,<3&>H2
L.p`PqJ1Bt(8@)-1m>(_g>#SafCjBh$;%XR3Fq5;R+ci.4PmP9XW?b#pI$:!L[`Qc/Q:#(f+.GNoF^/5
+2]kK2m](NiEXq#oKjM`rYZ%-[VO!eff6@daJZrNAfaZ>JX9IPHYkNjVr=#Lc#*_[=A3/-"1D^_+`Sm0
#hZ6nAMTB#4S9k!lD]oV2?%,KHe-NM\6k_M(G)'6+U0?n>.IUb9Yr\&Y%,])O"uZO)WiYGPgj6&L&mZE
F"]@dE<2N`q/*ST;)*r?UJi[d>'SIF,>?I!j)4<[.Rli%c>)iQ^=)/>9Q-I#X%R$]BsgpSJ[5D]H?L.u
UbtCka%^>4EE^[^cI;#_%7[Fa#p2*0>r=Z[:4#=KftPpEVb<u3BQlJJ_$U[M4Ob51cNpFQPc2^Nk0"'M
EWiQ4.pUloB%0O#=--In[_k$S%+75\>1[TCA'""Uj\"CR*nc]3\Uu]2Z5)V_nuVG!S(QDS6Ys]cQY-Oe
D4*S[C&eI+V:K83ek0JtO]f`DF-P9gh9*Wqb!%].G?('dBsB0<k-H[A@uhPr3EM$j@'t_pN_M<eRq?O^
iaiHkRg``AaAg:*W5c`7.;n(uiKc'W12a+QQoVD;k2FRr-7LC4*G1bresB6)aIbJPG)kF?7B@Y3gSEY>
SG&]i`q6i:Gs^<N0fOhqa"5-Ae+SQc??B;LH=ajYPHc&)\Z_&aN#pXiB9FXFgR:/D1,(e$-S112P?Ni:
(t<`F`?O7$eeLJeK>Sr8/J?U"r@g"Jj!CRKU@'6PiALUJ]GO;UI@apCTo-3tDDD>KPZ%s2>%TnP>`#;e
XYU>6E:P>P7p9N:1tn)6*A_&h,A[FeN53Uq.i]:f2>N6BfL!.heE7V6n/>@tVJ:5jXkI1)9'H)Mc_e0_
LHR*n1CAG0/fL&o0ZQeke>^*KR>4JqB%/6@k19eEFh+h^K=5W9A#EP#-)`QCSf#'*Z;YSc`#L=^8c!%:
4e,*:DA'A%V?p0hP+/D]k0jIf+Y$):@'+KYNc&GhTH;kB0,&A\7c:`4)9ii:Z>F)gnI;f0;j)ciP'4r`
Xf-k4h.CjL,3G=\S47R'bdQoGcpgL8cg#O4]fn;b>h7uWlnRO=N`Ink0Nc4JYg(22'c5,d!pfF]#0j"V
lZ/77F$:2h_OS)>?1Qh]ReZV`XdId]3>h<2,CJ!UE*K]uk!_]b1I8(j>J&>K.2<i5cg%l<mkib0<\MWR
'@G:;_l]cLST>e8l->=(B#JfK,N'j5Q]85/1K:cJfR/e01s8g8kE?fr#<Q2]@flh$Y'DZ(O,EEmf06r&
Q5+Z8&o3gZcJ,d:jDaZ;2N(aN]/cc",&78.RB"R[&I?>nY/r%9**!\b(.gN*MPB5S;f5ViW2D=iLGp)N
<m?(q3On4OXdE6G3LKB?&"(e\h]0opL,]rOQ8<,J/2ZDJb,338Z"'[B,h/4D_\?>qP#?,A`Z.*p9]fqG
&o/G`ARd>T_B)[YF#t)kGpTpsp!'??W&0dc(L5TZ:&*e%BQEVinMSZZ^.*03k*ju@7N$cWT;BO_ZCfjQ
'PBA+Rq=)(OjOU#203tf=<aLXU"%3?C#Z.f2;'8<_C_::8n8Xn1@UVH0Mm/OC!3X('H]7N*EH_U3O6X_
FnlO5CR=PWdsJ5&.@_>c-"LiCkJl]DRNaZ72Q%"rD*Coc5&%DCHZn$tX/q_ibGKGboa6:E_j6_5NhO3d
/,Z_<bVd]WjjE,#Sf[u\B6(iHVo<j2,81`Ugp$Q(i]JK/c`;ue7:&*0RcVXJ[dBHm*'B)&T5<(n*'B(b
4gS(XN)=AZm#FaUY$kj]i2AFJ,Ei9sR!B[M.P>/jEq-.<`1*"r`_e)0lnLe0fo_8kC2KA`gg#_RRCM$G
MJ\ckge"S-Q]8tQREV$Xnksr4Q]7_2IFil#C"O_qpW\@1TS,=egqF9/$*fq5C"G6=SkT<UF`$hAF.1-"
%lA**c>)1lPn]X\e@VhDW6KG>kW%LXa\D@_",iF1o51@IRF(DlSNEjsU>9m)O-?]fc#-n9VlO;WRq,Mt
2>Q%o."oi?U"S@*9[r6KQkbrFR2q#>j"Vh@#4f3>N)dNIA0$eC*Jd(g8:UZm~>
%%EndBinary
grestore
np
gsave
247.145 120.528 mo
248.145 120.528 li
248.145 115.528 li
247.145 115.528 li
cp
clp
247.645 120.028 mo
247.645 116.028 li
0 gry
@
grestore
gsave
247.145 35.3521 mo
248.145 35.3521 li
248.145 30.3521 li
247.145 30.3521 li
cp
clp
247.645 34.8521 mo
247.645 30.8521 li
0 gry
@
grestore
0 gry
PBVMPQ+NimbusSanL-Regu*1 [7.97 0 0 -7.97 0 0 ]msf245.929 129.563 mo(010)[42.3685 4.42331 0 ]xshPBVMPR+CMSY8*1 [7.97 0 0 -7.97 0 0 ]msf184.108 122.037 mo(\241)shPBVMPQ+NimbusSanL-Regu*1 [7.97 0 0 -7.97 0 0 ]msf190.691 122.037 mo(10)[4.42329 0 ]xshgsave
203.057 75.44 mo
208.057 75.44 li
208.057 74.44 li
203.057 74.44 li
cp
clp
203.557 74.94 mo
207.557 74.94 li
@
grestore
gsave
288.233 75.44 mo
293.233 75.44 li
293.233 74.44 li
288.233 74.44 li
cp
clp
288.733 74.94 mo
292.733 74.94 li
@
grestore
PBVMPQ+NimbusSanL-Regu*1 [7.97 0 0 -7.97 0 0 ]msf195.126 78.136 mo(0)sh190.695 33.548 mo(10)[4.42329 0 ]xsh203.557 120.028 mo
292.733 120.028 li
292.733 30.8519 li
203.557 30.8519 li
203.557 120.028 li
@
PBVMPQ+NimbusSanL-Regu*1 [0 -9.963 -9.963 0 0 0 ]msf184.194 88.8164 mo(Space)[-6.63536 -5.5294 -5.52939 -4.9815 0 ]yshPBVMPQ+NimbusSanL-Regu*1 [9.963 0 0 -9.963 0 0 ]msf234.768 142.429 mo(Space)[6.63536 5.52939 5.5294 4.98148 0 ]xshtrue set_gvm
%ADOBeginSubsetFont: WGJRMX+NimbusSanL-Bold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginPBVMPS+NimbusSanL-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/B <1C60D8A8C9B6079F1E2103EDDC87A248A71D1E8C449C6A83B61B5DADF70A37274F2F54AF40BE63A4237A961E0D99E85ACEE00BF17E2C8EFC428A7A2AA341B09104EFBB1A9F8DC1B5920C54C43B0315EDC679D9BD2F81915C535136DEAB827D2DDC070FACD7B285913C3699E414A221C5E340E9298E91556161B2512E7EBA48C1973D8910B0339A0BD02FE5099A33213C71E678A5735ED92D2695E4FFDF64BC722F39F21C8DF899DD114C83B8369158> |-systemdict /gcheck known {setglobal} if end {end} ifendPBVMPS+NimbusSanL-Bold /Encoding getdup 66 /B putpop%ADOEndSubsetFont
reset_gvm
/PBVMPS+NimbusSanL-Bold*1 [65{/.notdef}rp /A /B 189{/.notdef}rp]PBVMPS+NimbusSanL-Bold nfPBVMPS+NimbusSanL-Bold*1 [11.955 0 0 -11.955 0 0 ]msf167.886 26.3932 mo(B)sh298.306 121.88 mo
298.306 121.517 li
298.306 29.363 li
298.306 29 li
302.95 29 li
302.95 29.363 li
302.95 121.517 li
302.95 121.88 li
298.306 121.88 li
cp
1 gry
f
0.01 lw
298.306 121.88 mo
298.306 121.517 li
298.306 29.363 li
298.306 29 li
302.95 29 li
302.95 29.363 li
302.95 121.517 li
302.95 121.88 li
298.306 121.88 li
cp
@
gsave
298.306 121.88 mo
302.95 121.88 li
302.95 29 li
298.306 29 li
cp
clp
298.306 121.88 mo
302.95 121.88 li
302.95 121.517 li
298.306 121.517 li
cp
0 0 0.5 rgb
f
298.306 121.517 mo
302.95 121.517 li
302.95 121.154 li
298.306 121.154 li
cp
0 0 0.518 rgb
f
298.306 121.154 mo
302.95 121.154 li
302.95 120.791 li
298.306 120.791 li
cp
0 0 0.536 rgb
f
298.306 120.792 mo
302.95 120.792 li
302.95 120.429 li
298.306 120.429 li
cp
0 0 0.553 rgb
f
298.306 120.429 mo
302.95 120.429 li
302.95 120.066 li
298.306 120.066 li
cp
0 0 0.571 rgb
f
298.306 120.066 mo
302.95 120.066 li
302.95 119.703 li
298.306 119.703 li
cp
0 0 0.589 rgb
f
298.306 119.703 mo
302.95 119.703 li
302.95 119.34 li
298.306 119.34 li
cp
0 0 0.607 rgb
f
298.306 119.34 mo
302.95 119.34 li
302.95 118.977 li
298.306 118.977 li
cp
0 0 0.625 rgb
f
298.306 118.977 mo
302.95 118.977 li
302.95 118.614 li
298.306 118.614 li
cp
0 0 0.643 rgb
f
298.306 118.615 mo
302.95 118.615 li
302.95 118.252 li
298.306 118.252 li
cp
0 0 0.66 rgb
f
298.306 118.252 mo
302.95 118.252 li
302.95 117.889 li
298.306 117.889 li
cp
0 0 0.678 rgb
f
298.306 117.889 mo
302.95 117.889 li
302.95 117.526 li
298.306 117.526 li
cp
0 0 0.696 rgb
f
298.306 117.526 mo
302.95 117.526 li
302.95 117.163 li
298.306 117.163 li
cp
0 0 0.714 rgb
f
298.306 117.163 mo
302.95 117.163 li
302.95 116.8 li
298.306 116.8 li
cp
0 0 0.732 rgb
f
298.306 116.801 mo
302.95 116.801 li
302.95 116.438 li
298.306 116.438 li
cp
0 0 0.75 rgb
f
298.306 116.438 mo
302.95 116.438 li
302.95 116.075 li
298.306 116.075 li
cp
0 0 0.767 rgb
f
298.306 116.075 mo
302.95 116.075 li
302.95 115.712 li
298.306 115.712 li
cp
0 0 0.785 rgb
f
298.306 115.712 mo
302.95 115.712 li
302.95 115.349 li
298.306 115.349 li
cp
0 0 0.803 rgb
f
298.306 115.349 mo
302.95 115.349 li
302.95 114.986 li
298.306 114.986 li
cp
0 0 0.821 rgb
f
298.306 114.987 mo
302.95 114.987 li
302.95 114.624 li
298.306 114.624 li
cp
0 0 0.839 rgb
f
298.306 114.624 mo
302.95 114.624 li
302.95 114.261 li
298.306 114.261 li
cp
0 0 0.857 rgb
f
298.306 114.261 mo
302.95 114.261 li
302.95 113.898 li
298.306 113.898 li
cp
0 0 0.874 rgb
f
298.306 113.898 mo
302.95 113.898 li
302.95 113.535 li
298.306 113.535 li
cp
0 0 0.892 rgb
f
298.306 113.535 mo
302.95 113.535 li
302.95 113.172 li
298.306 113.172 li
cp
0 0 0.91 rgb
f
298.306 113.173 mo
302.95 113.173 li
302.95 112.81 li
298.306 112.81 li
cp
0 0 0.928 rgb
f
298.306 112.81 mo
302.95 112.81 li
302.95 112.447 li
298.306 112.447 li
cp
0 0 0.946 rgb
f
298.306 112.447 mo
302.95 112.447 li
302.95 112.084 li
298.306 112.084 li
cp
0 0 0.963 rgb
f
298.306 112.084 mo
302.95 112.084 li
302.95 111.721 li
298.306 111.721 li
cp
0 0 0.981 rgb
f
298.306 111.721 mo
302.95 111.721 li
302.95 111.358 li
298.306 111.358 li
cp
0 0 0.999 rgb
f
298.306 111.358 mo
302.95 111.358 li
302.95 110.995 li
298.306 110.995 li
cp
0 0 1 rgb
f
298.306 110.996 mo
302.95 110.996 li
302.95 110.633 li
298.306 110.633 li
cp
f
298.306 110.633 mo
302.95 110.633 li
302.95 110.27 li
298.306 110.27 li
cp
f
298.306 110.27 mo
302.95 110.27 li
302.95 109.907 li
298.306 109.907 li
cp
0 0.002 1 rgb
f
298.306 109.907 mo
302.95 109.907 li
302.95 109.544 li
298.306 109.544 li
cp
0 0.018 1 rgb
f
298.306 109.544 mo
302.95 109.544 li
302.95 109.181 li
298.306 109.181 li
cp
0 0.033 1 rgb
f
298.306 109.182 mo
302.95 109.182 li
302.95 108.819 li
298.306 108.819 li
cp
0 0.049 1 rgb
f
298.306 108.819 mo
302.95 108.819 li
302.95 108.456 li
298.306 108.456 li
cp
0 0.065 1 rgb
f
298.306 108.456 mo
302.95 108.456 li
302.95 108.093 li
298.306 108.093 li
cp
0 0.08 1 rgb
f
298.306 108.093 mo
302.95 108.093 li
302.95 107.73 li
298.306 107.73 li
cp
0 0.096 1 rgb
f
298.306 107.73 mo
302.95 107.73 li
302.95 107.367 li
298.306 107.367 li
cp
0 0.112 1 rgb
f
298.306 107.367 mo
302.95 107.367 li
302.95 107.004 li
298.306 107.004 li
cp
0 0.127 1 rgb
f
298.306 107.005 mo
302.95 107.005 li
302.95 106.642 li
298.306 106.642 li
cp
0 0.143 1 rgb
f
298.306 106.642 mo
302.95 106.642 li
302.95 106.279 li
298.306 106.279 li
cp
0 0.159 1 rgb
f
298.306 106.279 mo
302.95 106.279 li
302.95 105.916 li
298.306 105.916 li
cp
0 0.175 1 rgb
f
298.306 105.916 mo
302.95 105.916 li
302.95 105.553 li
298.306 105.553 li
cp
0 0.19 1 rgb
f
298.306 105.553 mo
302.95 105.553 li
302.95 105.19 li
298.306 105.19 li
cp
0 0.206 1 rgb
f
298.306 105.191 mo
302.95 105.191 li
302.95 104.828 li
298.306 104.828 li
cp
0 0.222 1 rgb
f
298.306 104.828 mo
302.95 104.828 li
302.95 104.465 li
298.306 104.465 li
cp
0 0.237 1 rgb
f
298.306 104.465 mo
302.95 104.465 li
302.95 104.102 li
298.306 104.102 li
cp
0 0.253 1 rgb
f
298.306 104.102 mo
302.95 104.102 li
302.95 103.739 li
298.306 103.739 li
cp
0 0.269 1 rgb
f
298.306 103.739 mo
302.95 103.739 li
302.95 103.376 li
298.306 103.376 li
cp
0 0.284 1 rgb
f
298.306 103.377 mo
302.95 103.377 li
302.95 103.014 li
298.306 103.014 li
cp
0 0.3 1 rgb
f
298.306 103.014 mo
302.95 103.014 li
302.95 102.651 li
298.306 102.651 li
cp
0 0.316 1 rgb
f
298.306 102.651 mo
302.95 102.651 li
302.95 102.288 li
298.306 102.288 li
cp
0 0.331 1 rgb
f
298.306 102.288 mo
302.95 102.288 li
302.95 101.925 li
298.306 101.925 li
cp
0 0.347 1 rgb
f
298.306 101.925 mo
302.95 101.925 li
302.95 101.562 li
298.306 101.562 li
cp
0 0.363 1 rgb
f
298.306 101.562 mo
302.95 101.562 li
302.95 101.199 li
298.306 101.199 li
cp
0 0.378 1 rgb
f
298.306 101.2 mo
302.95 101.2 li
302.95 100.837 li
298.306 100.837 li
cp
0 0.394 1 rgb
f
298.306 100.837 mo
302.95 100.837 li
302.95 100.474 li
298.306 100.474 li
cp
0 0.41 1 rgb
f
298.306 100.474 mo
302.95 100.474 li
302.95 100.111 li
298.306 100.111 li
cp
0 0.425 1 rgb
f
298.306 100.111 mo
302.95 100.111 li
302.95 99.748 li
298.306 99.748 li
cp
0 0.441 1 rgb
f
298.306 99.748 mo
302.95 99.748 li
302.95 99.385 li
298.306 99.385 li
cp
0 0.457 1 rgb
f
298.306 99.386 mo
302.95 99.386 li
302.95 99.023 li
298.306 99.023 li
cp
0 0.473 1 rgb
f
298.306 99.023 mo
302.95 99.023 li
302.95 98.66 li
298.306 98.66 li
cp
0 0.488 1 rgb
f
298.306 98.66 mo
302.95 98.66 li
302.95 98.297 li
298.306 98.297 li
cp
0 0.504 1 rgb
f
298.306 98.297 mo
302.95 98.297 li
302.95 97.934 li
298.306 97.934 li
cp
0 0.52 1 rgb
f
298.306 97.934 mo
302.95 97.934 li
302.95 97.571 li
298.306 97.571 li
cp
0 0.535 1 rgb
f
298.306 97.572 mo
302.95 97.572 li
302.95 97.209 li
298.306 97.209 li
cp
0 0.551 1 rgb
f
298.306 97.209 mo
302.95 97.209 li
302.95 96.846 li
298.306 96.846 li
cp
0 0.567 1 rgb
f
298.306 96.846 mo
302.95 96.846 li
302.95 96.483 li
298.306 96.483 li
cp
0 0.582 1 rgb
f
298.306 96.483 mo
302.95 96.483 li
302.95 96.12 li
298.306 96.12 li
cp
0 0.598 1 rgb
f
298.306 96.12 mo
302.95 96.12 li
302.95 95.757 li
298.306 95.757 li
cp
0 0.614 1 rgb
f
298.306 95.758 mo
302.95 95.758 li
302.95 95.395 li
298.306 95.395 li
cp
0 0.629 1 rgb
f
298.306 95.395 mo
302.95 95.395 li
302.95 95.032 li
298.306 95.032 li
cp
0 0.645 1 rgb
f
298.306 95.032 mo
302.95 95.032 li
302.95 94.669 li
298.306 94.669 li
cp
0 0.661 1 rgb
f
298.306 94.669 mo
302.95 94.669 li
302.95 94.306 li
298.306 94.306 li
cp
0 0.676 1 rgb
f
298.306 94.306 mo
302.95 94.306 li
302.95 93.943 li
298.306 93.943 li
cp
0 0.692 1 rgb
f
298.306 93.943 mo
302.95 93.943 li
302.95 93.58 li
298.306 93.58 li
cp
0 0.708 1 rgb
f
298.306 93.581 mo
302.95 93.581 li
302.95 93.218 li
298.306 93.218 li
cp
0 0.724 1 rgb
f
298.306 93.218 mo
302.95 93.218 li
302.95 92.855 li
298.306 92.855 li
cp
0 0.739 1 rgb
f
298.306 92.855 mo
302.95 92.855 li
302.95 92.492 li
298.306 92.492 li
cp
0 0.755 1 rgb
f
298.306 92.492 mo
302.95 92.492 li
302.95 92.129 li
298.306 92.129 li
cp
0 0.771 1 rgb
f
298.306 92.129 mo
302.95 92.129 li
302.95 91.766 li
298.306 91.766 li
cp
0 0.786 1 rgb
f
298.306 91.767 mo
302.95 91.767 li
302.95 91.404 li
298.306 91.404 li
cp
0 0.802 1 rgb
f
298.306 91.404 mo
302.95 91.404 li
302.95 91.041 li
298.306 91.041 li
cp
0 0.818 1 rgb
f
298.306 91.041 mo
302.95 91.041 li
302.95 90.678 li
298.306 90.678 li
cp
0 0.833 1 rgb
f
298.306 90.678 mo
302.95 90.678 li
302.95 90.315 li
298.306 90.315 li
cp
0 0.849 1 rgb
f
298.306 90.315 mo
302.95 90.315 li
302.95 89.952 li
298.306 89.952 li
cp
0 0.865 0.996 rgb
f
298.306 89.952 mo
302.95 89.952 li
302.95 89.589 li
298.306 89.589 li
cp
0 0.88 0.984 rgb
f
298.306 89.59 mo
302.95 89.59 li
302.95 89.227 li
298.306 89.227 li
cp
0 0.896 0.971 rgb
f
298.306 89.227 mo
302.95 89.227 li
302.95 88.864 li
298.306 88.864 li
cp
0.009 0.912 0.958 rgb
f
298.306 88.864 mo
302.95 88.864 li
302.95 88.501 li
298.306 88.501 li
cp
0.022 0.927 0.946 rgb
f
298.306 88.501 mo
302.95 88.501 li
302.95 88.138 li
298.306 88.138 li
cp
0.035 0.943 0.933 rgb
f
298.306 88.138 mo
302.95 88.138 li
302.95 87.775 li
298.306 87.775 li
cp
0.047 0.959 0.92 rgb
f
298.306 87.776 mo
302.95 87.776 li
302.95 87.413 li
298.306 87.413 li
cp
0.06 0.975 0.908 rgb
f
298.306 87.413 mo
302.95 87.413 li
302.95 87.05 li
298.306 87.05 li
cp
0.073 0.99 0.895 rgb
f
298.306 87.05 mo
302.95 87.05 li
302.95 86.687 li
298.306 86.687 li
cp
0.085 1 0.882 rgb
f
298.306 86.687 mo
302.95 86.687 li
302.95 86.324 li
298.306 86.324 li
cp
0.098 1 0.87 rgb
f
298.306 86.324 mo
302.95 86.324 li
302.95 85.961 li
298.306 85.961 li
cp
0.111 1 0.857 rgb
f
298.306 85.962 mo
302.95 85.962 li
302.95 85.599 li
298.306 85.599 li
cp
0.123 1 0.844 rgb
f
298.306 85.599 mo
302.95 85.599 li
302.95 85.236 li
298.306 85.236 li
cp
0.136 1 0.832 rgb
f
298.306 85.236 mo
302.95 85.236 li
302.95 84.873 li
298.306 84.873 li
cp
0.149 1 0.819 rgb
f
298.306 84.873 mo
302.95 84.873 li
302.95 84.51 li
298.306 84.51 li
cp
0.161 1 0.806 rgb
f
298.306 84.51 mo
302.95 84.51 li
302.95 84.147 li
298.306 84.147 li
cp
0.174 1 0.794 rgb
f
298.306 84.148 mo
302.95 84.148 li
302.95 83.785 li
298.306 83.785 li
cp
0.187 1 0.781 rgb
f
298.306 83.785 mo
302.95 83.785 li
302.95 83.422 li
298.306 83.422 li
cp
0.199 1 0.768 rgb
f
298.306 83.422 mo
302.95 83.422 li
302.95 83.059 li
298.306 83.059 li
cp
0.212 1 0.756 rgb
f
298.306 83.059 mo
302.95 83.059 li
302.95 82.696 li
298.306 82.696 li
cp
0.225 1 0.743 rgb
f
298.306 82.696 mo
302.95 82.696 li
302.95 82.333 li
298.306 82.333 li
cp
0.237 1 0.731 rgb
f
298.306 82.333 mo
302.95 82.333 li
302.95 81.97 li
298.306 81.97 li
cp
0.25 1 0.718 rgb
f
298.306 81.971 mo
302.95 81.971 li
302.95 81.608 li
298.306 81.608 li
cp
0.262 1 0.705 rgb
f
298.306 81.608 mo
302.95 81.608 li
302.95 81.245 li
298.306 81.245 li
cp
0.275 1 0.693 rgb
f
298.306 81.245 mo
302.95 81.245 li
302.95 80.882 li
298.306 80.882 li
cp
0.288 1 0.68 rgb
f
298.306 80.882 mo
302.95 80.882 li
302.95 80.519 li
298.306 80.519 li
cp
0.3 1 0.667 rgb
f
298.306 80.519 mo
302.95 80.519 li
302.95 80.156 li
298.306 80.156 li
cp
0.313 1 0.655 rgb
f
298.306 80.157 mo
302.95 80.157 li
302.95 79.794 li
298.306 79.794 li
cp
0.326 1 0.642 rgb
f
298.306 79.794 mo
302.95 79.794 li
302.95 79.431 li
298.306 79.431 li
cp
0.338 1 0.629 rgb
f
298.306 79.431 mo
302.95 79.431 li
302.95 79.068 li
298.306 79.068 li
cp
0.351 1 0.617 rgb
f
298.306 79.068 mo
302.95 79.068 li
302.95 78.705 li
298.306 78.705 li
cp
0.364 1 0.604 rgb
f
298.306 78.705 mo
302.95 78.705 li
302.95 78.342 li
298.306 78.342 li
cp
0.376 1 0.591 rgb
f
298.306 78.342 mo
302.95 78.342 li
302.95 77.979 li
298.306 77.979 li
cp
0.389 1 0.579 rgb
f
298.306 77.98 mo
302.95 77.98 li
302.95 77.617 li
298.306 77.617 li
cp
0.402 1 0.566 rgb
f
298.306 77.617 mo
302.95 77.617 li
302.95 77.254 li
298.306 77.254 li
cp
0.414 1 0.553 rgb
f
298.306 77.254 mo
302.95 77.254 li
302.95 76.891 li
298.306 76.891 li
cp
0.427 1 0.541 rgb
f
298.306 76.891 mo
302.95 76.891 li
302.95 76.528 li
298.306 76.528 li
cp
0.44 1 0.528 rgb
f
298.306 76.528 mo
302.95 76.528 li
302.95 76.165 li
298.306 76.165 li
cp
0.452 1 0.516 rgb
f
298.306 76.166 mo
302.95 76.166 li
302.95 75.803 li
298.306 75.803 li
cp
0.465 1 0.503 rgb
f
298.306 75.803 mo
302.95 75.803 li
302.95 75.44 li
298.306 75.44 li
cp
0.478 1 0.49 rgb
f
298.306 75.44 mo
302.95 75.44 li
302.95 75.077 li
298.306 75.077 li
cp
0.49 1 0.478 rgb
f
298.306 75.077 mo
302.95 75.077 li
302.95 74.714 li
298.306 74.714 li
cp
0.503 1 0.465 rgb
f
298.306 74.714 mo
302.95 74.714 li
302.95 74.351 li
298.306 74.351 li
cp
0.516 1 0.452 rgb
f
298.306 74.352 mo
302.95 74.352 li
302.95 73.989 li
298.306 73.989 li
cp
0.528 1 0.44 rgb
f
298.306 73.989 mo
302.95 73.989 li
302.95 73.626 li
298.306 73.626 li
cp
0.541 1 0.427 rgb
f
298.306 73.626 mo
302.95 73.626 li
302.95 73.263 li
298.306 73.263 li
cp
0.553 1 0.414 rgb
f
298.306 73.263 mo
302.95 73.263 li
302.95 72.9 li
298.306 72.9 li
cp
0.566 1 0.402 rgb
f
298.306 72.9 mo
302.95 72.9 li
302.95 72.537 li
298.306 72.537 li
cp
0.579 1 0.389 rgb
f
298.306 72.538 mo
302.95 72.538 li
302.95 72.175 li
298.306 72.175 li
cp
0.591 1 0.376 rgb
f
298.306 72.175 mo
302.95 72.175 li
302.95 71.812 li
298.306 71.812 li
cp
0.604 1 0.364 rgb
f
298.306 71.812 mo
302.95 71.812 li
302.95 71.449 li
298.306 71.449 li
cp
0.617 1 0.351 rgb
f
298.306 71.449 mo
302.95 71.449 li
302.95 71.086 li
298.306 71.086 li
cp
0.629 1 0.338 rgb
f
298.306 71.086 mo
302.95 71.086 li
302.95 70.723 li
298.306 70.723 li
cp
0.642 1 0.326 rgb
f
298.306 70.723 mo
302.95 70.723 li
302.95 70.36 li
298.306 70.36 li
cp
0.655 1 0.313 rgb
f
298.306 70.361 mo
302.95 70.361 li
302.95 69.998 li
298.306 69.998 li
cp
0.667 1 0.3 rgb
f
298.306 69.998 mo
302.95 69.998 li
302.95 69.635 li
298.306 69.635 li
cp
0.68 1 0.288 rgb
f
298.306 69.635 mo
302.95 69.635 li
302.95 69.272 li
298.306 69.272 li
cp
0.693 1 0.275 rgb
f
298.306 69.272 mo
302.95 69.272 li
302.95 68.909 li
298.306 68.909 li
cp
0.705 1 0.262 rgb
f
298.306 68.909 mo
302.95 68.909 li
302.95 68.546 li
298.306 68.546 li
cp
0.718 1 0.25 rgb
f
298.306 68.547 mo
302.95 68.547 li
302.95 68.184 li
298.306 68.184 li
cp
0.731 1 0.237 rgb
f
298.306 68.184 mo
302.95 68.184 li
302.95 67.821 li
298.306 67.821 li
cp
0.743 1 0.225 rgb
f
298.306 67.821 mo
302.95 67.821 li
302.95 67.458 li
298.306 67.458 li
cp
0.756 1 0.212 rgb
f
298.306 67.458 mo
302.95 67.458 li
302.95 67.095 li
298.306 67.095 li
cp
0.768 1 0.199 rgb
f
298.306 67.095 mo
302.95 67.095 li
302.95 66.732 li
298.306 66.732 li
cp
0.781 1 0.187 rgb
f
298.306 66.732 mo
302.95 66.732 li
302.95 66.369 li
298.306 66.369 li
cp
0.794 1 0.174 rgb
f
298.306 66.37 mo
302.95 66.37 li
302.95 66.007 li
298.306 66.007 li
cp
0.806 1 0.161 rgb
f
298.306 66.007 mo
302.95 66.007 li
302.95 65.644 li
298.306 65.644 li
cp
0.819 1 0.149 rgb
f
298.306 65.644 mo
302.95 65.644 li
302.95 65.281 li
298.306 65.281 li
cp
0.832 1 0.136 rgb
f
298.306 65.281 mo
302.95 65.281 li
302.95 64.918 li
298.306 64.918 li
cp
0.844 1 0.123 rgb
f
298.306 64.918 mo
302.95 64.918 li
302.95 64.555 li
298.306 64.555 li
cp
0.857 1 0.111 rgb
f
298.306 64.556 mo
302.95 64.556 li
302.95 64.193 li
298.306 64.193 li
cp
0.87 1 0.098 rgb
f
298.306 64.193 mo
302.95 64.193 li
302.95 63.83 li
298.306 63.83 li
cp
0.882 1 0.085 rgb
f
298.306 63.83 mo
302.95 63.83 li
302.95 63.467 li
298.306 63.467 li
cp
0.895 1 0.073 rgb
f
298.306 63.467 mo
302.95 63.467 li
302.95 63.104 li
298.306 63.104 li
cp
0.908 1 0.06 rgb
f
298.306 63.104 mo
302.95 63.104 li
302.95 62.741 li
298.306 62.741 li
cp
0.92 1 0.047 rgb
f
298.306 62.742 mo
302.95 62.742 li
302.95 62.379 li
298.306 62.379 li
cp
0.933 1 0.035 rgb
f
298.306 62.379 mo
302.95 62.379 li
302.95 62.016 li
298.306 62.016 li
cp
0.946 0.988 0.022 rgb
f
298.306 62.016 mo
302.95 62.016 li
302.95 61.653 li
298.306 61.653 li
cp
0.958 0.974 0.009 rgb
f
298.306 61.653 mo
302.95 61.653 li
302.95 61.29 li
298.306 61.29 li
cp
0.971 0.959 0 rgb
f
298.306 61.29 mo
302.95 61.29 li
302.95 60.927 li
298.306 60.927 li
cp
0.984 0.945 0 rgb
f
298.306 60.928 mo
302.95 60.928 li
302.95 60.565 li
298.306 60.565 li
cp
0.996 0.93 0 rgb
f
298.306 60.565 mo
302.95 60.565 li
302.95 60.202 li
298.306 60.202 li
cp
1 0.916 0 rgb
f
298.306 60.202 mo
302.95 60.202 li
302.95 59.839 li
298.306 59.839 li
cp
1 0.901 0 rgb
f
298.306 59.839 mo
302.95 59.839 li
302.95 59.476 li
298.306 59.476 li
cp
1 0.887 0 rgb
f
298.306 59.476 mo
302.95 59.476 li
302.95 59.113 li
298.306 59.113 li
cp
1 0.872 0 rgb
f
298.306 59.113 mo
302.95 59.113 li
302.95 58.75 li
298.306 58.75 li
cp
1 0.858 0 rgb
f
298.306 58.751 mo
302.95 58.751 li
302.95 58.388 li
298.306 58.388 li
cp
1 0.843 0 rgb
f
298.306 58.388 mo
302.95 58.388 li
302.95 58.025 li
298.306 58.025 li
cp
1 0.829 0 rgb
f
298.306 58.025 mo
302.95 58.025 li
302.95 57.662 li
298.306 57.662 li
cp
1 0.814 0 rgb
f
298.306 57.662 mo
302.95 57.662 li
302.95 57.299 li
298.306 57.299 li
cp
1 0.8 0 rgb
f
298.306 57.299 mo
302.95 57.299 li
302.95 56.936 li
298.306 56.936 li
cp
1 0.785 0 rgb
f
298.306 56.937 mo
302.95 56.937 li
302.95 56.574 li
298.306 56.574 li
cp
1 0.771 0 rgb
f
298.306 56.574 mo
302.95 56.574 li
302.95 56.211 li
298.306 56.211 li
cp
1 0.756 0 rgb
f
298.306 56.211 mo
302.95 56.211 li
302.95 55.848 li
298.306 55.848 li
cp
1 0.741 0 rgb
f
298.306 55.848 mo
302.95 55.848 li
302.95 55.485 li
298.306 55.485 li
cp
1 0.727 0 rgb
f
298.306 55.485 mo
302.95 55.485 li
302.95 55.122 li
298.306 55.122 li
cp
1 0.712 0 rgb
f
298.306 55.122 mo
302.95 55.122 li
302.95 54.759 li
298.306 54.759 li
cp
1 0.698 0 rgb
f
298.306 54.76 mo
302.95 54.76 li
302.95 54.397 li
298.306 54.397 li
cp
1 0.683 0 rgb
f
298.306 54.397 mo
302.95 54.397 li
302.95 54.034 li
298.306 54.034 li
cp
1 0.669 0 rgb
f
298.306 54.034 mo
302.95 54.034 li
302.95 53.671 li
298.306 53.671 li
cp
1 0.654 0 rgb
f
298.306 53.671 mo
302.95 53.671 li
302.95 53.308 li
298.306 53.308 li
cp
1 0.64 0 rgb
f
298.306 53.308 mo
302.95 53.308 li
302.95 52.945 li
298.306 52.945 li
cp
1 0.625 0 rgb
f
298.306 52.946 mo
302.95 52.946 li
302.95 52.583 li
298.306 52.583 li
cp
1 0.611 0 rgb
f
298.306 52.583 mo
302.95 52.583 li
302.95 52.22 li
298.306 52.22 li
cp
1 0.596 0 rgb
f
298.306 52.22 mo
302.95 52.22 li
302.95 51.857 li
298.306 51.857 li
cp
1 0.582 0 rgb
f
298.306 51.857 mo
302.95 51.857 li
302.95 51.494 li
298.306 51.494 li
cp
1 0.567 0 rgb
f
298.306 51.494 mo
302.95 51.494 li
302.95 51.131 li
298.306 51.131 li
cp
1 0.553 0 rgb
f
298.306 51.132 mo
302.95 51.132 li
302.95 50.769 li
298.306 50.769 li
cp
1 0.538 0 rgb
f
298.306 50.769 mo
302.95 50.769 li
302.95 50.406 li
298.306 50.406 li
cp
1 0.524 0 rgb
f
298.306 50.406 mo
302.95 50.406 li
302.95 50.043 li
298.306 50.043 li
cp
1 0.509 0 rgb
f
298.306 50.043 mo
302.95 50.043 li
302.95 49.68 li
298.306 49.68 li
cp
1 0.495 0 rgb
f
298.306 49.68 mo
302.95 49.68 li
302.95 49.317 li
298.306 49.317 li
cp
1 0.48 0 rgb
f
298.306 49.318 mo
302.95 49.318 li
302.95 48.955 li
298.306 48.955 li
cp
1 0.465 0 rgb
f
298.306 48.955 mo
302.95 48.955 li
302.95 48.592 li
298.306 48.592 li
cp
1 0.451 0 rgb
f
298.306 48.592 mo
302.95 48.592 li
302.95 48.229 li
298.306 48.229 li
cp
1 0.436 0 rgb
f
298.306 48.229 mo
302.95 48.229 li
302.95 47.866 li
298.306 47.866 li
cp
1 0.422 0 rgb
f
298.306 47.866 mo
302.95 47.866 li
302.95 47.503 li
298.306 47.503 li
cp
1 0.407 0 rgb
f
298.306 47.503 mo
302.95 47.503 li
302.95 47.14 li
298.306 47.14 li
cp
1 0.393 0 rgb
f
298.306 47.141 mo
302.95 47.141 li
302.95 46.778 li
298.306 46.778 li
cp
1 0.378 0 rgb
f
298.306 46.778 mo
302.95 46.778 li
302.95 46.415 li
298.306 46.415 li
cp
1 0.364 0 rgb
f
298.306 46.415 mo
302.95 46.415 li
302.95 46.052 li
298.306 46.052 li
cp
1 0.349 0 rgb
f
298.306 46.052 mo
302.95 46.052 li
302.95 45.689 li
298.306 45.689 li
cp
1 0.335 0 rgb
f
298.306 45.689 mo
302.95 45.689 li
302.95 45.326 li
298.306 45.326 li
cp
1 0.32 0 rgb
f
298.306 45.327 mo
302.95 45.327 li
302.95 44.964 li
298.306 44.964 li
cp
1 0.306 0 rgb
f
298.306 44.964 mo
302.95 44.964 li
302.95 44.601 li
298.306 44.601 li
cp
1 0.291 0 rgb
f
298.306 44.601 mo
302.95 44.601 li
302.95 44.238 li
298.306 44.238 li
cp
1 0.277 0 rgb
f
298.306 44.238 mo
302.95 44.238 li
302.95 43.875 li
298.306 43.875 li
cp
1 0.262 0 rgb
f
298.306 43.875 mo
302.95 43.875 li
302.95 43.512 li
298.306 43.512 li
cp
1 0.248 0 rgb
f
298.306 43.512 mo
302.95 43.512 li
302.95 43.149 li
298.306 43.149 li
cp
1 0.233 0 rgb
f
298.306 43.15 mo
302.95 43.15 li
302.95 42.787 li
298.306 42.787 li
cp
1 0.219 0 rgb
f
298.306 42.787 mo
302.95 42.787 li
302.95 42.424 li
298.306 42.424 li
cp
1 0.204 0 rgb
f
298.306 42.424 mo
302.95 42.424 li
302.95 42.061 li
298.306 42.061 li
cp
1 0.19 0 rgb
f
298.306 42.061 mo
302.95 42.061 li
302.95 41.698 li
298.306 41.698 li
cp
1 0.175 0 rgb
f
298.306 41.698 mo
302.95 41.698 li
302.95 41.335 li
298.306 41.335 li
cp
1 0.16 0 rgb
f
298.306 41.336 mo
302.95 41.336 li
302.95 40.973 li
298.306 40.973 li
cp
1 0.146 0 rgb
f
298.306 40.973 mo
302.95 40.973 li
302.95 40.61 li
298.306 40.61 li
cp
1 0.131 0 rgb
f
298.306 40.61 mo
302.95 40.61 li
302.95 40.247 li
298.306 40.247 li
cp
1 0.117 0 rgb
f
298.306 40.247 mo
302.95 40.247 li
302.95 39.884 li
298.306 39.884 li
cp
1 0.102 0 rgb
f
298.306 39.884 mo
302.95 39.884 li
302.95 39.521 li
298.306 39.521 li
cp
1 0.088 0 rgb
f
298.306 39.522 mo
302.95 39.522 li
302.95 39.159 li
298.306 39.159 li
cp
0.999 0.073 0 rgb
f
298.306 39.159 mo
302.95 39.159 li
302.95 38.796 li
298.306 38.796 li
cp
0.981 0.059 0 rgb
f
298.306 38.796 mo
302.95 38.796 li
302.95 38.433 li
298.306 38.433 li
cp
0.963 0.044 0 rgb
f
298.306 38.433 mo
302.95 38.433 li
302.95 38.07 li
298.306 38.07 li
cp
0.946 0.03 0 rgb
f
298.306 38.07 mo
302.95 38.07 li
302.95 37.707 li
298.306 37.707 li
cp
0.928 0.015 0 rgb
f
298.306 37.708 mo
302.95 37.708 li
302.95 37.345 li
298.306 37.345 li
cp
0.91 0.001 0 rgb
f
298.306 37.345 mo
302.95 37.345 li
302.95 36.982 li
298.306 36.982 li
cp
0.892 0 0 rgb
f
298.306 36.982 mo
302.95 36.982 li
302.95 36.619 li
298.306 36.619 li
cp
0.874 0 0 rgb
f
298.306 36.619 mo
302.95 36.619 li
302.95 36.256 li
298.306 36.256 li
cp
0.857 0 0 rgb
f
298.306 36.256 mo
302.95 36.256 li
302.95 35.893 li
298.306 35.893 li
cp
0.839 0 0 rgb
f
298.306 35.893 mo
302.95 35.893 li
302.95 35.53 li
298.306 35.53 li
cp
0.821 0 0 rgb
f
298.306 35.531 mo
302.95 35.531 li
302.95 35.168 li
298.306 35.168 li
cp
0.803 0 0 rgb
f
298.306 35.168 mo
302.95 35.168 li
302.95 34.805 li
298.306 34.805 li
cp
0.785 0 0 rgb
f
298.306 34.805 mo
302.95 34.805 li
302.95 34.442 li
298.306 34.442 li
cp
0.767 0 0 rgb
f
298.306 34.442 mo
302.95 34.442 li
302.95 34.079 li
298.306 34.079 li
cp
0.75 0 0 rgb
f
298.306 34.079 mo
302.95 34.079 li
302.95 33.716 li
298.306 33.716 li
cp
0.732 0 0 rgb
f
298.306 33.717 mo
302.95 33.717 li
302.95 33.354 li
298.306 33.354 li
cp
0.714 0 0 rgb
f
298.306 33.354 mo
302.95 33.354 li
302.95 32.991 li
298.306 32.991 li
cp
0.696 0 0 rgb
f
298.306 32.991 mo
302.95 32.991 li
302.95 32.628 li
298.306 32.628 li
cp
0.678 0 0 rgb
f
298.306 32.628 mo
302.95 32.628 li
302.95 32.265 li
298.306 32.265 li
cp
0.66 0 0 rgb
f
298.306 32.265 mo
302.95 32.265 li
302.95 31.902 li
298.306 31.902 li
cp
0.643 0 0 rgb
f
298.306 31.902 mo
302.95 31.902 li
302.95 31.539 li
298.306 31.539 li
cp
0.625 0 0 rgb
f
298.306 31.54 mo
302.95 31.54 li
302.95 31.177 li
298.306 31.177 li
cp
0.607 0 0 rgb
f
298.306 31.177 mo
302.95 31.177 li
302.95 30.814 li
298.306 30.814 li
cp
0.589 0 0 rgb
f
298.306 30.814 mo
302.95 30.814 li
302.95 30.451 li
298.306 30.451 li
cp
0.571 0 0 rgb
f
298.306 30.451 mo
302.95 30.451 li
302.95 30.088 li
298.306 30.088 li
cp
0.553 0 0 rgb
f
298.306 30.088 mo
302.95 30.088 li
302.95 29.725 li
298.306 29.725 li
cp
0.536 0 0 rgb
f
298.306 29.726 mo
302.95 29.726 li
302.95 29.363 li
298.306 29.363 li
cp
0.518 0 0 rgb
f
298.306 29.363 mo
302.95 29.363 li
302.95 29 li
298.306 29 li
cp
0.5 0 0 rgb
f
grestore
1 lw
298.306 121.88 mo
298.306 121.517 li
298.306 29.363 li
298.306 29 li
302.95 29 li
302.95 29.363 li
302.95 121.517 li
302.95 121.88 li
298.306 121.88 li
0 gry
@
gsave
298.45 112.541 mo
303.45 112.541 li
303.45 111.541 li
298.45 111.541 li
cp
clp
298.95 112.041 mo
302.95 112.041 li
@
grestore
PBVMPR+CMSY8*1 [7.97 0 0 -7.97 0 0 ]msf306.95 114.55 mo(\241)shPBVMPQ+NimbusSanL-Regu*1 [7.97 0 0 -7.97 0 0 ]msf313.533 114.55 mo(1.5)[4.42328 2.20764 0 ]xshgsave
298.45 80.4267 mo
303.45 80.4267 li
303.45 79.4267 li
298.45 79.4267 li
cp
clp
298.95 79.9267 mo
302.95 79.9267 li
@
grestore
PBVMPQ+NimbusSanL-Regu*1 [7.97 0 0 -7.97 0 0 ]msf306.95 83.123 mo(0.0)[4.42328 2.20764 0 ]xshgsave
298.45 37.6077 mo
303.45 37.6077 li
303.45 36.6077 li
298.45 36.6077 li
cp
clp
298.95 37.1077 mo
302.95 37.1077 li
@
grestore
PBVMPQ+NimbusSanL-Regu*1 [7.97 0 0 -7.97 0 0 ]msf306.95 40.304 mo(2.0)[4.42328 2.20764 0 ]xsh368.532 120.028 mo
457.708 120.028 li
457.708 30.852 li
368.532 30.852 li
cp
1 gry
f
368.532 120.028 mo
457.708 120.028 li
457.708 30.852 li
368.532 30.852 li
cp
0 gry
@
368.532 120.028 mo
457.668 120.028 li
457.668 30.8919 li
368.532 30.8919 li
cp
gsave
/1 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 148 ]ct
[89.136 0 0 89.136 368.532 27.9721 ]ct
snap_to_device
<<
/T 1
/W 372 
/H 372 
/M[372 0 0 -372 0 372 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [cf /ASCII85Decode fl dup/DCTDecode fl]
/O 2
>>
%%BeginBinary: 1
img
s4IA0!"_al8O`[\!WW7C!H\;As6]js6"FnCAH67k!!!!"s4[O,!!WQ/"9\i3"9\o7"pP8;$4$kA#RUtI
$47+I$k<[S$k*OQ%L`gY&.f<[',2,p'GDB)*#ok=+!2RH+!2RH*ruTN"pbG>'+PKc)ANi!)BTk9)B'\>
+!2RH+!2RH+!2RH+!2RO-71&d+"Sro/1`>'/1`>'/1`>'/1`>'/1gh:!"fJ;F9-Ic!>,;5&HMtG!WU(=
U&Y/n#6=i+!<E0#!!!!!!!!-*!s/Z-!!`c9$4?k7!WiH)!<E3%!!!!!!!!!"!!36*"U52;#mq%O!!30'
!s/T,"pY55!X8^I!<N?8"98TK&hu[L"qtDhEIefZOeE!pYsK\O;UOGZ(1QbYEe<g-6Sq`)U9\9M_DO_/
PG>HB(K=pe_p[NM-A)U3(`A!k77O)[<mt%s)Y2q[`73l?AT`]lV7":mjn35/L6e^F`n';G2b-q^GDDN_
\&[+`pGb]GBR#?#W49q$kkHSe8QfbQM4(?Rak>qS.QU1*C3kc+Wk-@,lM;(m!WiB(!sJi2"U5)8!s<B@
!!3`7"<eC45m:+!@3PnqJWV^]Z1&IDdGZ<:'iJL]nM;FI6\6):;^J/JZGHifdP^#PK,7LN#RLhT)(%71
)CK';<B'KDZbn1?e)U%QPbb\)eE$75FbQ*W[Dg\XogVtoG(u<[[`6n\p.&1sGDDN_\&[+`pGb]GBR#?#
W49q$kkI/0=_W/<RAma=g$/;^3_ERjHA\/k]#ralqZ#7L$j-M1!YGMH!'^JOP5U$)+et.h6]7sqn;:4*
5+q`7TltOuJ:5`OYDMe)]eHg$(OlkR4*qsD/Y9GV1.EBi<N<$5dkquIa?A[<;2fWiQ7)1Fp`s.5eRBOt
4ZjIUEU[RG2ed$3SuJOP$4;#igTkfk'&DMn="J!+JP^b]F0WiM4oc*@NX*QPZnu%Mo>I/Zrr<?,%V?Es
il*EXP9aj.aN_/b"?Ocu"K<BbLo1kV]5H<JG,XQlHSk:][e\$["[.lt5m_K>1C?8$M\4VFT^k<0\FOZ3
fbFjuTtq3!iG.KX&V5I)B%KV3>X@Ft6S*FJ9Ib+dck-l%a_O2)fac*D[Vg(tJElE?@@:?9]JBKeb[^*U
n0Y7C,HbdhdLtX-ZuIh_Ne,]&c;1f$c<!e;U!":QgcC]7c>`#g#p#V08ZBbeQOlfRK]A.(jr*)ec!E7f
>W.dHU-QP!M;iStU6lQ(.G?L%'Eu@BkB#=E,J`giUQ/SPi?39e?$m'k3BA#`o2[Cu>oZ`PFL"<5adX;!
+i)TsC(64!B4uoGm)M@ZA<'_t,CJSCC%<.4SspdG#_fQFQ-6PGI"Ha7FZJAfJX:GdFdb$]H(A*K.8tW>
&es;lRoYKs2;4Fc3Vn"$Le[K$m9F\fmQ2@=G&;fUHpGA9b7uc<l^N@IJL/b<c</J/UH6IaLkg]++D+jZ
_'t70?u:<$16F<0h84D9QlOAi+Q?sh;dl*(j;^:4WA\QH\2fl,10P@5#i]pEoTGi(2LU3XNZJeg/t#3Z
kC;0QA`5`nBjq/gpuLEiSR.N!CsqU]-Tl/t>h.o_E:e@CDUpO>CIB$k>!dNnjR&Z[#UAT'/O*mdo5tts
fUS;0L%[NrP=l;dB2osGo,Z?aHWMo_Wj>H"FOVnde/9f>`8llF3$O-'9lk<,8J3%ED,dWM134RH&SO0u
Rg1)[9VQA="&bP\m0mT-m^+bN'Vl`0osfg(cHj]m;n5W2bsXt%l#:3pH4CeWk.,KCEjFe_O#4X?WuZ5,
84m#F3^1p@!=idW*/:>6RQVpD4*Za&Y#<A9!#r(6-=Mac4;,ib;.DuCN53WjEf6KHZOFE)_OZ]_(M],R
-Y:mu2blLl@=qH5o.Id9SDrb1l8&(WccTb>e\qC29RRj_RJ%j[of\Xt%?$LIm7`'$<fI,;3R6qIJioWg
7G;dK1eJn9G;LT`np1^jLsI/#?3?&-0P6P[*'I%Vas@.0(3Vj/X#0B1US\f[Ft&st$usP:d:SoR3FjKW
\lcpkC1LD/:/CqCE@,OM9@.5J)*5"pA*D=.a((9mK+tnilZ*JnI<I\`UU0L/?*t\pjg/@c^gk0B/iMoK
UQF5DJ>K?sb`$eV_iHpM"VkojSC_Q@7diq%3l3<Z`#Rp9Vg:o"MN,CZdl./eK6L8Jg;6/l2C41)T2Ub(
`ZAUo6Tg&>Ojn#&T2SW2hr3&><tsC<NhYUj//p$!B#b*kE&1t"#6QlOA4s)M&.nDEj%N`ZTIf!<1G1:+
'\0&74PL*R<;A_3S$YbB1aK2%SPG(J$smRLT8H6iV)'puf&D-fQO0XV:I$2[*GH!><uC-$=_gTG:HXY>
GYGBg`E%jIeEZ^=SX,U7("k"GWPt?b,I>LLTSAXh\mA.$;9_CnI,!Z&6.P%MQFPm6:bf>#aU_;`ZD'K<
'2b[eEj0387)^Kd2;/UImYb78\bPb^P=NLYnFhE9kl`lbim[E5r;EDTk2r"J3OR?0Ih(n1;m5676%r$S
C#XA^l.3`oMj,f+i\R4XCC$-Up2=N!a-$dFo,6k]SgPK(@I0+]O`m'TXYQm=i,SE1Qi]+bb;/_'TL7&k
HT3T8^uj2gW'dAQAqI8'a"h)W4tB%n4rVf':/6%g8?g.!j-$E9F'YEE6/C2Pm34GV/<q*QSs+b$_E+hZ
WCT$]a%\>p"&TOb/?r88qFt*&P?"F_7&;\K1NBoP%g'*eb;J#/rYqE'_r;k(XpFE`@G6G`S$tPM`&T9[
YbkuGqco?0`R!4Z3@I!H3P!&1isqtFO+=2MZSi&I30Np#Ele_J`9!hKf.q?a6o7Y>;(sjVRQf->`GX^%
4rQicRABb_]78%&Pc`+bFEkGW'31C;=TWtRPM/'T`oH8:>gk+]*(FodSR:gnfP1!7JD3T&=,TsMg#^\6
'I:P`dHG/[k]N$H5t^c0eEF.,#Fs?+U9kD5IS'<O0SbJAV3QLHZgt,N9sYHnC+`Jn()3.f1U0H'3*?b(
>>2\$UrBRK).f[Ba)*N-:E8bTj%H.(b&pOhh)))G'5'P2_XDTW;$>Ej;$c[9g.kmL6cct4Dl1\B[2@9:
Z-DDA:iuNA.lh3,`GR]X9bUd!NA32rl]gII`iU,UC:-pJB;Uq<(%Y:d"hR<;VPKDl3aF&R)P'[#%OA+(
2cA+D@^f2T7i"]u/,QX*T[m`62"1<'%ig-mD_?8I/"0/lN4t)#==Pb!oC>+@#XY*;+[J9=a"BB/W",S.
4qutBNa8H7]Y:j28o'jj+i<Og4se0.AJ*F2(?o5e$?$),be-*6At3,[$5T<#_`%9;ieL[**Z7m8*)/4I
4dk:;V[d"+^hVK&[EMme/ct+oea\?re][IAVOY1KD(Cs@n?e#A2@g5FG)gpYIG$YV.WaEcn!r@Y]@Xs,
X9GlbF)"c/_iob]CAU&eaUlQnjdW@^Wo[#(g)=9:5g-K43rL2\a)<9'23OG/Y"(*^#$CD80+h8?B<A'U
)EUu[3bG]sWoA1_I5_OP[TA"L1X%gZFj/RuEA*/L"lD2NUR'p+1`5LLK']6lr1``uWl;D#Z:CYO:6u..
3;T/q'Y\iOVKP+pV=`NbCUH@&!kbjXO"Z/,>k.TIOXZ[nZgg!6_ns0KA,)&]$:T"uA_k3_p0'pr6<;Pp
d_]^d&V[Sa<8dPA2PW,d9lS)l/7h!m"&*>K-&f?6TmcN:XjcY'1n")-.o^.ARi`'0r[IA+ECu1e)NG+^
cNbFh*X_VcY+N)%X/sX?^5<F11MqbM`9VJXpf*VZ1\"8#_9!/kf.5&oSg(8(Xj69PW`Lm-/^*.MOuD![
V8^')WQDGt+5UV]4?mlP0[KKljZK<8EIFU>V"Qs<R]-C/Vg>5Ibm&!s"n)7L=2P/$d>:)#nA-+<k0(,V
7l5Xi5?4UrAp,1BNq49hg9l:.bB7.e]$bajFEpS^C0suG:L(M7g"[g9<g-n0eJ=<\2lb?r]bZeb)Y2[;
1KOnP:"rGK(,[OMWn015*HamX7BY$SQd$6a4"V5SM@V#7ddYMSGic9Pi\eT%)b*Mk1s@>G<J^4jI^2'G
G*ZBNRr%5pZa[:-BN6A1'(O4/@qG&3`kYKY\E,.Sn!9*Q'<B#i:XJZ_A\'GcQ/haC8a.WP=6%U'6([S[
H`t7g>>;>6ock9L=Uo4g7G)(4nC`^N<of4(V)4UEd:o`!enQX/-fpbBbWGpFdcKL;aL9B0=Eq9#*@Tl7
)(<%mNgkqO[?dSB#^L%LS%TkuHZ^7?B%2EpWnGm9EH&bW2*!Xlg75?'GAP5MS7JK:H<rF(;o6#ppWJ%0
jOO(`2gUjN/L9U5BklbVa%\>2C2KB+`AkC9<6G]LY,uX\9]k.:2HM%1N2;N@peF=DmfP*^Jr,@kfqR&2
p:#+>eT=5)e7Uq:!K<T;*8FCrG8X(GN14>\JqT&OI4f8WHCS#hPr#2_k&`Yc8mp+'j>bpsSd"F,@q=$B
OcNF6N4DW(D6h]k]Tp^R3c5Sijj1jZeBt=bH!ts^`Pjm/UEZ"V3PB<cNTbIfc3-I/.@f7mZ-9$9H>_Bo
O#>fu;;m9H@2%%KDVOb[P"pE]EM_+_?.8(]-TW9C-T;lb68#;kSB90^%!=R"<R]tfOYOOmc?HWP]0-[:
lDUG@@9hp"C&MW.j/X4<>k1`J,>"[Y+EcD_:uG!EQE?^mB5%X(a(t>jbt=M4@O8hJ&]U]kR99#aO-:S7
_J,IPI!DdHBViSGl0;n/XiJ<P?'VCh6!W%X*A^G<_HtD]XOnq)l,=qrh^'hd6CaT9XDfOX]HIA'UVh@o
juZ@<$q_.2nRm.#q!/m^]qLV[/EN:t't?UW/eZV^Sr\`>)SQs'9'$]6E48>9`3n3g?&'e\eX%A8\eo.G
C\>PQ[md&H.)7g$k9V`@(Om:k7:_QuQg(m/.r!LJ.O\AESEP(I3+D*Xk.)q'>g/0%76%.a7BgKgP^&T&
E3*X4QfH3H[,f9I\'iI72B%&p>P-3/l6=;WP3rQ)3Q8FO-C-F913)@Ya2s@3"prO.MY.jFP&<r9^P-]h
)OnAiBZ>#3<!"AC--7$'>]XXi37;e\jU#*:+-,$Oe7n^&]3H6K'p_]jen!0$M:f^H.;LUtDCd+D=YbgW
j;#qbQ@(<c;][4i6^qmQJ/qs$"KW3*a?$9,%6U.j36+r1R:)+[<9;"K>#$:"VRXr#V1pd@Wi%`MF%+Bn
MFrF=0W1?UaioJgf/AR=Hf^@@@Yj*s4W[09C@ORFo2i'](j'p^9apluQucLo5WS!oV^-B.r?e_-_URh[
<22QNAnnT0Z#Om7395r1N\nup].fZ-\W:ET$<)5\$4P)+k^5BpNLsA5$:;C:R^p2LWfAK+Us5d&8_U7b
RV!&->R>I*BZLQf/A"]Y"fjhOKqmVMV>JiBrp::#K>)%]7mp(`Ia?SC-(P>+SCUH]Q+]ARZtLoZ5\j%1
]/i?j)>dBP3McjTB&cOW36f,8Y@$:*Km:cZk5PEWWfALVU!KSrASV\Z18D%4\FS$>Par*)NXYHIJX[(B
\H0iq&e2>p;),4eom&"Al*8qc5T-EA1FI%"+tf"V0PPME8NMg)0g`M%dlJL5T7gFDc_$$AQP*&+N1r&)
"QM8#n@N9`ZML)Yin7&GB4.![%ksa3j]R.N`)kH#57)8f%K&3s><bK`V>t1A+uH+U2HkAEFnt#4N3ZJd
7[4cDo%TFiPuJ1.b"-SnJ5m=MbT*%I(GZhY>g_r(immn7B9Q'Sfg1aOc)rVmj;i,C1Po8YK1rr:N.nW`
dYXf",j#;E#a[IaN.Y[Ja:,p:c6FZpH!o1O"/^$u'<3?JQj'XcA_8c\9f]HaW/q>1P[u7u!5qF:YnD)i
g9DL$`MFiS&eg^^7_Ds5_4icfYi`DI\2t+&18qGfj#-XTddM7^BLd*;n6VkIfsNW&=(d.R#=fXF.?8,O
91BV,inZD1g"M'"DPsiuAI.h1gh0WbeNuN*bA&l_M(0c6F(-GMS,tJ"oN!>eV`md@4#^TgONA4O@[lOD
X435SGFEA.,B[CEB!uu\9<a.!J>XTMcI6AK_pi-!#r8+*d:fh<c-Yc2&]md'=#.0;L.<1Y3C-nCn!^e#
L%9Caee-H,jRg?N9*cS34]LQ(X^584EpV8o$uK)iQ?a&JkQ^k-C:-H*B;X,NH'B:[O/>nd>d'WEq^h7-
;0_p8SEMdmUDWTJh1'%X'r!IsF"Vd$PEU\@3QKBE(b].0c\>A>E93#n%*P#J6]oPQa=5:\,AbWQBZs6>
*ii6c&@FX,H,'VC9u]lW</P8l=A59UluRsj\ZIW\Jn2<[ciHSf*80THa9Q"C+=3\$;i;JaF`P23c6DPD
M1A-b?!O>gh69[dX=K\Ujs&86R4Y,U7)<Ul+`ct7j;-R1d\<ti%(M.8EF])V2?u*CXA]/QBsPOK#8/gf
Hq;B5%LGQr<F.\VUs5*`S5!$4E$/[JI-\/E]MC,Y23hJgo2DeK?)EQ_6n7>k/n,j(/3p\_AOA#,@Drec
\;\0?R;'_b&Ftt<2Yn8PGBJ5R"3Ek`94lpW36)kYRWqG'7`>q9En\cCXm#DG@7[1_VJ,Sd1(s"oi.)3N
6(!h,;WU@b_a^3&M0O`sa5N_g/__Mb=(-m%;(X+6Ed/^.`Q>^R7NA9X#.k"1X2ZTXI3u*to(p$N:rY4p
hFCKs(J?>>&mVH0jZ.BUL?r$:$G$rS2-GUn?'Z]8(NNc]_OG1p'oYH&S8jX(aXED\'HGllE_&7):,#Mi
39KB,\D9nnn14uh0]@h-#$D[3aX;JRe3j>DQ\%Vre`aYhl^A8nZ2jM;SK)6gU#bl2B0!Y!ji$nAT8s;1
M=nCfUh(^qr4WgYb0i&_ilMXGj2o\aZrkK8U8L]Bp3s?*XlX]Z?62Wr<uj)l_35;<\fBAnN_4f7bhqo&
'Ds$'PJ.FBd;(C::uUC>i@ao;?lTLGZp^<mAV;q.jt1S%q.Rs-0KAV<b,6Z0OsR^]3<dnm:Dds-/Wl<T
Jm"HP[_(Y\()flFWhS*&qM`&jcG>R$`]P+2+Z$o7'dGL(jG]U3j-3RW__P_^&om"n`H4urk!$+E&fcl`
U/m1D2U6M)QDEthC2PPtC9CX9`E=)Aa`u/FIBf>\QrXjk)M<<%.LKd?Zu4^VJuKHkbna/(F,7adFosA5
MGe36Os(>]Sf,&eC&?^eUH`dY94lA!0Qm;6R\WJ)>f,(T4>(60#i\=O&@p"t1R-aS#`N6)RZ@27e':II
C!R'FCCIb;%2l%"C8eQ*%#hPeUTLBX&\=Lal86p0*L<=$44_Llp<4bAA#$HLWep$)PRK8Z%(/)?-!:5F
B'EhlFF'm;L2fSMln]nJ9X"MrP>'/Y31O,HMdE58@nUWf1J[U`?^""BRh&c(GW8nPRbW,)!Q'[7,Wrr3
\Bl1;>1#qK\]qR2K<)o#<Z;Iu'?"14*$K>c>)+NVl%-k8Bf.4t&SW5$]:@n=qItfQ*m_1i5R?t$Ji`SL
>k$hq*UXqq#j-r!,596m/A9:G[2A#Uc4R\NG+NtfdFIE?3V?<)WQg*=fj`l47ug5:]&gi;1,U,uJt0'D
)4RGRc=OrDkbA-3.QM,7)$u#.=ho#1<!;;CF-q^K=@"F[$B^dY](s?@b8,s<1siC.O'ONY-B8+$O[`pB
cT*tk_\fdIQLW(tL+AZMb&M()2eBm(6GCZ"I=e;S\m3f5&Prht5M@ofmdq*qXs40/7oWsa`gfV968JI"
imF)^'OE8$dnd%kf4WO[Nug<c)*C1CE,ZQ8-M5HeBstIo>)h'*<HA3Y\8jU8bBVC[p9SsrJW8.?"QWX@
WLCM,/gBYh\TgH=X%rJDFEZc*>q&?"bl'/I3'*%-=KG^^EoIq)0k<9Z<AO_(B/^kHj5J3bP;ag26-Utc
fJ.&mjID[F(oT=0Ei*]Yp1--7ek`Yc`CncK7UkK-_C(h8O&IJ4)$n,#,YH6Y+P=1K+[4,'R7FV1'i^Zh
>h3Z%0La]04&D2Q@@E^T1-.K_Y2ef\Rr"*9,SiC\fMQ^Z9fu(NcQJ!dc-?_u*DUFX<*Ag&O%q.>ae*ai
9X*dT@H4@4jplbQk$cMLT[tlq$?I@P;O]JL4#gF"e.?Pf>gfkBE/H-YZX,;Ac8A716X78kN)N<7!Ofth
)eF'VW+=_i4f9iJrFM%M;(ff,jMSFs"j:rC#:PpJiZ1Bom>Qa!DA_L_?He(-N.%H]/&rr^k-%^[iT0@4
qOT!:NuZbrEZH.f0N@3ZR@W%$4AHs-NYDda(3M?mmXrd,?bBB2Ad5!bg_>QB.@Q4"-;N#(J;Ti)Aa/_E
fs3"fk2T6j3ir-LT/2ma!-*BqN+La(N*0mk7?\b2%.WdkheBJ^MKHE$rh\i6EuRu;`,[P-_aHuEbs&$9
$amg:f,aH(!h87f9u^g[k>!(3+f,mtcB<QMUJi(.;t4JK/3e=Dn^#dB?.Upd4Yq96pOc0^I'Xlk[VDD*
pJY\aRCMd3N\'aGCCIb9*?.DS9:+\]ErP=4+7E4iNgZrtlE/`Ro[LR0*5fZH1?E).!)kPbB8dch7m?>_
(>0T)kZVEl_b-nDbBdd82f*_c>FgPT\G)hB[@lcQ]Y1O@k3TAH:]lm3\+\#7p8L2YEqX?l:jAt/D*GFg
en<EMW>=H\n\sNJ;T[lMNdRU#g""KZ:Tq05=)?It*>`++Fr!30AnIZ.]8<.WZ5M`\2gBGp(K$MrEa)`/
TQ%:P`6la.[KP%OCrXYUg[SgN5l$0t%U:eHm9H4kHn7'ai_o$/`,Q"lpg)2Ge"l,F2*!*qi!a*Z,-$cG
bRF?o$oth>SfpMBBjTJeeTTVsk3fV4OiBC2M_Anu:YGp-kJOOEEn5l'?\c#$?EG*W42U3UcbhYCE;8k9
/oLoi\Z^Ci2e<$;Y8:p1<ofRA.ar(@,h]-HnO3r4]lSI['ule.9U.,IRYM%<4@([PE0XFq0J`?FmVY1:
c1C%^GT71,2]G2$Q:!#->bT*f%(#O649U-@k8Z;*HD?5GZkX>"N.%D:Bqm#0_Lna+gM+&:,HT4DJP=8)
1Bs&^E=T%d>dN$2bLueFf_+#m\^r5H3*VD\,rl,uAa)tsEHM?"LgQ%M[?b$LXc>H2Z?Tub;;UYYG:S?H
k,N`f)7q;)ieiDNk0lu+Vd6:Lg4RF>ggS`Q3iq%M?PoYMC8]#2BqrPJV_n3XDV#TeWEX2F7uGJ!?<rd,
nnd%F,N7Ym[fj5'N/B3fSAr0H><Na[7sgt,:hM_ccc%9,_56+Br_sa@a,$K6i)4dDVOpY%[m#+*\ZTgl
nDSLMkJW+:=#YG.e#:b_eCW['b_M1r`]-suX-bnen@=plE@M7iAdl(2)07%#nH.Z`?0RWGgYpl@#@qgm
:&RtBVH<]'B:EQ)71MpcDbSekm63/*#&_cG;.S^V**Kf,%%+O?ntorVHqafm/T\'g@AYD(\8QtJKnlXO
%&<DN>J(E8&r-V]nH?`='mRt5CA!_!'(!!&U_3*gLH(=BPtC>S2B5"TCRuR<>R(qV_l's'IoeG5q03ol
]1Si<+'e*C.og]]rM?Em6.:j9VHdQm`-;Z;X-NHb/Y4='Hn1=>\.ULc/eD)6T4h&<L5*jF_3e@e7E``E
?6Z7V93K3o7n^_H'[%Y`M1jj)[k);b(8goKar<K=3F%g&igX"'kNS2=_klCNRiZj\dd+P)?`WOr/rC/M
/EnusWTNdjm`M\i7<iFu3P9Q3/7&\EHKA<%r%4:Wg7^AALB57s\XNqB.@H8[><&r//M*-$AFjN<$o)KH
BXlsYc>Q^\WOr*mH\7^;-&Of9E_D5u->p2nVc'lA^EdZn&uA$5`6""]L./D<]132[3iUb1KC.f.B`A'S
ioiV>9d9HZ3$!BaAaVB2W!2?m>h+((;g0=NXD0CI*OBsbcuF/L>0V1(43_$eC%N.fdc]38P>.MTH5?d3
`Ou"XrXXb6j)M5(q.2R/4r\)s59"L3OKNB,*N+<k[YqH$O!HQNO/(Si)7:M/HCZ-dmE#n<+q!+NO2!A(
@H'360m4j5Ot%Jc8[fkX^/a.]QFu%;_\9=:.6VZW\XS49!I:erMh]_/>%^pi\N&j7Fnk`.`+JQESM\<m
(FLbm@uXJ)0XVdg]GQocm@("ch:W3@1fg#,H$G5Rj.NY`NWs%U_o7G=A'MoU-4i%8RDX3VS(@;(Q)^d^
9lK<?bteiXdbr[B^*rqBai0=#^t.eQA]**0de7"=WT8D!4k^(!F/m8!%lZLOEXhO#PltQVlKC$(RX;Y/
:fUeU?qbPV2?ne_V(r-G`*%P%KIgj%R5k()qDe:.oVBr;1U1V<>WeIu>O(>M!0_-pdO<A];`Ur8S7<A1
e+S=^!lGUk>j&M>pa#PrT;rT^U+[RuJk:%*N5D4fk0ln`NitV"35N:iQQh^?e$<V.nK"MGZohL$ekcjW
94\_?BW%#O\;Vt!USu(g;o9kle+!Sp7.RKs::_bdi/J<^[:K&%C@bIt4"OG=\B.Dudd\N-RS\8cB;a2i
la,jW=s#LGKqN!`XdJo=\)YQYS<f`\;4^f(_J%V?^,M%P74Oa9'Ds(7SRr7tHMo1*J5p7W%Uikrrq&4=
1]Ha6-[kTim-QdjH#8"O`24*SA]ldGil;YPZ/[&aYj.rfCq='p6oeSK0J/YH&;c<]kBf]N>L<(eT8JkU
.DdI[SDhV%/oPU[RM!!P92NALR6f$dj"Fu>d`+!\,lXROrr?a2q3+epA\f5$P'NrnjF^BuGpU)'e]K'`
Am;/1.DLU,0JY9lg=Z\tgmZhUhT6`on9q0YX[-IYRr"Os%G#%<EN]on_k1WJ.NP*\()gd+D1<4cMabL^
_LjQB!&8'-n7XA7:hEas=!nqa)N#)p82I!!DZOrXQ"C=!B%o<Ue\u+bHT*MZ=tn6;4rrL4#%]f!1UMCs
4^M)%m@@<kj/RC,G!mp'H=K7i$!QuFCtj^B-Ao$R%+e,YO`h>Z+s#tB`+[IS3jHf1[?:MUM'd!V134re
W\JMVVNdA`aNU#di`p23U`/mN:\+UBjiX;J#2J>VU3PdYMK:I@ELkfE)&+Y4EW)T)Q:Y2)cHk*e@Z,%g
l'cFW3CLP%RpQdJU^YGqi01@ql=2(kdB.Jnm"h%X`qH3]XUb]^`k$LXXW2OS+O5$b[s-J7ZCkC`"S3Is
3Z*+3:fAk_l7Lo8r'<clCsBl#NO\e22KY\7a#?%rAhrU.=tGe4FX&hKI'Ag5c]1k9="Kn"_Ukr"A-'fl
95\]WNp4_5YoelTedk+W.J9I2XYZ3lJ](la9MZ"r=,(,BY7s!B0>f5d`:Fl!kQ(+1b3MXh![?D%RXWYH
"kr/a#]tT)d`tLbN)lkpIT_u,;$DA(6/",@DT@:\0%H_@8e2?W@\$6c%02>P@Pd8taYRk)=D!AI^P8Tt
MYh6+Dbr1.=htPM]1)iQNl&`SU8'Fg%&E*0]qZ2IErb,IRgh7lM=!H%'s*eS3_^$-?;F]V-1E<>b[/]>
@r>>"(c7-_N9@+<Q[?B"Sit>`"!J*$P:9t"<8<%m\03:;'/Y4FBj=Rq>!+&LFW.?sKH]1;SJ2NA/rF-/
KOc#1k'KW#?ACd:#dcV;l2\;?J<c:!1:3h^+&WD2bRXHtG'q<U4g'W/%,FI+*CN=2i6sFB)fL\7ZIKZ1
7hle[a^Jj`/XK6Y,6jN%EgeI+aVgf&lCnZudcnj\_CX8KeaDcIVV+\m1Gnr[>[7%(=i3#-@cI/KEDQj:
%&QLaM;nRb)$i7,L6aWMmL6K9KXO9:p$8%uG*E'rZs("=CtTdF!)@As-tuD%k5.RSFIKaDaGA'2=HRUq
U]aRLbmo,!GBe-s=]nL72-?^X[F/T:/'%m88![:&-_f(K;MlLAf-QJT0O1Sb`*cXM>&Tn4->\?jRI(tr
KqTkkgH+cJb'(7TfAdkc6Cc`P.!>("=&=jWbXnE5$X54%ZX-qn&3R5KaD`bp-]K2ZgGp9b]g_3CZ1P'#
p^V*0bP.^UaWK=Q^2`\%m/&t6_Ke:d:Pc1TTZpPO`5oPB"FpuDi6oPteB6@9).n,V_[M&qW6Gge%*R(B
<d7)uVi=r"RLuI>`:b%Upu;p=Nm]"IX>9=CbX3r;YDbu?@hlDE:7M2".-U=>l#f.p$0Jan/+uGF@F@hj
FZK=ebGrRTl'kop`*H-50q*cN2`bW`I70@fLtacbWu5gBHT"aS)@4Vt:n,j%:g50CbI!XL,1EO7#_XId
"4K:o-C.#gU=EuZjFq&7c/ok_+k(%fUfN&\A4g?_U+e]#W/WT#XGN.PdRXL?A7n'*JI_9I+QpXs_W@MF
S7b:DdQ9KAF@$\#kTXh(1)?(>7Nf+[\PDp?`hL!)E^W:r3Mt?P5W`7&,"aa>'[C&gP'g%qUkEG]!Ligp
Q+=aDV&;PCVN,6=lCnuk1L\5[n:mL"R63Ila2s?HOl8Vt:E`Eq[*a]LD:)uDO(EQ/;`+@7_VM)L;PiNd
N<'UO9ZX/*>heK;?!aP\e<-0PTF6O46n57-fAtE!\Zj@GXATu*RdFFG)!pTG\tUI.7oD9+b\HcKioKaC
9lt0>iXh"!21Lt6-8p%B=TaWNTd'Tbk=;2ob.0XtBPKg]G9!r^e')<D3T=Z!`c?>^+bV]6CTTAJ5$fSK
q"Rh"k/;)o*S86AjsID\`QHUre;]K=B.p9k-_f):MPCd(0_*"d+EI$F4rHW1:0H.]3.r>c>Jb"+)Ka-p
&ADtb8t=Ek1%</J:+7diL0\a]>,l"W(@RW:X>o;'Bli?epB6H,j3luIFu/LoTPU:D_f.DELJ*0jE&73B
TT2Zn=[Al?4ut8S%l[WSDP50l]k)*W:/)E--JWpXSncD_1L6:d"jY.P+GZ?52Yn9FX4Bn.D:mt]C18-m
]q(8OMro)On020,N'`Ko)J7$roW]^Xf4lQ4':TatdN(FnN&h!2Eg]l7;4(8';Pu-,lnq$`Ht7so+;N&7
AN;H4#2!K!.%$N:O'/A5j%Gmq/.Q.0)%K?G!f!5(h=c4kcD+W2'^%b$FE1Q*kVUP\l]u*'Q5IrI'+rJ9
XsAd@V3^>dRr%5pG`BBHQQW,$__mXtD:h0aPbfT_>"D6:lDG@HN7`)@_W-Lae75q/B1WAeF9>Gj)IB@E
f.h=/(r]^CNsWmQ,,1-7d-C9^?-\d46#fT!*d_dr'KiFcSJG:*X2L]*g6p]s&>mHK3bKC;;RoR'R;V%=
%>i^UDhBEL6?0Bmm0Ud)U>XKXR6)lBDT3]r/d3SdPFDt!35R9XD-Wta6n-HbC3A5-/l'_]LW*7J!LOJL
R5qS$LnSGqc0&]bMOcrF*%5CaS'8JL9oj=rJsi^i9&54-d^X$#e^"a<G#6B!*7F50(6d=.\t;S-7O>C7
dbtdjU=<a0R]KLLYLX:%4%]pHeH,!)N4PSsBo>YrdBabQERqSA7!k@0#>C91EA8A1*fImfPg;=IA2NFS
(O?(?TQZHSD`s_&P0#;+(!Oo]C._F&'2dGfN,8_G_UQl+9j)Jjc>#RfP*KNoZWjHMl>uUN4Xr6h2L5?*
YL\k:XbTU$p9]@Z5I2P.,*$a>j9rZC&el\;[YnV[op^UqO,GqWZ4W$VXAHI%3;be73=3do7PGsZk*`Nk
*['e?8rB$W%VNf^0lWtVJuo`B20uqY0$?tg+]q<@ek]"8_A\>1RBpCs`Dkc2E`s;"ge&\MW1,B$ObC2T
3:+"pbN6B?,I(6<h_9-2Yiaod72$X&Mc6OZmWA9u<>'/;l05ZuiMbF!=Yjcedg'0Ye.jTK2BS9DKB('o
_nK'=>NfqCV"GqkK5B^nSYJX2Bll6Jegb:0-F8N?4F1<FV]sSG1tajY9ggs;P353-/rN[C5g?!n3oLHO
WK^r<:"\th.CN(_8#a(E2H"(ZbkubQ3)dX^WqOQ%fX;u'Bi,P0@HPnO*3<7eau0C"ErDc*M<ORkGZR)^
7\&4VEC_U=l+8lhH1'$H`])/nVK<hJ#h`:U#&4SAV!S:E6Iom_f^WqsXI4<"R?Mr/FEH"a_j7%A/l^nP
S@SPOgQ)l$;/jLEk.b*goNFaL_jX9Q]6[a)BA+CuWKftQm)N[@f]M:Y3k@`V-BTe2<4/%A4"ph+HCAD/
23qB%>Tm+dA'DV%?f$Q6Y/='bD8Q3RhtCq\`phfX$C[?.AlS8>\C&R<Wi=;uF(at^bZK7'9JLP4A$l,#
MVai/4$KWHQSk4K<P'h`PD'N.dlK\<a_s,Aa%02,=jUb&]+1#@pOs:X)5[?5.db!mTqAK*[):>WFU-F#
Y%8$+itu!*\E(:U&W_da]k,>ABcEbGF#PXiio"(037`YESCg.;YhL=Y<a"LC"Z+adUUY9g`N[iP)<7sD
)(;Mcdl#g#p0?rekUuOKPG5MEX/3W&b+q-HaIa'Y)%XqIn/!8CZCL^g%CgG)dBK1JQ.JOUoX[&/=-f^m
`sn@Z=_JsjP*O;kK1g*G>H+DDP%R@`daOl=C2IFfF!ijaEUdVJA3$d:(L`2%W-W%eqOFnaWNaUZEi0^!
D.am\/&h.jrZA+C0hg26-#S/;dNUTHB_>K;S]79L$W9/mV:2heF.m/&c2O"K%[U*H-*])uI^:m9N@$/(
JtENeA#T(4H!p9CaKuhkdq5oOobaVNM"n<!'Do79+oB2W.pUHeZ;\?^_U6a`fuiWd4YDd6SBI@haltX/
.",HpCo`SeKX1*M(;)_@7M4W>3h:0sASIVBH7gRDPI2h1=rN/P+k`40_TU[L3Nd)q)HS_:rL(PRVcBba
/htTU,B>fml#CreH/24j3B:!J/@piAN-I=>1'kI(-eb$S^##BfF>lkK\7[gk5D]!D4XU<MR^mm.)cpa6
)eqa`3aET\Gl:e),t0'RZXp)bei-le:NJpkrX@7G;gDZU[.T7^,(*P?BsW++*hsOR_(np79Oih3oIH"d
Tu#9Hd.)4%Tha8Cg,IQDcr/g4="_kkClX4U%5J#k`RU*un>XKn)4.8GA]E&NJfTUA]#?00V^uM_Y5+._
LE)a5K4S!"fc5q%I)O4m%TYek7pEsU3H!<sn6==aIZoeS+'80\2tET1[f0(n6%u33dN%%OSH-XED0WSL
h_Ct\Sh[fpO(e;TXeU%-Q:%pXUBu+Ooi#MdR@(4'/hTiS17Ld=c,ZgBE@7[D=iZP5%)+6PEVO=4:%GC^
D4<6E2c^HtCF+_2lpbb"'9eA(M3YJRZF41g[N:i9Y]2Qk2(oTk1$>:jDiV,h['e)^BfK::lF<)%=#49B
S4VeLn8<:X[!a+?cu)^s.\f"<l8WB^OuPFq(.e_d1Fl,P2*Pn9VaGGi4B-.]o_RE,FS"2XS27V$pgmU4
GbL][rY\-n5JCfRSY(<NhNqMB8M+ukq'u5&9RX%ZeS<FN-Q^4ckf5>oH)`FNqrEfMGT@cBjW>SEmMrMW
56;<923/6tba^`k2/YT`'a4mVRCL^YicTR+4=G56/DNQuLK->1d4iUEArg;uiO<g$e+$<s'W,mkTp(K$
oFTqZSiYIXE+7gMT:>>sKQ,4lZh/W?O0s=,mrp#JgG`9BrX<+O(4R5nR,[S'D-"!<[F=AdWk-S6?\:9Q
B0/"(*(UB"h(u4^O54$`l;-kK&Lo;u3iu0[S#4[)\W7`[k170#04o3G?Cr!1q>0C60$<`a$'L=PM8mZ3
i)q2"B5(qqla7>`6V)9HV1YVobm`?sh;^UPFVEV+E3;lL.=o<PEMcn!=CL/c?CMOoRC<@A_m)mP>*R;c
[P6ONG@fm97J`Fura"B*l#D$,B($5=f&:9.Os$Rj(-0e+qa:_&`j`:1P0^2kBC_F/^QZpC`G_3I?YKaV
V<mcRk[k(jNOdr.;OS$HBY-RGen@n:QP5jpX76:j)I<KT2):S0[a@-SQ:&N%ik(L$)Oud#QH'qIRt.XC
GZ"^PG0;!fRc\iqo#nZmY7V@_C3*,'nY#8r/lkj3:JF.#(K%iggZ^H_6msq^-\ZTB6\\Y.Z=nKfZq%&F
S%TlXJCDeZ]/Q/s8Eb,mdVAQOo,>:i"IuBM9-cVh&=3I`f.&N6D%\UJUg#=7\70?1K]Q-q?`NeDG,qu>
B6W%BLf?T7Kf#u/Csuq8`*TJ\@[\5c_la=#KmsN.(sEGe;qW-EjGa8lO.L2FHHMd@T4hn_/I<QZj#ZQ^
j2,,$:cL4`?+XsDk@rq]n%1e1"@/T>Br0M',INQE@oI`3k#S+\3*^:uUVriRmk]$^5F6Lqrr@N3+<]`,
9=0AHbHq(.`^obB<+dM@-]'VO3:ZK'/X?;RAk%gdmk)T1k4DPW0AEXQ(_7)Xo%@NnS1e)sMK><T*1j(/
m&^d05htW*:L)Gm*)Bk8dI;g#K`8A8'.bRNR"uttDAf"<e!uIVg)?Y(6ch8<l*S#S#FO$,37-`,c*SeU
LK?4i(5+P&b9a?bf,YTkrf5ZjFn[7/BY>o7/BZ#8[i6ZWQ5-+;OdCk`k8t"3MJa<3e`_BnAYmt&9#"QR
&*.pnq,bgKJZG;a4JYR@I-(VQQ-q,ko50+X5j%XkliL)G]@-Dr%^_8!/9G:l<)j=\2>W;(QWI[pdT8m7
*64(LhVC=S*>IU$RiNhr3kF]Z&5\OeFIG?]\d_sQ6F*'Bq]8"3l">s32,'Qq'O.G(_^[6:-,_6n$+3`;
_9\F;gc4[r;,#0\cJ2])Bh2jU6oYdc9sLD:+)=B*4-%OO#t8)?EI]j"e7m-=9A]ASVE6*'D'uDgV_GDM
%A'R;?u[O?``=\^N,q0*FaDLM'=*RtSSr.7e&?Kp7A4()kqp8pcY<n(aOsUh)(h42;CWS)jh"8#(A/]7
OrG^YiXubB^0.>^R01!HT$<QW>;4aY@.!JC>hR+`Su3Y8#h`QV&rVb%Ss^SZE3sD64?cI8bPgJY2>Ud3
0HLJ-"DFI2%3uhTrKe.9(X7:r<LHl:-o2*4V(sZ8P>WSEmS?LnFQ,F"F([8hZiY9iaq3dg(s6,]&>AQ]
NHUt:G.K40W\"nnk-Z(<0!@Qn*(NHDYfqMX9W$lc,Qn[a2f.^MQtT^Ml>kRR1ooLl^*o!s*#ps5ZNL^'
5U*b`l_SWM'<uNX"K(<1*:-I+V@ipo0hO/,cAi<\H"8[Ec<a:2g:Ff6dlW?H>%[*+[,)g-_KM6?`4A8=
-TXh2KL;Dm.7gHaB/"Dl6#uJZaB)@AAud7V:H)pI(]eUXR7NRE[#!/".*V$<#]T@M'c2n@ZGW[SFnp.A
8kf[7Q-B/STo=&j$@3S]977'>bC>b\pBJCnr4V2Mk9#G(B[C<$VTZ>S6JtqR>VXM)`g0.hY5r\X/ERqB
0Srol_^XT-F0UNib%]HZKHs`BjFD?2\ZjQAS#FZ!#[(;OH_SJ5l*YdZ:p!'-cA*JUA%SM,8kj7b0?aF6
^a7bbLs-3R&f-oE\i1b]C*cn=)6VKLR<,b,MTJ;5AnHoi*8Fh%ioHo?1!JFa\4+?TV3I7n-=#,:2,MB\
0PREgFoMFl1g8*i@qU.^bq*LM6njVAc?h3Wjcm3">^`XYj/$Zt0XM[9p0M/XEA\c9N.`af.I!BULJ'T9
hKN,%KZY%M/t'K'a?XY-1W7J#Pti<e@#/9T-5PXn1g9f@0.1n9b].]#e3KB>Ar,ZKNU/_[[%XfIRndR)
5l<B!`U!$ePRKp&)JkP\aSr8q9U7,MHJ"a(ZJXTKic7(R7-=a5HXAao.=K>5o?mFb22UpRdl3D(Yo/[j
'MCnXOpcp;jt*`\3>'NmY8aZmenVSf%jtkacN29(*3#AI:6RDV>('EoLfm^>T.Z<MG.=qV/s3.l_552i
4k$CP`=7oh%k?a8Jl1I(T?JV"VX-:)PKA]&Nlfc3KQ7GnmNZ=*AsZGoS\<?\lg[FO@c"df@t%U!`a,R&
"C)?!d[Ok37A[_:+58jU/#5rbh/d5fN,LMlB":kN\OLCu4IbkN!E,p%@;ob>Ek(YX44R2k)E`]Y<<0MY
>aWo40KQ^*O?"ru;%.hSa`pX')^]&",9@FU',pN]M`kVJh!A=<-./ns*t5@ER601'!0W+X*FsKbSN]ap
*Z^hQ)SEM7N`"[k)P%2um54[UH_M-Q3R?utR/qO.>ui]sF%iGl9T@NO^a[ALNe]N=>nkUT=fU&l%eEa\
GViCaZYM-YfUU[R_\bGYfjuIcXBRHf))9,@4q)Lsd7YS!^2s*m8&X*:j3s"lNh?g'_3.\K5&=U0/;Ap@
%4#aN4\Vf]Y&NL>$KK>sWe/p-b;"ju`<26/2+@CFV:Os.7rtEOEA(sX%_8[[X.54<f-b0l2@;*"I?&.9
o8L5kr;&P&j:i$`S[36i(6jg7<c?8OnnXbnVIddhN!BQ-e_=T`4`I"n%@@YCS^gRDl^/R]M"5V+i?t(o
a-[`%:2Dc1,Z\6>Q__``I,&R41..4n!oIoDXi#sU9'CD#TQaI1BFeA1[9@j9:JmtU8Q)e#[o$"kaPt=]
lnWaF'H3-lZl-@"iW<TF*kO.s8maP(ZaT5r`\;Z)F@hpmj"guF_uPOjh6@2%k+k]A>QgV'':,0[B+^YS
<'r)"Qs&CGPF7/Nie`NH^1fI9ChJs@dV:NIBTVm)Tq2>m4/ca)Mc(j%UFjr-!d%VR(iC*#;Ch=8FS^BP
AWM&-bm`"AZYL+8EsGR'*0/=b9rlM=mn#uM*BY8eg)63AVbGFQ$upFdN7fs96k=[C=#fh`V1Ip3gL^pG
S!fG6U@*A?cN]n^FkQAXM?VkI[)[e1)nO_ca__6.jc[N:KnOL.[9256=#J^&38l^\2#5CS8&IYLOR4);
Q`09M),^P0;O++pG_pb&%\=;!I:][hm/I&5"O3$ZSUN.]PcEUfaahAZB6RD/B'TX03?bqU)7*np4bC%]
^N#_0?@rhPh1hD)PR^?Fc'1`)n[D;"O[_p7__t\8%O'BSC,MCd`HFDN1FA_6HFVW!jHi;K_/?fceBC:D
T;R741dXSkk*&`FOkJLId_p%)6A=`okg"4jaj62](a3I!S,F*_*fcFc3.r9@S[5-?ll?;.EjQh#;$EgD
Og`HUREG63;[[nHbJko&Dd:7bB.lC0:N>(!31<G#^65B=#uf7^c@ge4?9:&O2$OIEG"+IpD6oRGnX!t8
+kLAn4A!1$iKC`Bm@:ggl1I3#MCl1b1M`o?jHt$mN>=Ji"]=/.Q;!J*e1p!E<CBjWbRF*a3]X]Y"4ai:
>9So-3&8UOK[_<+LJ6Ie21mhClSVjEMirU7#Gu>cVo:XeFg98U#El+2:>(8d5oB%PA(J`f]TP`o7NrLd
,Y[3QOuha_9r\;rX41k*6aG)$isn?tlE]G).e,tI27h%0K<Wd<K[DO/WQbXF[3lc9VsN'XF5*YXPi1q#
:Rbs6bn*``j-qTFHrj[=+,7?U.b)Q*FO^b3UsF+XC8b^h=#O2kaRkk)`d$&k$?s^Q4f+6Vd?h2tG>WV[
oZaNJ:EMN"RnplB8X/@Z1'\/2bA/,=))XN-iMY[A&t+_27h_")*%H!YAmUCK\@T9X@SM'kls^*@FMs>d
Ca_:MjHN"k@u2_[@ub%.9T85Kl/Eq&,`oo%;2Cf!i(?I!!]o0:+/:h+f"c3:WU-_(CJ2&F7^NoT.E4a3
G%O8`h(GM<b&T?,\Dc;eRNP(1A(HbicDRH@-p=d]\[B9-ZA>D_S$N,GI3(CukD\,E-6T^[0?:#*Scpnb
F"/*B(E.U(El'QSXsJ)O^f=>92;,AA:3J/i.^]7g(l=cQZQTmV,d\GYVU=1h9h).WKT\Z+3aFA(+qHo:
e<;50jcYkJ1<)%)$Q)etED)//aW;.-U$8)^D9&-nG!Y2q:_g-RA/ETS1.,T0A2QGY(T>A/8hm=,djB>u
8o_"JQ&tcqA)rKE#>mJ42F23cV3q&9:-l54CN=q8l4Z;jFa]gY"?_.J;+1oB&`]AI3XCi3F),:nXA^+S
en>&)FLomtEORL][@$k>U!c`T?L\6cQrl5D)07Ut`6ct"(NGuNBD-o!C!g_'*Z276T8o>dAV`<sFElk9
>"-H=):!!&E6[;)naT%p6jfI)a0$Uo2pXp3,m-2)k?$@5N[VQc]*Ab0+WW?HZmBnWk[R/Z3QgYu6e1BT
M,L01Ae$B3/oIF[&ts?Y7W_q"R,fnZg3A8P%QC2=3dk<E/0X1ufrHi$,*V!203b<QQ`\\N/dfDDB!f@n
:3_kb<7u&TQu\S(\T*HW0oX;9Uk]^hE*"N#3AguL*WWg,;u)%$hutQ>bl&<SS1S'=cuQ$)o;0lIj*CSu
*X)Q9C1c%A!QT)`)2Oh6WN,*Y,WKE'+[.;*A_st_O"EhkC#ca-oTP<gMk<Ts\MuGo&RHRnFf'5+rBH&0
?(9P9;h(RogGO(Ycgm]s1S/-9'^:!\C:2.h;ZeOcNH+K5=2VJ*H#,>pf.B.e.@Dm>>=>\n_C:m,QQ(uF
n>WdbF#+;qNPs#=i);G]dkdcPe1JS(^<JO]Q:o$_f_F6=Lq+G^QF"ICR-?TTW[q*eKp,_PbD)13P`b*W
QW7o=UJ4CUDAbpI(Q@1Hal+m]lK3^tUYpH(#ADPDfN5Lh7i(Oeq-&P2';tBWR?r\)`mL9b3(GmT021NG
+(au&:8:\R&"4dsG`Fe/lqS.7l>lUMM(5o/mkQ/5$pjESom5Qq;W-i4jSh"q*hI"PTB7+Ud-qe;T!Za,
CMBg)[q4hWQ0+Ehc<0,$opUBe+W>fAR@i1(i0+Z"dG,X>hRV*aC@M;oZI87(.cBi%e7s3`g1^c`[*@>_
':0-aM[l)7&ST52I,4"og`&BMB]qBPOhEm7C%6X`kHj7='d8mRY3d:UX*/o^g,tJul'a?$Vf=kD&s^Aa
B&Bo`E#2=(3OjYH)EBh-b].(mk2:K)'LZugAs6/gi\'7eWo4<N2VG+RU#"D^enj6CQ2XgPraspJOZ7&"
/ZL8D4OL&['Wk2D'[8XX(=TC+h*,"Xc\g)58"Bj:<CP=$FSd36.+QV8(8Hm(o@\)%ae8:\%']70@iVn^
n7j_13(nKS(,;[sj+W71,j;8I2]UFaoK7#7QW_,)oq-WIr_)g'J!@Uq^:!EtrrC.^:)EJnRpt^@,'tQV
OR5h$_X$)6kLfc.nEjR?<M,Rbk3W'WNc$Fm+'&7)R/RU(IuD7A+jAah4)jjKUcTW#]#P9\l7u"k['A-A
o'3_o_]GG-9'Hh#ZhB0DZbrL-<`nUTgq'X4kMt#fDiRiWfkp6B.6:Ng)LV28kJM$c.@VkeicY'*_U+X0
=Zn-i_A]TeE4N0"`g:7UoP]e)EHPM.SlI@$K\A6WXnl;.WGB.!XjGI?V/'<**3#=smE-/]Fq2@J2b7Sk
oSkAg3Ha1+=+-q33ZOS,KfeEJZIs<Zfb?Fs`nnJZRk5u!_g1+fm(RfsW:][3,l[j"l6-\]YHP!qNGafp
GC?$b^97=A*U0$K1obHR=eC]`&]Zp@#Dt/bW7jYAk>P'd2OjGaf;I,!<CMh3q9/(e'71`0CW<H\ct"kG
3(l`=(DnPnLoXgfY3`97%6T\ckcWE*_4,0<rRJs_/%pF[YPC9%TBH.'[(N^2>#,U.-EG'`VY/0./ZH`%
hU`4BR1:S-b*RF=b)VsJY\JDglVenH?Uan[46ms_rr=BQ7K-/eX4HUo0lltNoPu\[X`[TI^O3o?fUbiM
51fCCY5RoNq\HauakG@s8a\+d2AeM/K;4!i[!90\QfN4#*$-)*I'[h7Ya+)h4T$Ck_[d?eiHEF*B"9p!
`DKKoB$X1%%_kjZ/mLCKNHS4Thplb^j_m&,ac67#+F@J?OR0E7'ZlB^iaR!l/VCqa./;#]0*tfB/"5ip
Rt]2)W8_os*?8d97aqZJgIma2O#:&9jp%Vtk@r6*PWNK04FKun$1tF(;8Kkg'%5HDEOEr):AK8qBpS%$
*HO:PVh)b/VrLX!/"7MAV+q5#"g)!TAbeD[g0r\,<MPG,24D3s&9^*?,ns0^/"Gb&2\C?f()eY='(LqC
VF'G<)E`@$g\\!0>g:.qS`U>b+:[]K>eFNdHju:q.dNEAnu82sTC!X@($q>Zr3LCr\LsHq[5?YSe5*t?
3ntc1FZN4Q&O`&P.@O@^B*>B.[(Ahc2/4boc&SD,$#h]^YbB4!>h^5\=K0l1gc6qu*R>>L1`F*KnKi;G
FIfVo`iW3F<-?H5]-E""F5u!06^j4\>hNh5Sf=f^C:Mb5Em<I4Hk)W.37Pl(bdhN!>\N?gG_7`VG*TPS
5td/9),,1c7CHAp&>m=4Ru2Sg-<P5d*k@gRl*h!iFi#b6:/,)Mh$l:]nSMOOQYZ)5Di\K"2t^NoW:nL/
C`SdH)u@6%IjsnCr_MKsUP*Eu6.&n'hRLb:3)D[pf<(qK1E/8hmEN_kffSb*>C$dIXNB1D;Wd=Sg"\=C
k)P'AMc7Y=__.R9-n1,cFSZ$W(S0-K'"T@MPj:.#D;&5Y,-Rc1rrCBUhi^J*H-:YMpUq[1K=HJgbXk`h
!2SqM*BmBZB>tL($<K9*"Kgk[Z)46Pa_N'<a%JHmG-593`PUa!a_F5m2?H!,^bXk!P"kM<7[i>mK2GN7
UmktS5*sde0^:Q'cS:Fe/jRZiU2k7o9MFiYOH?>:2Ru:ejHV_:NODn3%&K2n"f4K-j,hBY^]t&G%.P3g
7j*Y*V5i!!EbGd8c-u!38e0fQW>UOE)2WS6510`Hp7BQ$h^'08DbHnW#m?uL7Z@*-R1RFIZ\D:TI4:%n
bY:Rp#,hhUd@PWKU!;Q/?YjHOXa?aHkk+_6OlE_*0Nb.&1FE/iM[>JHob>VBi%@ao"f;oVbG23PfrA43
-G9MIIXVDRr02b;'Wt@sZ(#QLapf,`:)Nbn:F.mBA<*1b)8`1e%UnWV&EVio$F!s-a^Zs?1CZmlR;SK+
ibR%S*%4<lRV)R"#!NmYUs2(IYX_a<RHantj22*Ad?)>UF*d5%(SK/hX=F8e1jSa`?!Zlj69CNMEY-Ac
jhN+gA'ei*:NCURkUZjK>bG>(bV)R._p/Mt<Y>bNJXW[GQ+K.u'Y*eX?qHPuJDil<Fud.]7.CLZX!3F*
E%9a?G28WO(qbW;7c]E6:77sGN:h)GZEW./rBG,]^G>8-/ui2u?8,.0j-g[eS7Y5Q&om*'.S`:Rr%K;2
b:lb6$J.=Fc]pWl[Pjih1M&Q9\.LhR\Q:6L\6D'j-CAASA-$Jg#mt&OF"V&[Mi@`ca]T[QXO!dJf\t+B
ZG(+[C$<+[o<&Oe9-#r"QFo+ccOhbua9)$R1CGh,7E``C+`Wcf\7haD-*)PpBiO5$/JQ5a(FH9g9q&aO
59:shDB/4eE`qp600U6g9d@R\f*Z`G4SWD7m,mQ?1Q7(U4E7ZqN9Bk;C%6$4h4NCd%FT%X%VO`<<(Y-T
l*Qo<+P"/qM3+<*>Gmi[34"Hq/!1]"PG7FF)-SY8'[=[1Aj'HbZuHQ%6r9E=7)Yf@CqtlBnSW'.R^#`!
-VSDKe3V*bbj%&@N8BIgV\4n]W]Oche]R]sSId$/PGa.PFP<4,HCZu%(0)S<qFn.HO&_3+7+>ho![ZGh
a=iP;R/3<m:&988.`,V_\S-o+Nj(A2JhkS7N5eOIl@bn*>./9A"ED$#4t348!1_JQAjA!/7fZ(M6j5B-
f?.]$=.tQQ=Wm4X0I0r<3TCK7EU0)'5+5AlHJM6rS?e1.^!^TT*d:P_M,=mtb$%\J#jOZTNa\:nSJ6m$
2#>:FLfr;sV9R]b[r711$=%1L3EA9GptI0uLC+f"6-]+a73Lj&>.BeIr'r]u$-*iRS8lXgC&k,P?*6l'
kW:=$dOq:O*&;`.;*fN]dsa[+kC5P]<k*W.8Gp`?cFG*QOE0'>PW?"t!ZVY8"V1Ob\&5s>=..0/P11>%
@,`ZKF'[f+>jhr[dmeB%H@SXp9EYM[0KGRJ#t;ceS7K0:R79jm\)YUtZF4PT@\W$pa_gXH<\R`dbtWM>
[Rb+b'<!EaSFk"piklgS3AP04-)8s1Em0`rL,cGQ,Zh&Ak.=Kh`]6+3)D&pr<=X[oZh#E$fUW/`3Aa%e
1HQXk836[YB*,Q-%1Z!V6'<LHA(JgCJuV<SrN,.n6VBD0Su]2E7r?E/"@K&%4:JCP4eVu.;D=$X/<6>I
M5f%B:!Cb$CSA^,\fGBR8I"giFLloF*e-B[/OI@H>HYtn-G:D>LmZ4X)8b]-L.ASsR$]>429\m.DV?<W
"']uoSst_gCO@s$`H.m&a!#`!A=sL:7W5M#:6RN/Ufs1Y*+DY_VF+[bABpbT#'i/Oj:2HM6Ss\]467@=
l#+Bl;D':6cKfJk]Bpq9KOesLSCXl<,:B26C*EbJeE(YsagPC"&<f[\RF1_OMj:sT!,-.>ZnZ_a^5ecs
FL'4A1eVDQ@qm?.;W@sP@NdFs:fS7f0X>E_(G6TrKuQTZ;]RbK-I\p8_PG/mc%\2eN*I?db:+n`-a$ok
QlMWt&1<nn2@Gs:?6bTfl*?7_SuBjTa[s_Sgets;cK\S(e&FmX.o]Y-%jmYK.it@KiU[ge*15kjc!8E/
NgtL'[=f3]6:*:RM3@Xt0m-X:PGZ2o!AdM6k2!*mm+WY[7ilq[.Gto8+ojE3Vp?PmIXE7@1E&/hYs:nk
UEke1WeAhT2%Tbu\0aa\R,kM]M+10l2Pcjt=GX9',#L&6)m3mtg67S]\'aH[7J"G3AqMIF9UDU'G%:p]
8)d6!*:%5bTu5PcJ6<<)A>Vl;PAYiq`ZU^>TZ(0Wdd!WK!:p)`Ul7T*:;pFRm^kCtEb!qa[J::pRkKXs
1C%3YN/O1"f?,SWY%pgFNosk5:/:IrP)j5[1[PfYBks+RoO9F0omB@afs&rbE-()E'7>(hXMbSr+%_d(
-8;siS4:+aGi$>,W<*F!#oTlC]X[c!0rl9"H!CiI][5n7Vb+#@+Js1*B31eU`,g3pDL!9q57u/268$"8
-Ao6,)'RkRGiZ>jb>(Sc%!$6@+EBlV&<c.R3F5Gn)<9][=WECNkJ/A0Yi[ZA=bmrrbG#-O/:,/7esPQd
oDu-B[&?P>3OR=MKH4[":h8!mQ=nm**S#aoRd&pqF/+O+hO)G\UpgdmG75R\$1J>4*.2G'Jm/iJ:9Kuo
26I8j;_3YtUDSm.@QJ+%*&3d=)_P8`P0["3,P&@uIkroFDB2AXS:mRKbY3`,O+pRa;"&7]8M1`<9XnT_
[QIGe7'9q[cVA'l2Qhi?CGY5^FuXF@WB^YrEKXS@&-CFZ1@.9\<^J6%67JC@/5<_#9SFW/m:SeACi5:e
euoqF20u6>lu^Y.VAVKOA!S^>b&b\2$rOIkD4K3laR8[`T+SBp^7/amA='FGLkML+Q8pW,^;hYN:au&u
A<EgPi(bKqjQ3skmmG6@OTZ@%aS<*g4!mIKoD[4"X[kGiZ8`!B!LU^./laJGClYI(bD&&CM/%s%Q,\,X
()hd/B!+KB0FKnd_UUJ'DHM`^R^#M?8<fQq1qJYXO`pLWL*9LIgG",@`tOgthNU..eE6'gU&[6F<j7ao
%U![@GYM"qLoQQg0JdLDc,HHc`XJR^U>IO(ha]=?Tm^*>K"<dIb9O1]CR0p5XW7UOO&a,%B;XVp7$)IN
!),@n-7.NB_td\Aa!%2?/WQ>*\S!4]CPdk)!A[unAi<rMN-d&uc$"?\T8$CLK"7o+4r7df4A)>/k.5l5
$_7_\+hpQZJ"8LNq*<>"%'ge(,1epW"?_F,\C3s(3k[qk9$fS0k9.dm+D1(<gBZkrH@IJmOJ#S8rr==E
/rgOLLlND9T2VlMG.N)D)Bg\JRU&F"E:nDL4"#r\TXCY*bI2>iQ9-G)1h,L/L:>*04XYuhNAE4-GhcHF
JPDublrlJj12<d[VTes!#6ulh7*AMu#\a!#K0<9JBF:9"V8+O=7hJfg6(4n;bHeo32#2#)]WD90S?_T<
N9OXtBptT1O,;QS2-_WTrh.LO9a;'?e+ScD;YmjIR$ff/0&%1W?WHE+`7H_3I833'r(pC3Ka>p$-6&=o
Rb^ENV:Q1HB6Dmpl44]b)(nNeF$,n15dq_ph20gbjM54tBpE7G`2QAk)3m3k2WD*`3@q/M96j@q_[d;m
3I"2GV@UgeT?QZ+[<!Z3pd:*)S4-a->h!P#:=DcR7`-6fQIfk2?B[m3M,iT5C-OpXlQ9d0.>.p:ns),Z
ZFlM@75E)8Ve*cjfsT4&89W7TQX==SC33DdP".m1/sB4BkOgl^.P/-9a-+?DSiSJ1>\0@f*&b;R;_6MS
*&QJ#OV6YFN@mS_kC[pa+sK%Ce]*6Nd`TsN2U6e7W4U8.YeQ4OLba:HP7L9=L4_D<=RcsgFY]VAQ+,&:
7>oUcHG$tgHZ\@CdIt#H_7+XAH>aR]*f/&Onsd;k9_(gkGL&_$S'q-+4C4g_HOAq#Xd-NS*&e?d4?M^b
X*Y?&dd[H>')J$"Pc;DMT7pjonZHsSQ&!>VRI*,N*ME@+=jiioL@aG(i]"lf*uBJU(D>;S/]Xuff0(..
1DM]-*k-qbF4*ofIN5j=2Ng$=odPaGnL2oV]:Enc*%CEfRi)NKc9&36R?'=I2o8fMellZ49dR>(eC(F=
k.aihg!@L8h%1j1bsBe-h3c^I<2=8]RG(n'0]D;;ge%WXnRl:'NBu[6VW>.*gl5-DjKY",%9"f(J.'k=
5%urbMP(i>.63M#DOBJ\PEV/n%J+(gm,2Cn[7mo`LC:)3cXd[D?6`.nlJohM1t(>Q5hX2$XE\UJ].@r"
S`S1q?1X\AGb2ZEK$Y+p2.OD]QHKZ.4Z:C6DRoM__A$:!Ws&W'pl`1md`SBWHIu+*;8.063Vm&p<=RG\
GKm9Qe/`Aq=_oEdP;?`(2odEd/Wn&XZRZ?k+"3tYdk@:SBnY_S-f6eMbs'Fj8Y:*8Dmj^*X;#!!9q&r(
Dhg3t`V[\>=Zm$n?[??NUVX@L4]ZFa7*!Jufgf!"#6=#d8MhddZ^U8TSh7XB@d,A3qY.^;r$S<<ZCuo,
XY[A?B^qO=c<:\YC/$&bZS6)UBG0>7=+`1BqL5=;cM!!ZJA$GDG*^q2;#]o;#)eJQ;qaks)kD&Em(>Lk
4L]$9nSL`4X.)7qZ\1C,*g_\Wed\sVbM#&LGM)O,/neoR]R'I=4IRaW*`SfW`fj9<>un!2#XQT+WLYr7
>V5-H+'gm9jb"nd_bN?BLo@Oi(/E8kY$<dt]@3WYq5u(%bAaRl9Y2#6RW?E6=#*HSE)e,EjqasY3I5sg
M-cUFa?<;])>(;rCmGr<R,s=H#qAp;6_r42>o'IEQ+Uh!#:C0MLC2&FN(k001/lj;h0S316Z,R$/gcuS
@:csoK3YIc>VP[8e8j;qf)a(1&i"A@i[i-9ZAX*PQL@HOk:Jo_V53V(i?&f3Eq%IWc!"a5gKJ@$VX//$
,s1ntf/[N^JaYF!RnKE]Wu\h5jYpn?4Ts%\DbL7n&]Z7jY1?EN13$K0lV!tYD^V[<fg@jNk<Z#pnAWc;
cc%3<Y$Y/WG.8H%;N8+S<3`$_IOlI53AXR$C?B%]E&a$&`6]B4VbCS.?G?t[jSe+d5Ba(IoJFgAVmG_q
3SJn()FSo%9[]I@ATksoGgPmOCu":EE5C&ec#ZmGEL8ece!m2!Q*5&iG0Y;7.XM*<cbW7<U[=NL2g+rB
1r;QJk'iaeA.L&dLcEO]4D0q#\a98k(ocQ'g1#)+pnS5J0X[?V*4^Ai:P'O"`XG#$>n`]7I9(FNR6R%r
EVt8CGRZH1g+Y:*=pY1g7Ka.]F5e=U-6/\4bUPB,;DFAa8;TbE3d`s%m-R<E3_ac.8m*YCn7Qm=bBQ\"
lESoJM1IS0+)'f2mPHo).tl/@Zb&3U;ijp6FOK/g2%ee7899!PK;[3j9"D4bftl]TNC0)eN)gpW)/,`V
p<=q44Vr$l4bZMXAgME<ahAmpa^!'/W8V`:i8RXFbktY&E3`kKED5*NkAIak.EJp5W6<&f1%?`4VI92s
:2bbZ0["H3G.`o?WE.46B*&N%Y`g>+EG_-r::()jFS\^sQ9#H)jOMq,3:t]=AD8Jm4dHs>cp>sFdWU(P
6*A/,DVSrn4faL[[kk@2G]^&<F3[iFKSQeZG)2$G5U!:?_m@S1YgiBV&a"mbJ6&.O_bJf2#2Xi0g4LbP
41.h%[.q-73^!3tc)@5Ac%H;H%/IN+1.MQ_*ufpjY!81%q3@l;b@5iG\IT9m79l`KZj,;h6<-E6JN\61
Cc"O;,[4fdg;$?%7[/Fr&;JH:Z\cNL$mmc2%7*\=cOJ1UKJM%k@I%1>LoAcjNKmJ0NaV%u*0+V?:kBlQ
O?><jWpG?cEMi+h*ictZ*nc2DM'k+TA9YS]"D"cN,UCDW[O*D*(`_Ds0hs?j;jK1+3Ba]mVhjX'1R$3[
PN/(XKMP)FEffS#134+,!-5I-PY*kSdq?YZ4)?p%&J7`BdHblW4,kSo'MkYek(7hOAFD6`'8hIL.2:!s
*/nnme`h=`+Cn5C>jc];YV;1/)VlPSOV#o]<N`m!A##t+E(4T?#mXrHJqoo'F4p?1VcBme#Y*]4*+"Ch
P30+"-Sc1/+eWQ1<sZmiVlG]F@A]8h(8ESSeD.-L'ig>(fB(GE]:G!\!q=!a`AhB9Otst02dr,a0hK=.
Q7<BW\n9Ou:Ciqrc&[pKpnGu<G-Etf4XjERVJG[9Gb"-SIMEJOAI7_]:(>4TjE3Hn!d*oO8Aq/=c"_K^
q7R!)KLL)B"#7e%aL@\eLf/L&B4004_p,0<)HI)%qE/eVUt'"7Pf(s*Vh^,KL0bToPK,@7)DU%1@+Gq?
EunUC)\*_E4,519H/onZJi>'[A^=G81$%<69pS]>WT^`G&+f;MErQ+c4r#u3N6K2?M/b<885XIR2Rmfr
LKg5^JQosrrr=)@X20p"MDL]\AuGrIUskKa8AOV]*CcirY3uRb"[W4VQr0*Ee]X1e*f<k$e#$dB0i$LE
<_-+'QkQ"p/92>ER5.1PWY:ON!&5'3G9!F@!4IhSKoE.g19kDA%R*R,E"Cu\Gqo%E+d9UN5DdPXnTQm1
Aaa!N]Q5'#K5o-nV2p#83.Pb06<9ZJk_a/<[A=2oQU=UeF(ppH99Sp63p$pU>E-tWBQ=jS$0dhE20b0@
.mAkB=%"'(piWp\OukPc+dNbs&Fr[&En[WZp@V^^R`uuaN*_pUO/F5OS8jht67#[C]$fk7'_4D^VAsd,
4EG(o*[#S=T)hn\Y$pM4:0&@CTfG3sgTt>m3mDpr6%/?=R.iYs?>A[)c!I,cMmC/)PsZCcfn0`*'&Cct
S/CUgn[E>e@+@[:E-#`h'M)VQB*i(4?$)j)10u#SI)_bMM!X1i57$(>hRSu.:I3"FT$!jN4`_-6ETH4q
Wa*qk"jVHr.@5CXN!",9aCmu`B<3cm;F*=XN+ERb,p5iq2p1_2'[I>bX;h80a^?lnY`<*8VU?I/_kmnj
>sV>"3O6PW!PlmE788W_gi*;3SBB[5?8tG5PJgNH[S`YD2XE-=M1lIfdHe-U,A2(l_)ZR+7iLblSA(n*
.kaDjd=;s(0-%i`U1S:Jn3B8K,)k@B1<n;5EQ&@N^2J,iJchmrJ.gfV)=$Gtdb;?I#&89aK-t</^]LW'
bR0TigPcj-ELC!I4M&&VN:B8+`:V=BQQ0M[e*:OVaZq@sc)e52&9WU>bgk*^=._,5`ss\d!#3X;9\YmN
$<kS-m!0l*3!R6YN_H`k$up3Ab.Lk8G]?S1F(?ULf9dIYCRHlNj3GPHjgHVAHUPan0"I\C%8k/fm^,#`
5&6ro9]n8Ol'JO=rm-.n7E)SL*jZu1[@NqK/%fVlCtWNF1Wdo)2-P7bjFrk[6(8<Q+lV0OBBB*b-mGp[
VK5o(A:(s7*BIUArp85he'.?;TC!K9F>W'2SVLjr8is\'\jT,;<B5u>&IqQtaK:_!b;=L>(;3`t'cnW4
e7FTpBu_X%6urlC%@k*W[md,!c>toa9>/<^+M!VZjZ'X]'5bpE"pdds%[k[Wob&m@=+VS#+X$0C-C,7*
h<4GdPYTD8a"g6,(4[bX6rb7K:TQ:;-YoOk#_[M9P;WLjDi6<,fqbfF]0iISk1-Q_EH4lB8^57g`'r58
P`1m=/o'h9:<':a$_EcO$il3*B:OTI8LH-N0H,nl>"HhH'#;R?,/#cV&eX9dc6VscLjS5$Z[gke#q1VV
GKiUT;'X3:C%+M7&QE@p=d(D-mZ&-YXK80RP/j"hjR36@M"=m"0-7ZA%5ps6:+gra3p)0ZJN:HniK/to
c^#iXTK/4q(l'&\8?*jB_p,,4?7Z,"!6fm@9tu?M7TZK]fkBm42d`W/>a.6'c+qA[%]JHYgJh\7+[",-
fX$;]bF7r<)2g(GM5M[]?it`aNQOhk`M1P>(oCE*YmX2W?Q:k9Q<:Ss1;'"8faO!KaCROTRs[c6<)Y.Q
Vhp)sMGS7BRnP)hla$R!J/-1$6j>B%,opfsCui34/;:c%An)%0De^drd.*MeL5$9I2N6J3:,-Y<n:YnZ
E??abp3]TIO(_(%KVp.W^"&"W*DV3/S?!n[Y&W0IHtU(-Qi%k*m&:kjV1luO9n#aB,f6[SDM7MqjRn,c
Y6'[4G*ZmPCYAIh<G94m$sLOb4!p!7dmaOZoGXkk9s)l`-n1k7[V1L&=brH06uUg:qQ2s,f1heI=E2SF
`^WI5EWZG,[*?mX8/G:+0d-cGeE9?!as..`e7(1rUiDFjK<*UColILO'/#045g2No'C+["/>:HcfSn"i
#Z%LXRT"u1SBH'!cNZ)aicqc$2<Y3b(Jut`:'cbXC'Dfi+InI0;?RQTh\L,bj8I`0ack;cFNPn=:%=tn
2^Z))L+sos'.eqhYpV07YLVbPh!H^-2/sHNX.H-/fZ*uMI6(qKjisCEG;GAIShajd7&&@sLQ4\^*(9F8
QFeFo1H3$Zj3V6F-;AAEZd^8hR9u5<@cMoL7S<3>k+boi(MTb.Os'hM2KLBlfL/^#C1_@E&Y"WWa<HCK
>;oZW+R1`+c+'OO<NO]+NLP$YIO%^b!6lnSALT]jb!n*aDue+q4JagmkD4p]8G"pVdpTEEFW%-V1l"!!
['6H4P>`u9l5[HN@+'0Q?EtQic)-D_Mbtf"TuoSN)o"(,RC:@@.!hGM=k$9R55EQ>E*QZqUGYWcpbLg]
ETQ"1[VhMRp9l#\<S<dc.m,"Lk&Nl/l88@+;D8B_-Ue+q^<kF[]@Ul_o\+0_o(n>9)-[rYAbs=AVO\d]
/JtNVY&\e2H(M&XHGZED9s\c6_mR((<dQ;I.W]A6S.TnLLE(p<DE6$dNbc,'m&_kfZ8H]%j&<@WO=Zc#
2gq$_RX+>Ndt)11.@jd*E<h_uGY=0tEQs8p/hFA0%)39fiM=,HD"TXh""d]E\AtB'a)8&+Xsqf)8'"ah
R]TYDZa/$D]M]I!nBQM`XsNDG40jNkps1M0r_Oc`T4<T"*HQ(km1N`P[(A"Ye=&Q]csbEA]Z+1r$S+oo
3;A,b-c0-:)IUU_!_\_;+\80iRi''L\2#>OEjeo1)!9W_Ki(d7@HGhoLFXDe15^rMAqO<f-/IfBi&*1*
P1"gLNiUO(X^')lO+G6i4sa0)HKMh<T7PX/n/88DQC4k8]SS]PU%G;*&-Fg/D/U#*2&\(YL1*QsK+,9[
\id7VR\DYq$W2\9be]U1Q<`#%dT`?)<D#$iRlqOK$?c3Y8M._<j^"W7#2:sHnS&o(ER&&XYg)C9kr9WG
@?An>3AT*U(nd^h[WNK?2U=Icc@ol0c2J\f0Q`_'ECmu^JEGf>(q>1K>%U5df$QTZi%d*RVBVMN;`/0(
ZWW2.WRtaRV%"eWhW]__dqTB["&-."Yh'c?7DU9!SDS#EGcfle2*<:\4YoMjcG#>()X:7iHM>Xs%qfkR
EHR`I6[G"X]/j70l3=/BWlEfU(981hbL:!rM"PGLV#7(NG9<9TBP3X59\s1)eiS!,[<Ia:1!!t1=[*AK
Bd:VbQr?#iAGDb:ZXLaDO_-.agO?%R$Hna3F/A5O2:KY?[]>i*59l_(n9AC'URR4B"jBR![jj(QSZlND
[E<nI"7;'%95Gp*%J#1"/,QW#Z\n-T[5Y>VXB.tnrPtd]pWZ*]'AmtF*LBr7Ei/YhOqd%ia%4NT2gpsL
MOlW5-c9eAjdeBOiOi=8``sak7XCX?_b\4cd'%9+4eYB8GgP)_\+[]\eDH]@g"UOGBW7E0opfI0SsP.L
/idj*iWcPL!ihF42>W:I\_&c]e;mk@9rHobe7[cCV_PeV08FG_ZF'T_.,J8+!k"nHB2RY)\C#I_J[/CH
mjSV7k^7=h<P,f.A,824&7>:,Dhf*'#s+W$AQ3q"OZBTrh._#F*\XlW*"l1ka#@*DieKsk?5Zomb>+5S
`i>B(kEremi40]`j!(.WNbEc,;rTm@%\J;Xg6nqXMi>81\Te/oBsW/Zd-g/+]$6<g-RP^534,1e"m7Z+
GimX^mt,gEG"coGDS-;b`%nk`+uC"(k/U7:%L.2U>_9LUU3nQF+iM-M@fBfXn/U7>=T50RjG/-<C&'fk
r75II7oW/BV:ReW)STt0Z;R#F1p/1%8TSC*PCnpb[!A_%3upAeq\cJjpTDA?h4^>*N8J+DjLSTghLoD]
B/tFik4G45gZLMoHS3WM((<o`eLSB0eoi]:M=#bj./N+(Wqp%G:\>oYAsQe&[Z;`<dkAQ12.l\a#PWj/
PQ'LOfRJ8^."AgHQ>h8SotA+NFCX%.gA5jl07VZFQWWt(1:^Q:%,U\B7tUGiWo_Nq0.2Xtbuli(S_2n%
>h3HJlljJjl'90OB0W4'->kZcY>Bt$h<F_rI/MSC=.QZ*N^aGSjio/hom0tXqB`_nffq%LY^K<Ek]m@g
&,X`24P<BlG>n>U#+sX(rr@o(G)+Gc@/fBPDO9Z""koKh)Lf6Lp4(N\HLIh+2E`#iW2MdiLU9+SXUdg1
H-C#0LJHX8*?R1C^.9.5WpKJLf-*@s3^<11L]!mXAue/Gm'-%dgG-auhK^M@f/D?#:9RO><\E'ZXE-4U
RBCVgs4I~>
%%EndBinary
grestore
np
gsave
412.12 120.528 mo
413.12 120.528 li
413.12 115.528 li
412.12 115.528 li
cp
clp
412.62 120.028 mo
412.62 116.028 li
0 gry
@
grestore
gsave
412.12 35.3521 mo
413.12 35.3521 li
413.12 30.3521 li
412.12 30.3521 li
cp
clp
412.62 34.8521 mo
412.62 30.8521 li
0 gry
@
grestore
0 gry
PBVMPQ+NimbusSanL-Regu*1 [7.97 0 0 -7.97 0 0 ]msf410.904 129.563 mo(010)[42.3685 4.42328 0 ]xshPBVMPR+CMSY8*1 [7.97 0 0 -7.97 0 0 ]msf349.083 122.037 mo(\241)shPBVMPQ+NimbusSanL-Regu*1 [7.97 0 0 -7.97 0 0 ]msf355.666 122.037 mo(10)[4.42328 0 ]xshgsave
368.032 75.44 mo
373.032 75.44 li
373.032 74.44 li
368.032 74.44 li
cp
clp
368.532 74.94 mo
372.532 74.94 li
@
grestore
gsave
453.208 75.44 mo
458.208 75.44 li
458.208 74.44 li
453.208 74.44 li
cp
clp
453.708 74.94 mo
457.708 74.94 li
@
grestore
PBVMPQ+NimbusSanL-Regu*1 [7.97 0 0 -7.97 0 0 ]msf360.101 78.136 mo(0)sh355.67 33.548 mo(10)[4.42328 0 ]xsh368.532 120.028 mo
457.708 120.028 li
457.708 30.8519 li
368.532 30.8519 li
368.532 120.028 li
@
PBVMPQ+NimbusSanL-Regu*1 [0 -9.963 -9.963 0 0 0 ]msf349.169 88.8164 mo(Space)[-6.63536 -5.5294 -5.52939 -4.9815 0 ]yshPBVMPQ+NimbusSanL-Regu*1 [9.963 0 0 -9.963 0 0 ]msf399.743 142.429 mo(Space)[6.63538 5.52939 5.52939 4.98151 0 ]xshtrue set_gvm
%ADOBeginSubsetFont: WGJRMX+NimbusSanL-Bold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginPBVMPS+NimbusSanL-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/C <1C60D8A8C9B6079FE1E4FFFDE1F32FAA37A10F75E41D32EA877BFB5D4C62B5EEFA8ECAD59EF88401D574481D064892DE3DD151F7A55A8A67A56F183E25AD99B1D0400E49A105B8251D09DD504D0F5E75DE503803F5A4274A48C1D3B564D81C0850CB4C47B2D1F7BBABC42B7D9A> |-systemdict /gcheck known {setglobal} if end {end} ifendPBVMPS+NimbusSanL-Bold /Encoding getdup 67 /C putpop%ADOEndSubsetFont
reset_gvm
/PBVMPS+NimbusSanL-Bold*1 [65{/.notdef}rp /A /B /C 188{/.notdef}rp]PBVMPS+NimbusSanL-Bold nfPBVMPS+NimbusSanL-Bold*1 [11.955 0 0 -11.955 0 0 ]msf332.862 26.2262 mo(C)sh463.281 121.88 mo
463.281 121.517 li
463.281 29.363 li
463.281 29 li
467.925 29 li
467.925 29.363 li
467.925 121.517 li
467.925 121.88 li
463.281 121.88 li
cp
1 gry
f
0.01 lw
463.281 121.88 mo
463.281 121.517 li
463.281 29.363 li
463.281 29 li
467.925 29 li
467.925 29.363 li
467.925 121.517 li
467.925 121.88 li
463.281 121.88 li
cp
@
gsave
463.281 121.88 mo
467.925 121.88 li
467.925 29 li
463.281 29 li
cp
clp
463.281 121.88 mo
467.925 121.88 li
467.925 121.517 li
463.281 121.517 li
cp
0 0 0.5 rgb
f
463.281 121.517 mo
467.925 121.517 li
467.925 121.154 li
463.281 121.154 li
cp
0 0 0.518 rgb
f
463.281 121.154 mo
467.925 121.154 li
467.925 120.791 li
463.281 120.791 li
cp
0 0 0.536 rgb
f
463.281 120.792 mo
467.925 120.792 li
467.925 120.429 li
463.281 120.429 li
cp
0 0 0.553 rgb
f
463.281 120.429 mo
467.925 120.429 li
467.925 120.066 li
463.281 120.066 li
cp
0 0 0.571 rgb
f
463.281 120.066 mo
467.925 120.066 li
467.925 119.703 li
463.281 119.703 li
cp
0 0 0.589 rgb
f
463.281 119.703 mo
467.925 119.703 li
467.925 119.34 li
463.281 119.34 li
cp
0 0 0.607 rgb
f
463.281 119.34 mo
467.925 119.34 li
467.925 118.977 li
463.281 118.977 li
cp
0 0 0.625 rgb
f
463.281 118.977 mo
467.925 118.977 li
467.925 118.614 li
463.281 118.614 li
cp
0 0 0.643 rgb
f
463.281 118.615 mo
467.925 118.615 li
467.925 118.252 li
463.281 118.252 li
cp
0 0 0.66 rgb
f
463.281 118.252 mo
467.925 118.252 li
467.925 117.889 li
463.281 117.889 li
cp
0 0 0.678 rgb
f
463.281 117.889 mo
467.925 117.889 li
467.925 117.526 li
463.281 117.526 li
cp
0 0 0.696 rgb
f
463.281 117.526 mo
467.925 117.526 li
467.925 117.163 li
463.281 117.163 li
cp
0 0 0.714 rgb
f
463.281 117.163 mo
467.925 117.163 li
467.925 116.8 li
463.281 116.8 li
cp
0 0 0.732 rgb
f
463.281 116.801 mo
467.925 116.801 li
467.925 116.438 li
463.281 116.438 li
cp
0 0 0.75 rgb
f
463.281 116.438 mo
467.925 116.438 li
467.925 116.075 li
463.281 116.075 li
cp
0 0 0.767 rgb
f
463.281 116.075 mo
467.925 116.075 li
467.925 115.712 li
463.281 115.712 li
cp
0 0 0.785 rgb
f
463.281 115.712 mo
467.925 115.712 li
467.925 115.349 li
463.281 115.349 li
cp
0 0 0.803 rgb
f
463.281 115.349 mo
467.925 115.349 li
467.925 114.986 li
463.281 114.986 li
cp
0 0 0.821 rgb
f
463.281 114.987 mo
467.925 114.987 li
467.925 114.624 li
463.281 114.624 li
cp
0 0 0.839 rgb
f
463.281 114.624 mo
467.925 114.624 li
467.925 114.261 li
463.281 114.261 li
cp
0 0 0.857 rgb
f
463.281 114.261 mo
467.925 114.261 li
467.925 113.898 li
463.281 113.898 li
cp
0 0 0.874 rgb
f
463.281 113.898 mo
467.925 113.898 li
467.925 113.535 li
463.281 113.535 li
cp
0 0 0.892 rgb
f
463.281 113.535 mo
467.925 113.535 li
467.925 113.172 li
463.281 113.172 li
cp
0 0 0.91 rgb
f
463.281 113.173 mo
467.925 113.173 li
467.925 112.81 li
463.281 112.81 li
cp
0 0 0.928 rgb
f
463.281 112.81 mo
467.925 112.81 li
467.925 112.447 li
463.281 112.447 li
cp
0 0 0.946 rgb
f
463.281 112.447 mo
467.925 112.447 li
467.925 112.084 li
463.281 112.084 li
cp
0 0 0.963 rgb
f
463.281 112.084 mo
467.925 112.084 li
467.925 111.721 li
463.281 111.721 li
cp
0 0 0.981 rgb
f
463.281 111.721 mo
467.925 111.721 li
467.925 111.358 li
463.281 111.358 li
cp
0 0 0.999 rgb
f
463.281 111.358 mo
467.925 111.358 li
467.925 110.995 li
463.281 110.995 li
cp
0 0 1 rgb
f
463.281 110.996 mo
467.925 110.996 li
467.925 110.633 li
463.281 110.633 li
cp
f
463.281 110.633 mo
467.925 110.633 li
467.925 110.27 li
463.281 110.27 li
cp
f
463.281 110.27 mo
467.925 110.27 li
467.925 109.907 li
463.281 109.907 li
cp
0 0.002 1 rgb
f
463.281 109.907 mo
467.925 109.907 li
467.925 109.544 li
463.281 109.544 li
cp
0 0.018 1 rgb
f
463.281 109.544 mo
467.925 109.544 li
467.925 109.181 li
463.281 109.181 li
cp
0 0.033 1 rgb
f
463.281 109.182 mo
467.925 109.182 li
467.925 108.819 li
463.281 108.819 li
cp
0 0.049 1 rgb
f
463.281 108.819 mo
467.925 108.819 li
467.925 108.456 li
463.281 108.456 li
cp
0 0.065 1 rgb
f
463.281 108.456 mo
467.925 108.456 li
467.925 108.093 li
463.281 108.093 li
cp
0 0.08 1 rgb
f
463.281 108.093 mo
467.925 108.093 li
467.925 107.73 li
463.281 107.73 li
cp
0 0.096 1 rgb
f
463.281 107.73 mo
467.925 107.73 li
467.925 107.367 li
463.281 107.367 li
cp
0 0.112 1 rgb
f
463.281 107.367 mo
467.925 107.367 li
467.925 107.004 li
463.281 107.004 li
cp
0 0.127 1 rgb
f
463.281 107.005 mo
467.925 107.005 li
467.925 106.642 li
463.281 106.642 li
cp
0 0.143 1 rgb
f
463.281 106.642 mo
467.925 106.642 li
467.925 106.279 li
463.281 106.279 li
cp
0 0.159 1 rgb
f
463.281 106.279 mo
467.925 106.279 li
467.925 105.916 li
463.281 105.916 li
cp
0 0.175 1 rgb
f
463.281 105.916 mo
467.925 105.916 li
467.925 105.553 li
463.281 105.553 li
cp
0 0.19 1 rgb
f
463.281 105.553 mo
467.925 105.553 li
467.925 105.19 li
463.281 105.19 li
cp
0 0.206 1 rgb
f
463.281 105.191 mo
467.925 105.191 li
467.925 104.828 li
463.281 104.828 li
cp
0 0.222 1 rgb
f
463.281 104.828 mo
467.925 104.828 li
467.925 104.465 li
463.281 104.465 li
cp
0 0.237 1 rgb
f
463.281 104.465 mo
467.925 104.465 li
467.925 104.102 li
463.281 104.102 li
cp
0 0.253 1 rgb
f
463.281 104.102 mo
467.925 104.102 li
467.925 103.739 li
463.281 103.739 li
cp
0 0.269 1 rgb
f
463.281 103.739 mo
467.925 103.739 li
467.925 103.376 li
463.281 103.376 li
cp
0 0.284 1 rgb
f
463.281 103.377 mo
467.925 103.377 li
467.925 103.014 li
463.281 103.014 li
cp
0 0.3 1 rgb
f
463.281 103.014 mo
467.925 103.014 li
467.925 102.651 li
463.281 102.651 li
cp
0 0.316 1 rgb
f
463.281 102.651 mo
467.925 102.651 li
467.925 102.288 li
463.281 102.288 li
cp
0 0.331 1 rgb
f
463.281 102.288 mo
467.925 102.288 li
467.925 101.925 li
463.281 101.925 li
cp
0 0.347 1 rgb
f
463.281 101.925 mo
467.925 101.925 li
467.925 101.562 li
463.281 101.562 li
cp
0 0.363 1 rgb
f
463.281 101.562 mo
467.925 101.562 li
467.925 101.199 li
463.281 101.199 li
cp
0 0.378 1 rgb
f
463.281 101.2 mo
467.925 101.2 li
467.925 100.837 li
463.281 100.837 li
cp
0 0.394 1 rgb
f
463.281 100.837 mo
467.925 100.837 li
467.925 100.474 li
463.281 100.474 li
cp
0 0.41 1 rgb
f
463.281 100.474 mo
467.925 100.474 li
467.925 100.111 li
463.281 100.111 li
cp
0 0.425 1 rgb
f
463.281 100.111 mo
467.925 100.111 li
467.925 99.748 li
463.281 99.748 li
cp
0 0.441 1 rgb
f
463.281 99.748 mo
467.925 99.748 li
467.925 99.385 li
463.281 99.385 li
cp
0 0.457 1 rgb
f
463.281 99.386 mo
467.925 99.386 li
467.925 99.023 li
463.281 99.023 li
cp
0 0.473 1 rgb
f
463.281 99.023 mo
467.925 99.023 li
467.925 98.66 li
463.281 98.66 li
cp
0 0.488 1 rgb
f
463.281 98.66 mo
467.925 98.66 li
467.925 98.297 li
463.281 98.297 li
cp
0 0.504 1 rgb
f
463.281 98.297 mo
467.925 98.297 li
467.925 97.934 li
463.281 97.934 li
cp
0 0.52 1 rgb
f
463.281 97.934 mo
467.925 97.934 li
467.925 97.571 li
463.281 97.571 li
cp
0 0.535 1 rgb
f
463.281 97.572 mo
467.925 97.572 li
467.925 97.209 li
463.281 97.209 li
cp
0 0.551 1 rgb
f
463.281 97.209 mo
467.925 97.209 li
467.925 96.846 li
463.281 96.846 li
cp
0 0.567 1 rgb
f
463.281 96.846 mo
467.925 96.846 li
467.925 96.483 li
463.281 96.483 li
cp
0 0.582 1 rgb
f
463.281 96.483 mo
467.925 96.483 li
467.925 96.12 li
463.281 96.12 li
cp
0 0.598 1 rgb
f
463.281 96.12 mo
467.925 96.12 li
467.925 95.757 li
463.281 95.757 li
cp
0 0.614 1 rgb
f
463.281 95.758 mo
467.925 95.758 li
467.925 95.395 li
463.281 95.395 li
cp
0 0.629 1 rgb
f
463.281 95.395 mo
467.925 95.395 li
467.925 95.032 li
463.281 95.032 li
cp
0 0.645 1 rgb
f
463.281 95.032 mo
467.925 95.032 li
467.925 94.669 li
463.281 94.669 li
cp
0 0.661 1 rgb
f
463.281 94.669 mo
467.925 94.669 li
467.925 94.306 li
463.281 94.306 li
cp
0 0.676 1 rgb
f
463.281 94.306 mo
467.925 94.306 li
467.925 93.943 li
463.281 93.943 li
cp
0 0.692 1 rgb
f
463.281 93.943 mo
467.925 93.943 li
467.925 93.58 li
463.281 93.58 li
cp
0 0.708 1 rgb
f
463.281 93.581 mo
467.925 93.581 li
467.925 93.218 li
463.281 93.218 li
cp
0 0.724 1 rgb
f
463.281 93.218 mo
467.925 93.218 li
467.925 92.855 li
463.281 92.855 li
cp
0 0.739 1 rgb
f
463.281 92.855 mo
467.925 92.855 li
467.925 92.492 li
463.281 92.492 li
cp
0 0.755 1 rgb
f
463.281 92.492 mo
467.925 92.492 li
467.925 92.129 li
463.281 92.129 li
cp
0 0.771 1 rgb
f
463.281 92.129 mo
467.925 92.129 li
467.925 91.766 li
463.281 91.766 li
cp
0 0.786 1 rgb
f
463.281 91.767 mo
467.925 91.767 li
467.925 91.404 li
463.281 91.404 li
cp
0 0.802 1 rgb
f
463.281 91.404 mo
467.925 91.404 li
467.925 91.041 li
463.281 91.041 li
cp
0 0.818 1 rgb
f
463.281 91.041 mo
467.925 91.041 li
467.925 90.678 li
463.281 90.678 li
cp
0 0.833 1 rgb
f
463.281 90.678 mo
467.925 90.678 li
467.925 90.315 li
463.281 90.315 li
cp
0 0.849 1 rgb
f
463.281 90.315 mo
467.925 90.315 li
467.925 89.952 li
463.281 89.952 li
cp
0 0.865 0.996 rgb
f
463.281 89.952 mo
467.925 89.952 li
467.925 89.589 li
463.281 89.589 li
cp
0 0.88 0.984 rgb
f
463.281 89.59 mo
467.925 89.59 li
467.925 89.227 li
463.281 89.227 li
cp
0 0.896 0.971 rgb
f
463.281 89.227 mo
467.925 89.227 li
467.925 88.864 li
463.281 88.864 li
cp
0.009 0.912 0.958 rgb
f
463.281 88.864 mo
467.925 88.864 li
467.925 88.501 li
463.281 88.501 li
cp
0.022 0.927 0.946 rgb
f
463.281 88.501 mo
467.925 88.501 li
467.925 88.138 li
463.281 88.138 li
cp
0.035 0.943 0.933 rgb
f
463.281 88.138 mo
467.925 88.138 li
467.925 87.775 li
463.281 87.775 li
cp
0.047 0.959 0.92 rgb
f
463.281 87.776 mo
467.925 87.776 li
467.925 87.413 li
463.281 87.413 li
cp
0.06 0.975 0.908 rgb
f
463.281 87.413 mo
467.925 87.413 li
467.925 87.05 li
463.281 87.05 li
cp
0.073 0.99 0.895 rgb
f
463.281 87.05 mo
467.925 87.05 li
467.925 86.687 li
463.281 86.687 li
cp
0.085 1 0.882 rgb
f
463.281 86.687 mo
467.925 86.687 li
467.925 86.324 li
463.281 86.324 li
cp
0.098 1 0.87 rgb
f
463.281 86.324 mo
467.925 86.324 li
467.925 85.961 li
463.281 85.961 li
cp
0.111 1 0.857 rgb
f
463.281 85.962 mo
467.925 85.962 li
467.925 85.599 li
463.281 85.599 li
cp
0.123 1 0.844 rgb
f
463.281 85.599 mo
467.925 85.599 li
467.925 85.236 li
463.281 85.236 li
cp
0.136 1 0.832 rgb
f
463.281 85.236 mo
467.925 85.236 li
467.925 84.873 li
463.281 84.873 li
cp
0.149 1 0.819 rgb
f
463.281 84.873 mo
467.925 84.873 li
467.925 84.51 li
463.281 84.51 li
cp
0.161 1 0.806 rgb
f
463.281 84.51 mo
467.925 84.51 li
467.925 84.147 li
463.281 84.147 li
cp
0.174 1 0.794 rgb
f
463.281 84.148 mo
467.925 84.148 li
467.925 83.785 li
463.281 83.785 li
cp
0.187 1 0.781 rgb
f
463.281 83.785 mo
467.925 83.785 li
467.925 83.422 li
463.281 83.422 li
cp
0.199 1 0.768 rgb
f
463.281 83.422 mo
467.925 83.422 li
467.925 83.059 li
463.281 83.059 li
cp
0.212 1 0.756 rgb
f
463.281 83.059 mo
467.925 83.059 li
467.925 82.696 li
463.281 82.696 li
cp
0.225 1 0.743 rgb
f
463.281 82.696 mo
467.925 82.696 li
467.925 82.333 li
463.281 82.333 li
cp
0.237 1 0.731 rgb
f
463.281 82.333 mo
467.925 82.333 li
467.925 81.97 li
463.281 81.97 li
cp
0.25 1 0.718 rgb
f
463.281 81.971 mo
467.925 81.971 li
467.925 81.608 li
463.281 81.608 li
cp
0.262 1 0.705 rgb
f
463.281 81.608 mo
467.925 81.608 li
467.925 81.245 li
463.281 81.245 li
cp
0.275 1 0.693 rgb
f
463.281 81.245 mo
467.925 81.245 li
467.925 80.882 li
463.281 80.882 li
cp
0.288 1 0.68 rgb
f
463.281 80.882 mo
467.925 80.882 li
467.925 80.519 li
463.281 80.519 li
cp
0.3 1 0.667 rgb
f
463.281 80.519 mo
467.925 80.519 li
467.925 80.156 li
463.281 80.156 li
cp
0.313 1 0.655 rgb
f
463.281 80.157 mo
467.925 80.157 li
467.925 79.794 li
463.281 79.794 li
cp
0.326 1 0.642 rgb
f
463.281 79.794 mo
467.925 79.794 li
467.925 79.431 li
463.281 79.431 li
cp
0.338 1 0.629 rgb
f
463.281 79.431 mo
467.925 79.431 li
467.925 79.068 li
463.281 79.068 li
cp
0.351 1 0.617 rgb
f
463.281 79.068 mo
467.925 79.068 li
467.925 78.705 li
463.281 78.705 li
cp
0.364 1 0.604 rgb
f
463.281 78.705 mo
467.925 78.705 li
467.925 78.342 li
463.281 78.342 li
cp
0.376 1 0.591 rgb
f
463.281 78.342 mo
467.925 78.342 li
467.925 77.979 li
463.281 77.979 li
cp
0.389 1 0.579 rgb
f
463.281 77.98 mo
467.925 77.98 li
467.925 77.617 li
463.281 77.617 li
cp
0.402 1 0.566 rgb
f
463.281 77.617 mo
467.925 77.617 li
467.925 77.254 li
463.281 77.254 li
cp
0.414 1 0.553 rgb
f
463.281 77.254 mo
467.925 77.254 li
467.925 76.891 li
463.281 76.891 li
cp
0.427 1 0.541 rgb
f
463.281 76.891 mo
467.925 76.891 li
467.925 76.528 li
463.281 76.528 li
cp
0.44 1 0.528 rgb
f
463.281 76.528 mo
467.925 76.528 li
467.925 76.165 li
463.281 76.165 li
cp
0.452 1 0.516 rgb
f
463.281 76.166 mo
467.925 76.166 li
467.925 75.803 li
463.281 75.803 li
cp
0.465 1 0.503 rgb
f
463.281 75.803 mo
467.925 75.803 li
467.925 75.44 li
463.281 75.44 li
cp
0.478 1 0.49 rgb
f
463.281 75.44 mo
467.925 75.44 li
467.925 75.077 li
463.281 75.077 li
cp
0.49 1 0.478 rgb
f
463.281 75.077 mo
467.925 75.077 li
467.925 74.714 li
463.281 74.714 li
cp
0.503 1 0.465 rgb
f
463.281 74.714 mo
467.925 74.714 li
467.925 74.351 li
463.281 74.351 li
cp
0.516 1 0.452 rgb
f
463.281 74.352 mo
467.925 74.352 li
467.925 73.989 li
463.281 73.989 li
cp
0.528 1 0.44 rgb
f
463.281 73.989 mo
467.925 73.989 li
467.925 73.626 li
463.281 73.626 li
cp
0.541 1 0.427 rgb
f
463.281 73.626 mo
467.925 73.626 li
467.925 73.263 li
463.281 73.263 li
cp
0.553 1 0.414 rgb
f
463.281 73.263 mo
467.925 73.263 li
467.925 72.9 li
463.281 72.9 li
cp
0.566 1 0.402 rgb
f
463.281 72.9 mo
467.925 72.9 li
467.925 72.537 li
463.281 72.537 li
cp
0.579 1 0.389 rgb
f
463.281 72.538 mo
467.925 72.538 li
467.925 72.175 li
463.281 72.175 li
cp
0.591 1 0.376 rgb
f
463.281 72.175 mo
467.925 72.175 li
467.925 71.812 li
463.281 71.812 li
cp
0.604 1 0.364 rgb
f
463.281 71.812 mo
467.925 71.812 li
467.925 71.449 li
463.281 71.449 li
cp
0.617 1 0.351 rgb
f
463.281 71.449 mo
467.925 71.449 li
467.925 71.086 li
463.281 71.086 li
cp
0.629 1 0.338 rgb
f
463.281 71.086 mo
467.925 71.086 li
467.925 70.723 li
463.281 70.723 li
cp
0.642 1 0.326 rgb
f
463.281 70.723 mo
467.925 70.723 li
467.925 70.36 li
463.281 70.36 li
cp
0.655 1 0.313 rgb
f
463.281 70.361 mo
467.925 70.361 li
467.925 69.998 li
463.281 69.998 li
cp
0.667 1 0.3 rgb
f
463.281 69.998 mo
467.925 69.998 li
467.925 69.635 li
463.281 69.635 li
cp
0.68 1 0.288 rgb
f
463.281 69.635 mo
467.925 69.635 li
467.925 69.272 li
463.281 69.272 li
cp
0.693 1 0.275 rgb
f
463.281 69.272 mo
467.925 69.272 li
467.925 68.909 li
463.281 68.909 li
cp
0.705 1 0.262 rgb
f
463.281 68.909 mo
467.925 68.909 li
467.925 68.546 li
463.281 68.546 li
cp
0.718 1 0.25 rgb
f
463.281 68.547 mo
467.925 68.547 li
467.925 68.184 li
463.281 68.184 li
cp
0.731 1 0.237 rgb
f
463.281 68.184 mo
467.925 68.184 li
467.925 67.821 li
463.281 67.821 li
cp
0.743 1 0.225 rgb
f
463.281 67.821 mo
467.925 67.821 li
467.925 67.458 li
463.281 67.458 li
cp
0.756 1 0.212 rgb
f
463.281 67.458 mo
467.925 67.458 li
467.925 67.095 li
463.281 67.095 li
cp
0.768 1 0.199 rgb
f
463.281 67.095 mo
467.925 67.095 li
467.925 66.732 li
463.281 66.732 li
cp
0.781 1 0.187 rgb
f
463.281 66.732 mo
467.925 66.732 li
467.925 66.369 li
463.281 66.369 li
cp
0.794 1 0.174 rgb
f
463.281 66.37 mo
467.925 66.37 li
467.925 66.007 li
463.281 66.007 li
cp
0.806 1 0.161 rgb
f
463.281 66.007 mo
467.925 66.007 li
467.925 65.644 li
463.281 65.644 li
cp
0.819 1 0.149 rgb
f
463.281 65.644 mo
467.925 65.644 li
467.925 65.281 li
463.281 65.281 li
cp
0.832 1 0.136 rgb
f
463.281 65.281 mo
467.925 65.281 li
467.925 64.918 li
463.281 64.918 li
cp
0.844 1 0.123 rgb
f
463.281 64.918 mo
467.925 64.918 li
467.925 64.555 li
463.281 64.555 li
cp
0.857 1 0.111 rgb
f
463.281 64.556 mo
467.925 64.556 li
467.925 64.193 li
463.281 64.193 li
cp
0.87 1 0.098 rgb
f
463.281 64.193 mo
467.925 64.193 li
467.925 63.83 li
463.281 63.83 li
cp
0.882 1 0.085 rgb
f
463.281 63.83 mo
467.925 63.83 li
467.925 63.467 li
463.281 63.467 li
cp
0.895 1 0.073 rgb
f
463.281 63.467 mo
467.925 63.467 li
467.925 63.104 li
463.281 63.104 li
cp
0.908 1 0.06 rgb
f
463.281 63.104 mo
467.925 63.104 li
467.925 62.741 li
463.281 62.741 li
cp
0.92 1 0.047 rgb
f
463.281 62.742 mo
467.925 62.742 li
467.925 62.379 li
463.281 62.379 li
cp
0.933 1 0.035 rgb
f
463.281 62.379 mo
467.925 62.379 li
467.925 62.016 li
463.281 62.016 li
cp
0.946 0.988 0.022 rgb
f
463.281 62.016 mo
467.925 62.016 li
467.925 61.653 li
463.281 61.653 li
cp
0.958 0.974 0.009 rgb
f
463.281 61.653 mo
467.925 61.653 li
467.925 61.29 li
463.281 61.29 li
cp
0.971 0.959 0 rgb
f
463.281 61.29 mo
467.925 61.29 li
467.925 60.927 li
463.281 60.927 li
cp
0.984 0.945 0 rgb
f
463.281 60.928 mo
467.925 60.928 li
467.925 60.565 li
463.281 60.565 li
cp
0.996 0.93 0 rgb
f
463.281 60.565 mo
467.925 60.565 li
467.925 60.202 li
463.281 60.202 li
cp
1 0.916 0 rgb
f
463.281 60.202 mo
467.925 60.202 li
467.925 59.839 li
463.281 59.839 li
cp
1 0.901 0 rgb
f
463.281 59.839 mo
467.925 59.839 li
467.925 59.476 li
463.281 59.476 li
cp
1 0.887 0 rgb
f
463.281 59.476 mo
467.925 59.476 li
467.925 59.113 li
463.281 59.113 li
cp
1 0.872 0 rgb
f
463.281 59.113 mo
467.925 59.113 li
467.925 58.75 li
463.281 58.75 li
cp
1 0.858 0 rgb
f
463.281 58.751 mo
467.925 58.751 li
467.925 58.388 li
463.281 58.388 li
cp
1 0.843 0 rgb
f
463.281 58.388 mo
467.925 58.388 li
467.925 58.025 li
463.281 58.025 li
cp
1 0.829 0 rgb
f
463.281 58.025 mo
467.925 58.025 li
467.925 57.662 li
463.281 57.662 li
cp
1 0.814 0 rgb
f
463.281 57.662 mo
467.925 57.662 li
467.925 57.299 li
463.281 57.299 li
cp
1 0.8 0 rgb
f
463.281 57.299 mo
467.925 57.299 li
467.925 56.936 li
463.281 56.936 li
cp
1 0.785 0 rgb
f
463.281 56.937 mo
467.925 56.937 li
467.925 56.574 li
463.281 56.574 li
cp
1 0.771 0 rgb
f
463.281 56.574 mo
467.925 56.574 li
467.925 56.211 li
463.281 56.211 li
cp
1 0.756 0 rgb
f
463.281 56.211 mo
467.925 56.211 li
467.925 55.848 li
463.281 55.848 li
cp
1 0.741 0 rgb
f
463.281 55.848 mo
467.925 55.848 li
467.925 55.485 li
463.281 55.485 li
cp
1 0.727 0 rgb
f
463.281 55.485 mo
467.925 55.485 li
467.925 55.122 li
463.281 55.122 li
cp
1 0.712 0 rgb
f
463.281 55.122 mo
467.925 55.122 li
467.925 54.759 li
463.281 54.759 li
cp
1 0.698 0 rgb
f
463.281 54.76 mo
467.925 54.76 li
467.925 54.397 li
463.281 54.397 li
cp
1 0.683 0 rgb
f
463.281 54.397 mo
467.925 54.397 li
467.925 54.034 li
463.281 54.034 li
cp
1 0.669 0 rgb
f
463.281 54.034 mo
467.925 54.034 li
467.925 53.671 li
463.281 53.671 li
cp
1 0.654 0 rgb
f
463.281 53.671 mo
467.925 53.671 li
467.925 53.308 li
463.281 53.308 li
cp
1 0.64 0 rgb
f
463.281 53.308 mo
467.925 53.308 li
467.925 52.945 li
463.281 52.945 li
cp
1 0.625 0 rgb
f
463.281 52.946 mo
467.925 52.946 li
467.925 52.583 li
463.281 52.583 li
cp
1 0.611 0 rgb
f
463.281 52.583 mo
467.925 52.583 li
467.925 52.22 li
463.281 52.22 li
cp
1 0.596 0 rgb
f
463.281 52.22 mo
467.925 52.22 li
467.925 51.857 li
463.281 51.857 li
cp
1 0.582 0 rgb
f
463.281 51.857 mo
467.925 51.857 li
467.925 51.494 li
463.281 51.494 li
cp
1 0.567 0 rgb
f
463.281 51.494 mo
467.925 51.494 li
467.925 51.131 li
463.281 51.131 li
cp
1 0.553 0 rgb
f
463.281 51.132 mo
467.925 51.132 li
467.925 50.769 li
463.281 50.769 li
cp
1 0.538 0 rgb
f
463.281 50.769 mo
467.925 50.769 li
467.925 50.406 li
463.281 50.406 li
cp
1 0.524 0 rgb
f
463.281 50.406 mo
467.925 50.406 li
467.925 50.043 li
463.281 50.043 li
cp
1 0.509 0 rgb
f
463.281 50.043 mo
467.925 50.043 li
467.925 49.68 li
463.281 49.68 li
cp
1 0.495 0 rgb
f
463.281 49.68 mo
467.925 49.68 li
467.925 49.317 li
463.281 49.317 li
cp
1 0.48 0 rgb
f
463.281 49.318 mo
467.925 49.318 li
467.925 48.955 li
463.281 48.955 li
cp
1 0.465 0 rgb
f
463.281 48.955 mo
467.925 48.955 li
467.925 48.592 li
463.281 48.592 li
cp
1 0.451 0 rgb
f
463.281 48.592 mo
467.925 48.592 li
467.925 48.229 li
463.281 48.229 li
cp
1 0.436 0 rgb
f
463.281 48.229 mo
467.925 48.229 li
467.925 47.866 li
463.281 47.866 li
cp
1 0.422 0 rgb
f
463.281 47.866 mo
467.925 47.866 li
467.925 47.503 li
463.281 47.503 li
cp
1 0.407 0 rgb
f
463.281 47.503 mo
467.925 47.503 li
467.925 47.14 li
463.281 47.14 li
cp
1 0.393 0 rgb
f
463.281 47.141 mo
467.925 47.141 li
467.925 46.778 li
463.281 46.778 li
cp
1 0.378 0 rgb
f
463.281 46.778 mo
467.925 46.778 li
467.925 46.415 li
463.281 46.415 li
cp
1 0.364 0 rgb
f
463.281 46.415 mo
467.925 46.415 li
467.925 46.052 li
463.281 46.052 li
cp
1 0.349 0 rgb
f
463.281 46.052 mo
467.925 46.052 li
467.925 45.689 li
463.281 45.689 li
cp
1 0.335 0 rgb
f
463.281 45.689 mo
467.925 45.689 li
467.925 45.326 li
463.281 45.326 li
cp
1 0.32 0 rgb
f
463.281 45.327 mo
467.925 45.327 li
467.925 44.964 li
463.281 44.964 li
cp
1 0.306 0 rgb
f
463.281 44.964 mo
467.925 44.964 li
467.925 44.601 li
463.281 44.601 li
cp
1 0.291 0 rgb
f
463.281 44.601 mo
467.925 44.601 li
467.925 44.238 li
463.281 44.238 li
cp
1 0.277 0 rgb
f
463.281 44.238 mo
467.925 44.238 li
467.925 43.875 li
463.281 43.875 li
cp
1 0.262 0 rgb
f
463.281 43.875 mo
467.925 43.875 li
467.925 43.512 li
463.281 43.512 li
cp
1 0.248 0 rgb
f
463.281 43.512 mo
467.925 43.512 li
467.925 43.149 li
463.281 43.149 li
cp
1 0.233 0 rgb
f
463.281 43.15 mo
467.925 43.15 li
467.925 42.787 li
463.281 42.787 li
cp
1 0.219 0 rgb
f
463.281 42.787 mo
467.925 42.787 li
467.925 42.424 li
463.281 42.424 li
cp
1 0.204 0 rgb
f
463.281 42.424 mo
467.925 42.424 li
467.925 42.061 li
463.281 42.061 li
cp
1 0.19 0 rgb
f
463.281 42.061 mo
467.925 42.061 li
467.925 41.698 li
463.281 41.698 li
cp
1 0.175 0 rgb
f
463.281 41.698 mo
467.925 41.698 li
467.925 41.335 li
463.281 41.335 li
cp
1 0.16 0 rgb
f
463.281 41.336 mo
467.925 41.336 li
467.925 40.973 li
463.281 40.973 li
cp
1 0.146 0 rgb
f
463.281 40.973 mo
467.925 40.973 li
467.925 40.61 li
463.281 40.61 li
cp
1 0.131 0 rgb
f
463.281 40.61 mo
467.925 40.61 li
467.925 40.247 li
463.281 40.247 li
cp
1 0.117 0 rgb
f
463.281 40.247 mo
467.925 40.247 li
467.925 39.884 li
463.281 39.884 li
cp
1 0.102 0 rgb
f
463.281 39.884 mo
467.925 39.884 li
467.925 39.521 li
463.281 39.521 li
cp
1 0.088 0 rgb
f
463.281 39.522 mo
467.925 39.522 li
467.925 39.159 li
463.281 39.159 li
cp
0.999 0.073 0 rgb
f
463.281 39.159 mo
467.925 39.159 li
467.925 38.796 li
463.281 38.796 li
cp
0.981 0.059 0 rgb
f
463.281 38.796 mo
467.925 38.796 li
467.925 38.433 li
463.281 38.433 li
cp
0.963 0.044 0 rgb
f
463.281 38.433 mo
467.925 38.433 li
467.925 38.07 li
463.281 38.07 li
cp
0.946 0.03 0 rgb
f
463.281 38.07 mo
467.925 38.07 li
467.925 37.707 li
463.281 37.707 li
cp
0.928 0.015 0 rgb
f
463.281 37.708 mo
467.925 37.708 li
467.925 37.345 li
463.281 37.345 li
cp
0.91 0.001 0 rgb
f
463.281 37.345 mo
467.925 37.345 li
467.925 36.982 li
463.281 36.982 li
cp
0.892 0 0 rgb
f
463.281 36.982 mo
467.925 36.982 li
467.925 36.619 li
463.281 36.619 li
cp
0.874 0 0 rgb
f
463.281 36.619 mo
467.925 36.619 li
467.925 36.256 li
463.281 36.256 li
cp
0.857 0 0 rgb
f
463.281 36.256 mo
467.925 36.256 li
467.925 35.893 li
463.281 35.893 li
cp
0.839 0 0 rgb
f
463.281 35.893 mo
467.925 35.893 li
467.925 35.53 li
463.281 35.53 li
cp
0.821 0 0 rgb
f
463.281 35.531 mo
467.925 35.531 li
467.925 35.168 li
463.281 35.168 li
cp
0.803 0 0 rgb
f
463.281 35.168 mo
467.925 35.168 li
467.925 34.805 li
463.281 34.805 li
cp
0.785 0 0 rgb
f
463.281 34.805 mo
467.925 34.805 li
467.925 34.442 li
463.281 34.442 li
cp
0.767 0 0 rgb
f
463.281 34.442 mo
467.925 34.442 li
467.925 34.079 li
463.281 34.079 li
cp
0.75 0 0 rgb
f
463.281 34.079 mo
467.925 34.079 li
467.925 33.716 li
463.281 33.716 li
cp
0.732 0 0 rgb
f
463.281 33.717 mo
467.925 33.717 li
467.925 33.354 li
463.281 33.354 li
cp
0.714 0 0 rgb
f
463.281 33.354 mo
467.925 33.354 li
467.925 32.991 li
463.281 32.991 li
cp
0.696 0 0 rgb
f
463.281 32.991 mo
467.925 32.991 li
467.925 32.628 li
463.281 32.628 li
cp
0.678 0 0 rgb
f
463.281 32.628 mo
467.925 32.628 li
467.925 32.265 li
463.281 32.265 li
cp
0.66 0 0 rgb
f
463.281 32.265 mo
467.925 32.265 li
467.925 31.902 li
463.281 31.902 li
cp
0.643 0 0 rgb
f
463.281 31.902 mo
467.925 31.902 li
467.925 31.539 li
463.281 31.539 li
cp
0.625 0 0 rgb
f
463.281 31.54 mo
467.925 31.54 li
467.925 31.177 li
463.281 31.177 li
cp
0.607 0 0 rgb
f
463.281 31.177 mo
467.925 31.177 li
467.925 30.814 li
463.281 30.814 li
cp
0.589 0 0 rgb
f
463.281 30.814 mo
467.925 30.814 li
467.925 30.451 li
463.281 30.451 li
cp
0.571 0 0 rgb
f
463.281 30.451 mo
467.925 30.451 li
467.925 30.088 li
463.281 30.088 li
cp
0.553 0 0 rgb
f
463.281 30.088 mo
467.925 30.088 li
467.925 29.725 li
463.281 29.725 li
cp
0.536 0 0 rgb
f
463.281 29.726 mo
467.925 29.726 li
467.925 29.363 li
463.281 29.363 li
cp
0.518 0 0 rgb
f
463.281 29.363 mo
467.925 29.363 li
467.925 29 li
463.281 29 li
cp
0.5 0 0 rgb
f
grestore
1 lw
463.281 121.88 mo
463.281 121.517 li
463.281 29.363 li
463.281 29 li
467.925 29 li
467.925 29.363 li
467.925 121.517 li
467.925 121.88 li
463.281 121.88 li
0 gry
@
gsave
463.425 112.541 mo
468.425 112.541 li
468.425 111.541 li
463.425 111.541 li
cp
clp
463.925 112.041 mo
467.925 112.041 li
@
grestore
PBVMPR+CMSY8*1 [7.97 0 0 -7.97 0 0 ]msf471.925 114.55 mo(\241)shPBVMPQ+NimbusSanL-Regu*1 [7.97 0 0 -7.97 0 0 ]msf478.508 114.55 mo(1.5)[4.42328 2.20764 0 ]xshgsave
463.425 80.4267 mo
468.425 80.4267 li
468.425 79.4267 li
463.425 79.4267 li
cp
clp
463.925 79.9267 mo
467.925 79.9267 li
@
grestore
PBVMPQ+NimbusSanL-Regu*1 [7.97 0 0 -7.97 0 0 ]msf471.925 83.123 mo(0.0)[4.42328 2.20764 0 ]xshgsave
463.425 37.6077 mo
468.425 37.6077 li
468.425 36.6077 li
463.425 36.6077 li
cp
clp
463.925 37.1077 mo
467.925 37.1077 li
@
grestore
PBVMPQ+NimbusSanL-Regu*1 [7.97 0 0 -7.97 0 0 ]msf471.925 40.304 mo(2.0)[4.42328 2.20764 0 ]xshgrestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
] del_res
true set_gvm
/PBVMPQ+NimbusSanL-Regu*1 uf/PBVMPQ+NimbusSanL-Regu uf/TBGAAA+NimbusSanL-Regu uf/PBVMPS+NimbusSanL-Bold*1 uf/PBVMPS+NimbusSanL-Bold uf/WGJRMX+NimbusSanL-Bold uf/PBVMPR+CMSY8*1 uf/PBVMPR+CMSY8 uf/JXDRMX+CMSY8 ufreset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
